
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASTERISK AUTO BITAND BITOR BREAK CASE CHAR CHAR_L COMMA COMMENT COMPLEX_ASSIGN CONST CONTINUE DEFAULT DEFINE DIVIDE DO DOUBLE ELSE ENDIF ENUM EQ EXTERN FLOAT FLOAT_L FOR GE GOTO GT ID IF IFNDEF INCLUDE INCREMENT INLINE INT INT_L LBRACE LBRACK LCOMMENT LE LONG LPAREN LSHIFT LT MEMBER MINUS NEGATE NEQ NONDECIMAL_L NUMBER OR PERCENT PLUS RBRACE RBRACK REGISTER RESTRICT RETURN RPAREN RSHIFT SEMI SHORT SIGNED SIMPLE_ASSIGN SIZEOF STATIC STRING_L STRUCT SWITCH TYPEDEF UINT16_T UINT8_T UNION UNSIGNED VOID VOLATILE WHILE _ALIGNAS _ALIGNOF _ATOMIC _BOOL _COMPLEX _GENERIC _IMAGERY _NORETURN _STATIC_ASSERT _THREAD_LOCALnode_list :\n                 | node_list node node : include\n             | define\n             | if\n             | func_def                          \n             | func_decl\n             | statement\n             | control_expr\n             | struct_defliteral  : FLOAT_L\n                | INT_L\n                | CHAR_L\n                | STRING_L\n                | NONDECIMAL_Lassign : SIMPLE_ASSIGN\n              | COMPLEX_ASSIGNstruct_type : STRUCT IDtype_cast : LPAREN dtype RPARENdtype : CHAR             \n             | DOUBLE\n             | FLOAT\n             | INT\n             | STRUCT\n             | VOID\n             | UINT8_T\n             | UINT16_T\n             | struct_type\n             | ID\n             | dtype ASTERISKmodifier : CONST\n                | EXTERN\n                | INLINE\n                | LONG\n                | SHORT\n                | SIGNED\n                | UNSIGNED\n                | VOLATILE\n                name : ID\n            | literal\n            | accessinclude : INCLUDEdefine : DEFINE if : IFNDEF\n          | ENDIFcontrol : WHILE\n              | IF\n              | ELSE\n                conditional : EQ\n                   | NEQ\n                   | LT\n                   | GT\n                   | LE\n                   | GE\n                   | AND\n                   | ORconditional_expr : name conditional expression\n                        | expression conditional name\n                        | expression conditional expression\n                        | name conditional name\n                        | namefor_loop : FOR LPAREN init_var conditional_expr SEMI ID INCREMENT RPARENcontrol_expr : control LPAREN conditional_expr RPAREN LBRACE node_list RBRACE\n                    | control LBRACE node_list RBRACE\n                    | for_loop LBRACE node_list RBRACEfunc_arg : name                \n                | dtype name\n                | dtype                \n                | type_cast name\n                | type_cast expression\n                | func_call\n                | type_cast func_callfunc_arglist : \n                    | func_arglist func_arg\n                    | func_arglist func_arg COMMAfunc_def : dtype ID LPAREN func_arglist RPAREN LBRACE node_list RBRACEfunc_call : ID LPAREN func_arglist RPAREN\n                 func_decl : dtype ID LPAREN func_arglist RPAREN SEMIaccess : name LBRACK name RBRACK\n              | name LBRACK expression RBRACK\n              | name MEMBER namestruct_def : STRUCT ID LBRACE node_list RBRACE SEMIstatement : init_var\n                 | assign_var\n                 | declare_var\n                 statement : expression SEMI\n                 | func_call SEMIexpression : LPAREN expression RPAREN\n                  | LPAREN name RPARENexpression : NEGATE expression\n                  | MINUS expression\n                  | NEGATE name\n                  | MINUS namebinop : PLUS\n             | MINUS\n             | ASTERISK\n             | DIVIDE\n             | LSHIFT\n             | RSHIFT\n             | PERCENT\n             | BITAND\n             | BITOR\n             | conditionalexpression : expression binop name\n                  | name binop expression\n                  | name binop name\n                  | expression binop expressionexpression : ID INCREMENTdeclare_var : dtype ID SEMI\n                   | modifier dtype ID SEMIinit_var_ls : modifier dtype ID assign\n                   | dtype ID assign\n                   | modifier dtype ID LBRACK RBRACK assign\n                   | dtype ID  LBRACK RBRACK assigninit_var_rs : name SEMI\n                   | type_cast name SEMI                   \n                   | func_call SEMI\n                   init_var : init_var_ls init_var_rsassign_var_ls : name assignassign_var_rs : expression SEMI\n                     | name SEMI\n                     | func_call SEMI\n                     | type_cast assign_var_rs SEMIassign_var : assign_var_ls assign_var_rs'
    
_lr_action_items = {'INCLUDE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,11,11,-1,-115,-117,-120,-121,-122,-64,-65,11,-116,-123,-110,-1,-1,-78,11,-82,11,-63,-76,]),'DEFINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,12,12,-1,-115,-117,-120,-121,-122,-64,-65,12,-116,-123,-110,-1,-1,-78,12,-82,12,-63,-76,]),'IFNDEF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,13,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,13,13,-1,-115,-117,-120,-121,-122,-64,-65,13,-116,-123,-110,-1,-1,-78,13,-82,13,-63,-76,]),'ENDIF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,14,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,14,14,-1,-115,-117,-120,-121,-122,-64,-65,14,-116,-123,-110,-1,-1,-78,14,-82,14,-63,-76,]),'STRUCT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,106,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,106,-124,106,-24,-90,-92,-91,-93,106,-73,-109,106,-88,-89,-107,-104,-39,25,25,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,106,106,-29,-77,-74,-66,-68,-71,-64,-65,25,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,25,-82,25,-63,-76,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,26,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,26,-124,26,-24,-90,-92,-91,-93,26,-73,-109,26,-88,-89,-107,-104,-39,26,26,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,26,26,-29,-77,-74,-66,-68,-71,-64,-65,26,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,26,-82,26,-63,-76,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,27,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,27,-124,27,-24,-90,-92,-91,-93,27,-73,-109,27,-88,-89,-107,-104,-39,27,27,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,27,27,-29,-77,-74,-66,-68,-71,-64,-65,27,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,27,-82,27,-63,-76,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,28,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,28,-124,28,-24,-90,-92,-91,-93,28,-73,-109,28,-88,-89,-107,-104,-39,28,28,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,28,28,-29,-77,-74,-66,-68,-71,-64,-65,28,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,28,-82,28,-63,-76,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,29,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,29,-124,29,-24,-90,-92,-91,-93,29,-73,-109,29,-88,-89,-107,-104,-39,29,29,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,29,29,-29,-77,-74,-66,-68,-71,-64,-65,29,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,29,-82,29,-63,-76,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,30,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,30,-124,30,-24,-90,-92,-91,-93,30,-73,-109,30,-88,-89,-107,-104,-39,30,30,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,30,30,-29,-77,-74,-66,-68,-71,-64,-65,30,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,30,-82,30,-63,-76,]),'UINT8_T':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,31,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,31,-124,31,-24,-90,-92,-91,-93,31,-73,-109,31,-88,-89,-107,-104,-39,31,31,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,31,31,-29,-77,-74,-66,-68,-71,-64,-65,31,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,31,-82,31,-63,-76,]),'UINT16_T':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,26,27,28,29,30,31,32,33,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,86,88,89,91,96,97,102,106,113,114,115,116,117,118,119,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,152,154,156,157,158,159,160,162,166,167,168,169,171,172,175,176,182,183,184,185,186,187,188,197,198,199,200,203,204,206,],[-1,32,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,32,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,-87,-1,-1,-118,32,-124,32,-24,-90,-92,-91,-93,32,-73,-109,32,-88,-89,-107,-104,-39,32,32,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,32,32,-29,-77,-74,-66,-68,-71,-64,-65,32,-116,-123,-110,-79,-80,-75,-67,-69,-70,-72,-39,-1,-1,-78,32,-82,32,-63,-76,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,25,26,27,28,29,30,31,32,33,34,35,36,38,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,96,97,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,152,153,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,178,181,182,183,184,185,186,187,188,195,197,198,199,200,201,203,204,206,],[-1,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,59,-29,65,-83,-84,-85,90,-20,-21,-22,-23,-25,-26,-27,-28,95,103,105,65,65,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,127,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,127,-1,-1,-18,-118,136,105,-124,103,143,144,-29,145,65,-119,127,136,-16,-17,-90,-92,-91,-93,105,-73,-109,-112,156,-88,-89,-107,-104,-39,16,16,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,127,105,179,156,-29,-77,-74,-66,136,187,-71,65,127,-64,-65,16,-116,-19,-123,-110,-111,-79,-80,196,-114,-75,-67,-69,-70,-72,-39,-1,202,-1,-78,16,-82,-113,16,-63,-76,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,23,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,101,102,103,106,107,108,109,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,184,185,186,187,188,197,198,199,200,201,203,204,206,],[-1,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,62,17,-83,-84,-85,87,-20,-21,-22,-23,-25,-26,-27,-28,96,102,17,17,-46,-47,-48,117,-40,-41,-11,-12,-13,-14,-15,118,-30,-108,-73,-39,-86,17,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,17,-1,-1,-118,62,-124,102,17,62,-24,17,-119,17,-16,-17,-90,-92,-91,-93,-73,-109,-112,96,-88,-89,-107,-104,-39,17,17,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,17,96,62,-77,-74,-66,-68,17,-71,17,17,-64,-65,17,-116,-19,-123,-110,-111,-79,-80,-114,-75,-67,-69,-70,-72,62,-1,-1,-78,17,-82,-113,17,-63,-76,]),'NEGATE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,35,38,39,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,97,101,102,107,108,109,111,112,119,131,132,133,134,137,139,140,141,151,161,164,165,166,167,168,169,170,171,172,188,197,198,199,200,203,204,206,],[-1,38,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,38,-83,-84,-85,38,38,38,-86,38,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,38,-1,-1,-118,-124,38,38,38,-119,38,-16,-17,-109,38,38,-1,-115,-117,-120,-121,-122,38,38,38,38,-64,-65,38,-116,-19,-123,-110,-1,-1,-78,38,-82,38,-63,-76,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,35,37,38,39,52,53,54,55,56,57,58,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,97,98,99,101,102,103,107,108,109,111,112,113,114,115,116,119,123,124,125,126,127,129,130,131,132,133,134,136,137,139,140,141,143,146,147,148,149,150,151,161,164,165,166,167,168,169,170,171,172,175,176,184,185,187,188,189,190,191,192,197,198,199,200,203,204,206,],[-1,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-39,39,-83,-84,-85,69,39,69,39,39,-40,-41,-11,-12,-13,-14,-15,-108,69,69,-39,-86,39,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,39,-1,-1,-118,-124,69,69,39,39,-39,39,-119,39,-16,-17,69,69,69,69,-109,-88,-89,69,69,-39,69,69,39,39,-1,-115,-39,-117,-120,-121,-122,-39,69,69,69,69,-81,39,39,39,39,-64,-65,39,-116,-19,-123,-110,-79,-80,69,69,-39,-1,69,69,69,69,-1,-78,39,-82,39,-63,-76,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,40,40,-1,-115,-117,-120,-121,-122,-64,-65,40,-116,-123,-110,-1,-1,-78,40,-82,40,-63,-76,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,41,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,41,41,-1,-115,-117,-120,-121,-122,-64,-65,41,-116,-123,-110,-1,-1,-78,41,-82,41,-63,-76,]),'ELSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,42,42,-1,-115,-117,-120,-121,-122,-64,-65,42,-116,-123,-110,-1,-1,-78,42,-82,42,-63,-76,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,43,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,43,43,-1,-115,-117,-120,-121,-122,-64,-65,43,-116,-123,-110,-1,-1,-78,43,-82,43,-63,-76,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,44,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,44,-109,44,44,-1,-115,-117,-120,-121,-122,-64,-65,44,-116,-123,-110,-1,-1,-78,44,-82,44,-63,-76,]),'EXTERN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,45,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,45,-109,45,45,-1,-115,-117,-120,-121,-122,-64,-65,45,-116,-123,-110,-1,-1,-78,45,-82,45,-63,-76,]),'INLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,46,-109,46,46,-1,-115,-117,-120,-121,-122,-64,-65,46,-116,-123,-110,-1,-1,-78,46,-82,46,-63,-76,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,47,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,47,-109,47,47,-1,-115,-117,-120,-121,-122,-64,-65,47,-116,-123,-110,-1,-1,-78,47,-82,47,-63,-76,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,48,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,48,-109,48,48,-1,-115,-117,-120,-121,-122,-64,-65,48,-116,-123,-110,-1,-1,-78,48,-82,48,-63,-76,]),'SIGNED':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,49,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,49,-109,49,49,-1,-115,-117,-120,-121,-122,-64,-65,49,-116,-123,-110,-1,-1,-78,49,-82,49,-63,-76,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,50,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,50,-109,50,50,-1,-115,-117,-120,-121,-122,-64,-65,50,-116,-123,-110,-1,-1,-78,50,-82,50,-63,-76,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,117,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-1,51,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,51,-109,51,51,-1,-115,-117,-120,-121,-122,-64,-65,51,-116,-123,-110,-1,-1,-78,51,-82,51,-63,-76,]),'FLOAT_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,38,39,52,53,54,55,56,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,101,102,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,184,185,186,187,188,197,198,199,200,201,203,204,206,],[-1,54,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,54,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,54,54,54,54,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,54,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,54,-1,-1,-118,54,-124,54,54,-24,54,-119,54,54,-16,-17,-90,-92,-91,-93,-73,-109,-112,54,-88,-89,-107,-104,-39,54,54,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,54,54,-29,-77,-74,-66,54,54,-71,54,54,-64,-65,54,-116,-19,-123,-110,-111,-79,-80,-114,-75,-67,-69,-70,-72,-39,-1,-1,-78,54,-82,-113,54,-63,-76,]),'INT_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,38,39,52,53,54,55,56,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,101,102,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,184,185,186,187,188,197,198,199,200,201,203,204,206,],[-1,55,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,55,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,55,55,55,55,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,55,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,55,-1,-1,-118,55,-124,55,55,-24,55,-119,55,55,-16,-17,-90,-92,-91,-93,-73,-109,-112,55,-88,-89,-107,-104,-39,55,55,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,55,55,-29,-77,-74,-66,55,55,-71,55,55,-64,-65,55,-116,-19,-123,-110,-111,-79,-80,-114,-75,-67,-69,-70,-72,-39,-1,-1,-78,55,-82,-113,55,-63,-76,]),'CHAR_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,38,39,52,53,54,55,56,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,101,102,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,184,185,186,187,188,197,198,199,200,201,203,204,206,],[-1,56,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,56,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,56,56,56,56,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,56,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,56,-1,-1,-118,56,-124,56,56,-24,56,-119,56,56,-16,-17,-90,-92,-91,-93,-73,-109,-112,56,-88,-89,-107,-104,-39,56,56,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,56,56,-29,-77,-74,-66,56,56,-71,56,56,-64,-65,56,-116,-19,-123,-110,-111,-79,-80,-114,-75,-67,-69,-70,-72,-39,-1,-1,-78,56,-82,-113,56,-63,-76,]),'STRING_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,38,39,52,53,54,55,56,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,101,102,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,184,185,186,187,188,197,198,199,200,201,203,204,206,],[-1,57,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,57,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,57,57,57,57,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,57,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,57,-1,-1,-118,57,-124,57,57,-24,57,-119,57,57,-16,-17,-90,-92,-91,-93,-73,-109,-112,57,-88,-89,-107,-104,-39,57,57,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,57,57,-29,-77,-74,-66,57,57,-71,57,57,-64,-65,57,-116,-19,-123,-110,-111,-79,-80,-114,-75,-67,-69,-70,-72,-39,-1,-1,-78,57,-82,-113,57,-63,-76,]),'NONDECIMAL_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,38,39,52,53,54,55,56,57,58,60,61,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,97,101,102,106,107,108,109,110,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,131,132,133,134,136,137,139,140,141,145,146,147,150,151,154,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,175,176,181,182,183,184,185,186,187,188,197,198,199,200,201,203,204,206,],[-1,58,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,58,-83,-84,-85,-20,-21,-22,-23,-25,-26,-27,-28,58,58,58,58,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,-39,-86,58,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-49,-50,-51,-52,-53,-54,-55,-56,-87,58,-1,-1,-118,58,-124,58,58,-24,58,-119,58,58,-16,-17,-90,-92,-91,-93,-73,-109,-112,58,-88,-89,-107,-104,-39,58,58,-1,-115,-39,-117,-120,-121,-122,-18,-106,-105,-81,58,58,-29,-77,-74,-66,58,58,-71,58,58,-64,-65,58,-116,-19,-123,-110,-111,-79,-80,-114,-75,-67,-69,-70,-72,-39,-1,-1,-78,58,-82,-113,58,-63,-76,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,91,97,119,134,137,139,140,141,166,167,169,171,172,198,200,204,206,],[-1,0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-118,-124,-109,-115,-117,-120,-121,-122,-64,-65,-116,-123,-110,-78,-82,-63,-76,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,66,86,88,89,91,97,119,131,132,133,134,137,139,140,141,166,167,168,169,171,172,188,197,198,199,200,203,204,206,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-42,-43,-44,-45,-83,-84,-85,-86,-87,-1,-1,-118,-124,-109,166,167,-1,-115,-117,-120,-121,-122,-64,-65,193,-116,-123,-110,-1,-1,-78,204,-82,206,-63,-76,]),'ASTERISK':([15,16,21,25,26,27,28,29,30,31,32,33,37,52,53,54,55,56,57,58,60,61,63,64,65,90,98,99,103,104,105,106,113,114,115,116,123,124,125,126,127,129,130,136,138,143,145,146,147,148,149,150,153,156,160,175,176,178,184,185,187,189,190,191,192,],[60,-29,70,-24,-20,-21,-22,-23,-25,-26,-27,-28,70,-40,-41,-11,-12,-13,-14,-15,-30,-108,70,70,-39,-18,70,70,-39,60,-29,-24,70,70,70,70,-88,-89,70,70,-39,70,70,-39,60,-29,-18,70,70,70,70,-81,60,-29,60,-79,-80,60,70,70,-39,70,70,70,70,]),'INCREMENT':([16,65,103,127,143,187,202,],[61,61,61,61,61,61,205,]),'LBRACK':([16,37,52,53,54,55,56,57,58,59,64,65,92,95,99,103,114,116,126,127,129,135,136,143,144,146,148,150,156,159,175,176,179,183,184,187,189,192,196,],[-39,109,-40,-41,-11,-12,-13,-14,-15,121,109,-39,109,-39,109,-39,109,109,109,-39,109,109,-39,-39,174,109,109,109,-39,109,-79,-80,121,109,109,-39,109,109,174,]),'MEMBER':([16,37,52,53,54,55,56,57,58,64,65,92,95,99,103,114,116,126,127,129,135,136,143,146,148,150,156,159,175,176,183,184,187,189,192,],[-39,110,-40,-41,-11,-12,-13,-14,-15,110,-39,110,-39,110,-39,110,110,110,-39,110,110,-39,-39,110,110,110,-39,110,-79,-80,110,110,-39,110,110,]),'PLUS':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,68,68,-40,-41,-11,-12,-13,-14,-15,-108,68,68,-39,68,68,-39,68,68,68,68,-88,-89,68,68,-39,68,68,-39,-39,68,68,68,68,-81,-79,-80,68,68,-39,68,68,68,68,]),'DIVIDE':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,71,71,-40,-41,-11,-12,-13,-14,-15,-108,71,71,-39,71,71,-39,71,71,71,71,-88,-89,71,71,-39,71,71,-39,-39,71,71,71,71,-81,-79,-80,71,71,-39,71,71,71,71,]),'LSHIFT':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,72,72,-40,-41,-11,-12,-13,-14,-15,-108,72,72,-39,72,72,-39,72,72,72,72,-88,-89,72,72,-39,72,72,-39,-39,72,72,72,72,-81,-79,-80,72,72,-39,72,72,72,72,]),'RSHIFT':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,73,73,-40,-41,-11,-12,-13,-14,-15,-108,73,73,-39,73,73,-39,73,73,73,73,-88,-89,73,73,-39,73,73,-39,-39,73,73,73,73,-81,-79,-80,73,73,-39,73,73,73,73,]),'PERCENT':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,74,74,-40,-41,-11,-12,-13,-14,-15,-108,74,74,-39,74,74,-39,74,74,74,74,-88,-89,74,74,-39,74,74,-39,-39,74,74,74,74,-81,-79,-80,74,74,-39,74,74,74,74,]),'BITAND':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,75,75,-40,-41,-11,-12,-13,-14,-15,-108,75,75,-39,75,75,-39,75,75,75,75,-88,-89,75,75,-39,75,75,-39,-39,75,75,75,75,-81,-79,-80,75,75,-39,75,75,75,75,]),'BITOR':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,76,76,-40,-41,-11,-12,-13,-14,-15,-108,76,76,-39,76,76,-39,76,76,76,76,-88,-89,76,76,-39,76,76,-39,-39,76,76,76,76,-81,-79,-80,76,76,-39,76,76,76,76,]),'SIMPLE_ASSIGN':([16,37,52,53,54,55,56,57,58,59,136,144,150,155,175,176,179,194,196,],[-39,111,-40,-41,-11,-12,-13,-14,-15,111,-39,111,-81,111,-79,-80,111,111,111,]),'COMPLEX_ASSIGN':([16,37,52,53,54,55,56,57,58,59,136,144,150,155,175,176,179,194,196,],[-39,112,-40,-41,-11,-12,-13,-14,-15,112,-39,112,-81,112,-79,-80,112,112,112,]),'EQ':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,78,78,-40,-41,-11,-12,-13,-14,-15,-108,78,78,-39,78,78,-39,78,78,78,78,-88,-89,78,78,-39,78,78,-39,-39,78,78,78,78,-81,-79,-80,78,78,-39,78,78,78,78,]),'NEQ':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,79,79,-40,-41,-11,-12,-13,-14,-15,-108,79,79,-39,79,79,-39,79,79,79,79,-88,-89,79,79,-39,79,79,-39,-39,79,79,79,79,-81,-79,-80,79,79,-39,79,79,79,79,]),'LT':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,80,80,-40,-41,-11,-12,-13,-14,-15,-108,80,80,-39,80,80,-39,80,80,80,80,-88,-89,80,80,-39,80,80,-39,-39,80,80,80,80,-81,-79,-80,80,80,-39,80,80,80,80,]),'GT':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,81,81,-40,-41,-11,-12,-13,-14,-15,-108,81,81,-39,81,81,-39,81,81,81,81,-88,-89,81,81,-39,81,81,-39,-39,81,81,81,81,-81,-79,-80,81,81,-39,81,81,81,81,]),'LE':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,82,82,-40,-41,-11,-12,-13,-14,-15,-108,82,82,-39,82,82,-39,82,82,82,82,-88,-89,82,82,-39,82,82,-39,-39,82,82,82,82,-81,-79,-80,82,82,-39,82,82,82,82,]),'GE':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,83,83,-40,-41,-11,-12,-13,-14,-15,-108,83,83,-39,83,83,-39,83,83,83,83,-88,-89,83,83,-39,83,83,-39,-39,83,83,83,83,-81,-79,-80,83,83,-39,83,83,83,83,]),'AND':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,84,84,-40,-41,-11,-12,-13,-14,-15,-108,84,84,-39,84,84,-39,84,84,84,84,-88,-89,84,84,-39,84,84,-39,-39,84,84,84,84,-81,-79,-80,84,84,-39,84,84,84,84,]),'OR':([16,21,37,52,53,54,55,56,57,58,61,63,64,65,98,99,103,113,114,115,116,123,124,125,126,127,129,130,136,143,146,147,148,149,150,175,176,184,185,187,189,190,191,192,],[-39,85,85,-40,-41,-11,-12,-13,-14,-15,-108,85,85,-39,85,85,-39,85,85,85,85,-88,-89,85,85,-39,85,85,-39,-39,85,85,85,85,-81,-79,-80,85,85,-39,85,85,85,85,]),'SEMI':([21,22,52,53,54,55,56,57,58,59,61,65,92,94,95,98,99,100,103,113,114,115,116,123,124,125,126,127,129,135,136,139,140,141,142,144,146,147,150,157,171,175,176,177,180,189,190,191,192,193,],[66,86,-40,-41,-11,-12,-13,-14,-15,119,-108,-39,134,137,-39,139,140,141,-39,-90,-92,-91,-93,-88,-89,-107,-104,-39,-61,169,-39,-120,-121,-122,171,172,-106,-105,-81,-77,-123,-79,-80,195,198,-60,-57,-59,-58,200,]),'LBRACE':([23,24,40,41,42,90,163,180,207,],[88,89,-46,-47,-48,133,188,197,-62,]),'RPAREN':([26,27,28,29,30,31,32,33,52,53,54,55,56,57,58,60,61,62,63,64,65,105,106,113,114,115,116,118,122,123,124,125,126,127,128,129,136,138,143,145,146,147,150,154,156,157,158,159,160,162,175,176,182,183,184,185,186,187,189,190,191,192,205,],[-20,-21,-22,-23,-25,-26,-27,-28,-40,-41,-11,-12,-13,-14,-15,-30,-108,-73,123,124,-39,-29,-24,-90,-92,-91,-93,-73,157,-88,-89,-107,-104,-39,163,-61,-39,170,-29,-18,-106,-105,-81,180,-29,-77,-74,-66,-68,-71,-79,-80,-75,-67,-69,-70,-72,-39,-60,-57,-59,-58,207,]),'COMMA':([26,27,28,29,30,31,32,33,52,53,54,55,56,57,58,60,61,65,106,113,114,115,116,123,124,125,126,127,136,145,146,147,150,156,157,158,159,160,162,175,176,183,184,185,186,187,],[-20,-21,-22,-23,-25,-26,-27,-28,-40,-41,-11,-12,-13,-14,-15,-30,-108,-39,-24,-90,-92,-91,-93,-88,-89,-107,-104,-39,-39,-18,-106,-105,-81,-29,-77,182,-66,-68,-71,-79,-80,-67,-69,-70,-72,-39,]),'RBRACK':([52,53,54,55,56,57,58,61,65,113,114,115,116,121,123,124,125,126,127,136,146,147,148,149,150,174,175,176,],[-40,-41,-11,-12,-13,-14,-15,-108,-39,-90,-92,-91,-93,155,-88,-89,-107,-104,-39,-39,-106,-105,175,176,-81,194,-79,-80,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'node_list':([0,88,89,133,188,197,],[1,131,132,168,199,203,]),'node':([1,131,132,168,199,203,],[2,2,2,2,2,2,]),'include':([1,131,132,168,199,203,],[3,3,3,3,3,3,]),'define':([1,131,132,168,199,203,],[4,4,4,4,4,4,]),'if':([1,131,132,168,199,203,],[5,5,5,5,5,5,]),'func_def':([1,131,132,168,199,203,],[6,6,6,6,6,6,]),'func_decl':([1,131,132,168,199,203,],[7,7,7,7,7,7,]),'statement':([1,131,132,168,199,203,],[8,8,8,8,8,8,]),'control_expr':([1,131,132,168,199,203,],[9,9,9,9,9,9,]),'struct_def':([1,131,132,168,199,203,],[10,10,10,10,10,10,]),'dtype':([1,36,96,102,117,122,131,132,152,154,168,199,203,],[15,104,138,138,153,160,15,15,178,160,15,15,15,]),'init_var':([1,117,131,132,168,199,203,],[18,151,18,18,18,18,18,]),'assign_var':([1,131,132,168,199,203,],[19,19,19,19,19,19,]),'declare_var':([1,131,132,168,199,203,],[20,20,20,20,20,20,]),'expression':([1,17,35,38,39,67,87,101,102,107,109,131,132,151,161,164,165,168,199,203,],[21,63,98,113,115,125,130,98,63,147,149,21,21,130,185,190,191,21,21,21,]),'func_call':([1,34,35,101,122,131,132,154,161,168,199,203,],[22,94,100,100,162,22,22,162,186,22,22,22,]),'control':([1,131,132,168,199,203,],[23,23,23,23,23,23,]),'for_loop':([1,131,132,168,199,203,],[24,24,24,24,24,24,]),'struct_type':([1,36,96,102,117,122,131,132,152,154,168,199,203,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'init_var_ls':([1,117,131,132,168,199,203,],[34,34,34,34,34,34,34,]),'assign_var_ls':([1,131,132,168,199,203,],[35,35,35,35,35,35,]),'modifier':([1,117,131,132,168,199,203,],[36,152,36,36,36,36,36,]),'name':([1,17,34,35,38,39,67,87,93,101,102,107,109,110,122,131,132,151,154,160,161,164,165,168,199,203,],[37,64,92,99,114,116,126,129,135,99,64,146,148,150,159,37,37,129,159,183,184,189,192,37,37,37,]),'literal':([1,17,34,35,38,39,67,87,93,101,102,107,109,110,122,131,132,151,154,160,161,164,165,168,199,203,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'access':([1,17,34,35,38,39,67,87,93,101,102,107,109,110,122,131,132,151,154,160,161,164,165,168,199,203,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'binop':([21,37,63,64,98,99,113,114,115,116,125,126,129,130,146,147,148,149,184,185,189,190,191,192,],[67,107,67,107,67,107,67,107,67,107,67,107,107,67,107,67,107,67,107,67,107,67,67,107,]),'conditional':([21,37,63,64,98,99,113,114,115,116,125,126,129,130,146,147,148,149,184,185,189,190,191,192,],[77,77,77,77,77,77,77,77,77,77,77,77,164,165,77,77,77,77,77,77,77,77,77,77,]),'init_var_rs':([34,],[91,]),'type_cast':([34,35,101,122,154,],[93,101,101,161,161,]),'assign_var_rs':([35,101,],[97,142,]),'assign':([37,59,144,155,179,194,196,],[108,120,173,181,120,201,173,]),'func_arglist':([62,118,],[122,154,]),'conditional_expr':([87,151,],[128,177,]),'func_arg':([122,154,],[158,158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> node_list","S'",1,None,None,None),
  ('node_list -> <empty>','node_list',0,'p_node_list','ply_tokenizer.py',165),
  ('node_list -> node_list node','node_list',2,'p_node_list','ply_tokenizer.py',166),
  ('node -> include','node',1,'p_node','ply_tokenizer.py',175),
  ('node -> define','node',1,'p_node','ply_tokenizer.py',176),
  ('node -> if','node',1,'p_node','ply_tokenizer.py',177),
  ('node -> func_def','node',1,'p_node','ply_tokenizer.py',178),
  ('node -> func_decl','node',1,'p_node','ply_tokenizer.py',179),
  ('node -> statement','node',1,'p_node','ply_tokenizer.py',180),
  ('node -> control_expr','node',1,'p_node','ply_tokenizer.py',181),
  ('node -> struct_def','node',1,'p_node','ply_tokenizer.py',182),
  ('literal -> FLOAT_L','literal',1,'p_literal','ply_tokenizer.py',188),
  ('literal -> INT_L','literal',1,'p_literal','ply_tokenizer.py',189),
  ('literal -> CHAR_L','literal',1,'p_literal','ply_tokenizer.py',190),
  ('literal -> STRING_L','literal',1,'p_literal','ply_tokenizer.py',191),
  ('literal -> NONDECIMAL_L','literal',1,'p_literal','ply_tokenizer.py',192),
  ('assign -> SIMPLE_ASSIGN','assign',1,'p_assign','ply_tokenizer.py',196),
  ('assign -> COMPLEX_ASSIGN','assign',1,'p_assign','ply_tokenizer.py',197),
  ('struct_type -> STRUCT ID','struct_type',2,'p_struct_type','ply_tokenizer.py',201),
  ('type_cast -> LPAREN dtype RPAREN','type_cast',3,'p_type_cast','ply_tokenizer.py',205),
  ('dtype -> CHAR','dtype',1,'p_dtype','ply_tokenizer.py',210),
  ('dtype -> DOUBLE','dtype',1,'p_dtype','ply_tokenizer.py',211),
  ('dtype -> FLOAT','dtype',1,'p_dtype','ply_tokenizer.py',212),
  ('dtype -> INT','dtype',1,'p_dtype','ply_tokenizer.py',213),
  ('dtype -> STRUCT','dtype',1,'p_dtype','ply_tokenizer.py',214),
  ('dtype -> VOID','dtype',1,'p_dtype','ply_tokenizer.py',215),
  ('dtype -> UINT8_T','dtype',1,'p_dtype','ply_tokenizer.py',216),
  ('dtype -> UINT16_T','dtype',1,'p_dtype','ply_tokenizer.py',217),
  ('dtype -> struct_type','dtype',1,'p_dtype','ply_tokenizer.py',218),
  ('dtype -> ID','dtype',1,'p_dtype','ply_tokenizer.py',219),
  ('dtype -> dtype ASTERISK','dtype',2,'p_dtype','ply_tokenizer.py',220),
  ('modifier -> CONST','modifier',1,'p_modifier','ply_tokenizer.py',224),
  ('modifier -> EXTERN','modifier',1,'p_modifier','ply_tokenizer.py',225),
  ('modifier -> INLINE','modifier',1,'p_modifier','ply_tokenizer.py',226),
  ('modifier -> LONG','modifier',1,'p_modifier','ply_tokenizer.py',227),
  ('modifier -> SHORT','modifier',1,'p_modifier','ply_tokenizer.py',228),
  ('modifier -> SIGNED','modifier',1,'p_modifier','ply_tokenizer.py',229),
  ('modifier -> UNSIGNED','modifier',1,'p_modifier','ply_tokenizer.py',230),
  ('modifier -> VOLATILE','modifier',1,'p_modifier','ply_tokenizer.py',231),
  ('name -> ID','name',1,'p_names','ply_tokenizer.py',236),
  ('name -> literal','name',1,'p_names','ply_tokenizer.py',237),
  ('name -> access','name',1,'p_names','ply_tokenizer.py',238),
  ('include -> INCLUDE','include',1,'p_include','ply_tokenizer.py',253),
  ('define -> DEFINE','define',1,'p_define','ply_tokenizer.py',258),
  ('if -> IFNDEF','if',1,'p_ifs','ply_tokenizer.py',262),
  ('if -> ENDIF','if',1,'p_ifs','ply_tokenizer.py',263),
  ('control -> WHILE','control',1,'p_controls','ply_tokenizer.py',271),
  ('control -> IF','control',1,'p_controls','ply_tokenizer.py',272),
  ('control -> ELSE','control',1,'p_controls','ply_tokenizer.py',273),
  ('conditional -> EQ','conditional',1,'p_conditionals','ply_tokenizer.py',279),
  ('conditional -> NEQ','conditional',1,'p_conditionals','ply_tokenizer.py',280),
  ('conditional -> LT','conditional',1,'p_conditionals','ply_tokenizer.py',281),
  ('conditional -> GT','conditional',1,'p_conditionals','ply_tokenizer.py',282),
  ('conditional -> LE','conditional',1,'p_conditionals','ply_tokenizer.py',283),
  ('conditional -> GE','conditional',1,'p_conditionals','ply_tokenizer.py',284),
  ('conditional -> AND','conditional',1,'p_conditionals','ply_tokenizer.py',285),
  ('conditional -> OR','conditional',1,'p_conditionals','ply_tokenizer.py',286),
  ('conditional_expr -> name conditional expression','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',290),
  ('conditional_expr -> expression conditional name','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',291),
  ('conditional_expr -> expression conditional expression','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',292),
  ('conditional_expr -> name conditional name','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',293),
  ('conditional_expr -> name','conditional_expr',1,'p_conditional_expr','ply_tokenizer.py',294),
  ('for_loop -> FOR LPAREN init_var conditional_expr SEMI ID INCREMENT RPAREN','for_loop',8,'p_for_loop','ply_tokenizer.py',298),
  ('control_expr -> control LPAREN conditional_expr RPAREN LBRACE node_list RBRACE','control_expr',7,'p_control_expr','ply_tokenizer.py',302),
  ('control_expr -> control LBRACE node_list RBRACE','control_expr',4,'p_control_expr','ply_tokenizer.py',303),
  ('control_expr -> for_loop LBRACE node_list RBRACE','control_expr',4,'p_control_expr','ply_tokenizer.py',304),
  ('func_arg -> name','func_arg',1,'p_func_arg','ply_tokenizer.py',314),
  ('func_arg -> dtype name','func_arg',2,'p_func_arg','ply_tokenizer.py',315),
  ('func_arg -> dtype','func_arg',1,'p_func_arg','ply_tokenizer.py',316),
  ('func_arg -> type_cast name','func_arg',2,'p_func_arg','ply_tokenizer.py',317),
  ('func_arg -> type_cast expression','func_arg',2,'p_func_arg','ply_tokenizer.py',318),
  ('func_arg -> func_call','func_arg',1,'p_func_arg','ply_tokenizer.py',319),
  ('func_arg -> type_cast func_call','func_arg',2,'p_func_arg','ply_tokenizer.py',320),
  ('func_arglist -> <empty>','func_arglist',0,'p_func_arglist','ply_tokenizer.py',329),
  ('func_arglist -> func_arglist func_arg','func_arglist',2,'p_func_arglist','ply_tokenizer.py',330),
  ('func_arglist -> func_arglist func_arg COMMA','func_arglist',3,'p_func_arglist','ply_tokenizer.py',331),
  ('func_def -> dtype ID LPAREN func_arglist RPAREN LBRACE node_list RBRACE','func_def',8,'p_func_def','ply_tokenizer.py',347),
  ('func_call -> ID LPAREN func_arglist RPAREN','func_call',4,'p_func_call','ply_tokenizer.py',357),
  ('func_decl -> dtype ID LPAREN func_arglist RPAREN SEMI','func_decl',6,'p_func_decl','ply_tokenizer.py',368),
  ('access -> name LBRACK name RBRACK','access',4,'p_access','ply_tokenizer.py',378),
  ('access -> name LBRACK expression RBRACK','access',4,'p_access','ply_tokenizer.py',379),
  ('access -> name MEMBER name','access',3,'p_access','ply_tokenizer.py',380),
  ('struct_def -> STRUCT ID LBRACE node_list RBRACE SEMI','struct_def',6,'p_struct_def','ply_tokenizer.py',389),
  ('statement -> init_var','statement',1,'p_statement_assign','ply_tokenizer.py',397),
  ('statement -> assign_var','statement',1,'p_statement_assign','ply_tokenizer.py',398),
  ('statement -> declare_var','statement',1,'p_statement_assign','ply_tokenizer.py',399),
  ('statement -> expression SEMI','statement',2,'p_statement_expression','ply_tokenizer.py',404),
  ('statement -> func_call SEMI','statement',2,'p_statement_expression','ply_tokenizer.py',405),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','ply_tokenizer.py',409),
  ('expression -> LPAREN name RPAREN','expression',3,'p_expression_group','ply_tokenizer.py',410),
  ('expression -> NEGATE expression','expression',2,'p_expression_neg','ply_tokenizer.py',414),
  ('expression -> MINUS expression','expression',2,'p_expression_neg','ply_tokenizer.py',415),
  ('expression -> NEGATE name','expression',2,'p_expression_neg','ply_tokenizer.py',416),
  ('expression -> MINUS name','expression',2,'p_expression_neg','ply_tokenizer.py',417),
  ('binop -> PLUS','binop',1,'p_binops','ply_tokenizer.py',421),
  ('binop -> MINUS','binop',1,'p_binops','ply_tokenizer.py',422),
  ('binop -> ASTERISK','binop',1,'p_binops','ply_tokenizer.py',423),
  ('binop -> DIVIDE','binop',1,'p_binops','ply_tokenizer.py',424),
  ('binop -> LSHIFT','binop',1,'p_binops','ply_tokenizer.py',425),
  ('binop -> RSHIFT','binop',1,'p_binops','ply_tokenizer.py',426),
  ('binop -> PERCENT','binop',1,'p_binops','ply_tokenizer.py',427),
  ('binop -> BITAND','binop',1,'p_binops','ply_tokenizer.py',428),
  ('binop -> BITOR','binop',1,'p_binops','ply_tokenizer.py',429),
  ('binop -> conditional','binop',1,'p_binops','ply_tokenizer.py',430),
  ('expression -> expression binop name','expression',3,'p_expression_binop','ply_tokenizer.py',434),
  ('expression -> name binop expression','expression',3,'p_expression_binop','ply_tokenizer.py',435),
  ('expression -> name binop name','expression',3,'p_expression_binop','ply_tokenizer.py',436),
  ('expression -> expression binop expression','expression',3,'p_expression_binop','ply_tokenizer.py',437),
  ('expression -> ID INCREMENT','expression',2,'p_expression_increment','ply_tokenizer.py',442),
  ('declare_var -> dtype ID SEMI','declare_var',3,'p_decl_var','ply_tokenizer.py',465),
  ('declare_var -> modifier dtype ID SEMI','declare_var',4,'p_decl_var','ply_tokenizer.py',466),
  ('init_var_ls -> modifier dtype ID assign','init_var_ls',4,'p_init_var_ls','ply_tokenizer.py',474),
  ('init_var_ls -> dtype ID assign','init_var_ls',3,'p_init_var_ls','ply_tokenizer.py',475),
  ('init_var_ls -> modifier dtype ID LBRACK RBRACK assign','init_var_ls',6,'p_init_var_ls','ply_tokenizer.py',476),
  ('init_var_ls -> dtype ID LBRACK RBRACK assign','init_var_ls',5,'p_init_var_ls','ply_tokenizer.py',477),
  ('init_var_rs -> name SEMI','init_var_rs',2,'p_init_var_rs','ply_tokenizer.py',489),
  ('init_var_rs -> type_cast name SEMI','init_var_rs',3,'p_init_var_rs','ply_tokenizer.py',490),
  ('init_var_rs -> func_call SEMI','init_var_rs',2,'p_init_var_rs','ply_tokenizer.py',491),
  ('init_var -> init_var_ls init_var_rs','init_var',2,'p_init_var','ply_tokenizer.py',502),
  ('assign_var_ls -> name assign','assign_var_ls',2,'p_assign_var_ls','ply_tokenizer.py',510),
  ('assign_var_rs -> expression SEMI','assign_var_rs',2,'p_assign_var_rs','ply_tokenizer.py',514),
  ('assign_var_rs -> name SEMI','assign_var_rs',2,'p_assign_var_rs','ply_tokenizer.py',515),
  ('assign_var_rs -> func_call SEMI','assign_var_rs',2,'p_assign_var_rs','ply_tokenizer.py',516),
  ('assign_var_rs -> type_cast assign_var_rs SEMI','assign_var_rs',3,'p_assign_var_rs','ply_tokenizer.py',517),
  ('assign_var -> assign_var_ls assign_var_rs','assign_var',2,'p_assign_var','ply_tokenizer.py',525),
]
