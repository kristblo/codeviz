
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASTERISK AUTO BITAND BITOR BREAK CASE CHAR CHAR_L COMMA COMMENT COMPLEX_ASSIGN CONST CONTINUE DEFAULT DEFINE DIVIDE DO DOUBLE ELSE ENDIF ENUM EQ EXTERN FLOAT FLOAT_L FOR GE GOTO GT ID IF IFNDEF INCLUDE INCREMENT INLINE INT INT_L LBRACE LBRACK LCOMMENT LE LONG LPAREN LSHIFT LT MEMBER MINUS NEGATE NEQ NONDECIMAL_L NUMBER OR PERCENT PLUS RBRACE RBRACK REGISTER RESTRICT RETURN RPAREN RSHIFT SEMI SHORT SIGNED SIMPLE_ASSIGN SIZEOF STATIC STRING_L STRUCT SWITCH TYPEDEF UINT16_T UINT8_T UNION UNSIGNED VOID VOLATILE WHILE _ALIGNAS _ALIGNOF _ATOMIC _BOOL _COMPLEX _GENERIC _IMAGERY _NORETURN _STATIC_ASSERT _THREAD_LOCALnode_list :\n                 | node_list node node : include\n             | define\n             | if\n             | func_def                          \n             | func_decl\n             | statement\n             | control_expr\n             | struct_defliteral  : FLOAT_L\n                | INT_L\n                | CHAR_L\n                | STRING_L\n                | NONDECIMAL_Lassign : SIMPLE_ASSIGN\n              | COMPLEX_ASSIGNstruct_type : STRUCT nametype_cast : LPAREN dtype RPARENmodifier : CONST\n                | EXTERN\n                | INLINE\n                | LONG\n                | SHORT\n                | SIGNED\n                | UNSIGNED\n                | VOLATILE\n                modifier_list :\n                     | modifier_list modifier\n                     modified : modifier_list dtype\n                | modifierdtype : CHAR             \n             | DOUBLE\n             | FLOAT\n             | INT             \n             | VOID\n             | UINT8_T\n             | UINT16_T\n             | struct_type\n             | ID\n             | dtype ASTERISK             \n             name : ID\n            | literal\n            | accessinclude : INCLUDEdefine : DEFINE if : IFNDEF\n          | ENDIFcontrol : WHILE\n              | IF\n              | ELSE\n                conditional : EQ\n                   | NEQ\n                   | LT\n                   | GT\n                   | LE\n                   | GE\n                   | AND\n                   | ORconditional_expr : name conditional expression\n                        | expression conditional name\n                        | expression conditional expression\n                        | name conditional name\n                        | name\n                        | expressionfor_loop : FOR LPAREN init_var conditional_expr SEMI ID INCREMENT RPARENcontrol_expr : control LPAREN conditional_expr RPAREN LBRACE node_list RBRACE\n                    | control LBRACE node_list RBRACE\n                    | for_loop LBRACE node_list RBRACEfunc_arg : name                \n                | dtype name\n                | dtype                \n                | type_cast name\n                | type_cast expression\n                | func_call\n                | type_cast func_callfunc_arglist : \n                    | func_arglist func_arg\n                    | func_arglist func_arg COMMAfunc_def : dtype ID LPAREN func_arglist RPAREN LBRACE node_list RBRACE\n                | ID LPAREN func_arglist RPAREN LBRACE node_list RBRACEfunc_call : ID LPAREN func_arglist RPAREN\n                 | SIZEOF LPAREN func_arglist RPAREN\n                 func_decl : dtype ID LPAREN func_arglist RPAREN SEMIaccess : name LBRACK name RBRACK\n              | name LBRACK expression RBRACK\n              | name MEMBER name\n              | BITAND namestruct_def : STRUCT ID LBRACE node_list RBRACE SEMIstruct_typedef : TYPEDEF STRUCT LBRACE node_list RBRACE ID SEMIstatement : init_var\n                 | assign_var\n                 | declare_var\n                 statement : expression SEMI\n                 | func_call SEMI\n                 | return SEMIexpression : LPAREN expression RPAREN\n                  | LPAREN name RPARENexpression : NEGATE expression\n                  | MINUS expression\n                  | NEGATE name\n                  | MINUS namebinop : PLUS\n             | MINUS\n             | ASTERISK\n             | DIVIDE\n             | LSHIFT\n             | RSHIFT\n             | PERCENT\n             | BITAND\n             | BITOR\n             | conditionaloperand : name\n               | expression\n               | type_cast name\n               | func_callexpression : operand binop operandexpression : name INCREMENTreturn : RETURN name\n              | RETURN expressioncomplex_dtype : dtype\n                     | modifier dtypedeclare_var_ls : dtype ID\n                      | modifier dtype IDdeclare_var : declare_var_ls SEMIvector_init : LBRACK RBRACK\n                   | LBRACK name RBRACK\n                   vector_init_list : \n                        | vector_init_list vector_initinit_var_ls : declare_var_ls assign\n                   | declare_var_ls vector_init assign\n                   typecast_init : type_cast init_var_rsinit_var_rs : name SEMI\n                   | func_call SEMI\n                   | expression SEMI \n                   | typecast_init\n                   | LPAREN name RPAREN\n                   init_var_rs : error SEMIinit_var : init_var_ls init_var_rsassign_var_ls : name assignassign_var_rs : init_var_rsassign_var : assign_var_ls assign_var_rs'
    
_lr_action_items = {'INCLUDE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,11,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,11,11,-1,-133,-134,-135,-138,-132,-68,-69,11,-137,-1,-1,-1,-84,11,11,-89,11,-81,-67,-80,]),'DEFINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,12,12,-1,-133,-134,-135,-138,-132,-68,-69,12,-137,-1,-1,-1,-84,12,12,-89,12,-81,-67,-80,]),'IFNDEF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,13,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,13,13,-1,-133,-134,-135,-138,-132,-68,-69,13,-137,-1,-1,-1,-84,13,13,-89,13,-81,-67,-80,]),'ENDIF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,14,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,14,14,-1,-133,-134,-135,-138,-132,-68,-69,14,-137,-1,-1,-1,-84,14,14,-89,14,-81,-67,-80,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,39,40,43,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,72,73,74,75,76,77,78,79,80,81,82,83,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,167,169,170,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,205,206,207,208,209,210,212,213,214,216,],[-1,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,66,-40,72,-91,-92,-93,81,-32,-33,-34,-35,-36,-37,-38,-39,90,90,90,90,90,132,134,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,134,-41,-77,-40,-116,134,-94,-95,-96,90,-1,-1,-42,-18,-139,-136,72,-42,90,-142,-141,-125,-130,-16,-17,134,-118,-140,90,134,-99,-101,-100,-102,90,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,132,168,-40,-115,-42,-88,-77,72,-97,-98,-19,-77,16,16,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,72,90,190,72,132,-78,-70,134,90,-75,72,90,90,-68,-69,16,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,211,-1,-84,16,16,-89,16,-81,-67,-80,]),'STRUCT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,74,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,74,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,74,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,74,-115,-42,-88,-77,74,-97,-98,-77,26,26,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,74,74,74,-78,-70,-72,-75,74,-68,-69,26,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,26,26,-89,26,-81,-67,-80,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,27,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,27,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,27,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,27,-115,-42,-88,-77,27,-97,-98,-77,27,27,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,27,27,27,-78,-70,-72,-75,27,-68,-69,27,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,27,27,-89,27,-81,-67,-80,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,28,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,28,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,28,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,28,-115,-42,-88,-77,28,-97,-98,-77,28,28,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,28,28,28,-78,-70,-72,-75,28,-68,-69,28,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,28,28,-89,28,-81,-67,-80,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,29,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,29,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,29,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,29,-115,-42,-88,-77,29,-97,-98,-77,29,29,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,29,29,29,-78,-70,-72,-75,29,-68,-69,29,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,29,29,-89,29,-81,-67,-80,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,30,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,30,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,30,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,30,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,30,-115,-42,-88,-77,30,-97,-98,-77,30,30,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,30,30,30,-78,-70,-72,-75,30,-68,-69,30,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,30,30,-89,30,-81,-67,-80,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,31,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,31,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,31,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,31,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,31,-115,-42,-88,-77,31,-97,-98,-77,31,31,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,31,31,31,-78,-70,-72,-75,31,-68,-69,31,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,31,31,-89,31,-81,-67,-80,]),'UINT8_T':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,32,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,32,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,32,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,32,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,32,-115,-42,-88,-77,32,-97,-98,-77,32,32,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,32,32,32,-78,-70,-72,-75,32,-68,-69,32,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,32,32,-89,32,-81,-67,-80,]),'UINT16_T':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,72,73,75,76,77,79,80,82,83,87,88,90,92,93,94,100,104,105,106,107,127,130,133,134,135,136,137,138,139,141,145,146,147,148,149,150,152,153,160,161,162,163,164,169,170,172,173,174,176,177,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,33,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,33,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,33,-43,-44,-20,-21,-22,-23,-24,-25,-26,-27,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,-1,-1,-18,-139,-136,33,-42,-142,-141,-125,-118,-99,-101,-100,-102,-77,33,-115,-42,-88,-77,33,-97,-98,-77,33,33,-1,-133,-134,-135,-138,-132,-87,-117,-113,-114,33,33,33,-78,-70,-72,-75,33,-68,-69,33,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,33,33,-89,33,-81,-67,-80,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,24,27,28,29,30,31,32,33,34,35,36,39,40,42,43,44,45,46,47,50,51,60,61,62,63,64,66,67,68,72,73,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,68,17,-91,-92,-93,78,-32,-33,-34,-35,-36,-37,-38,-39,88,88,17,17,127,17,-49,-50,-51,130,-43,-44,-11,-12,-13,-14,-15,136,-41,-77,141,-116,-94,-95,-96,17,-1,-1,-18,-139,-136,17,141,88,-142,-141,-125,-130,-16,-17,-118,-140,17,-99,-101,-100,-102,17,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,170,-97,-98,-19,-77,17,17,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,170,17,170,-78,-70,-72,17,-75,170,17,17,-68,-69,17,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,17,17,-89,17,-81,-67,-80,]),'NEGATE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,35,36,39,40,43,75,76,77,78,79,80,83,87,88,91,92,93,94,95,97,98,101,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,140,145,146,147,148,149,150,152,153,155,165,175,179,180,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,39,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,39,-91,-92,-93,39,39,39,39,39,-94,-95,-96,39,-1,-1,-139,-136,39,39,-142,-141,-125,-130,-16,-17,-140,39,39,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-19,39,39,-1,-133,-134,-135,-138,-132,-131,39,39,39,39,-68,-69,39,-137,-1,-1,-1,-84,39,39,-89,39,-81,-67,-80,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,35,36,38,39,40,41,43,50,51,60,61,62,63,64,69,70,72,73,75,76,77,78,79,80,83,84,85,86,87,88,90,91,92,93,94,95,97,98,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,133,134,135,138,139,140,143,144,145,146,147,148,149,150,151,152,153,154,155,158,159,160,161,162,163,165,171,175,179,180,181,182,183,184,186,187,188,192,195,196,197,198,199,200,201,202,203,206,207,208,209,210,212,213,214,216,],[-1,40,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-42,40,-91,-92,-93,-114,-116,40,40,-113,40,40,110,40,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-94,-95,-96,40,-1,-1,-139,-113,-116,-114,-136,40,-42,40,-142,-141,-125,-130,-16,-17,-118,-140,40,-99,-101,-100,-102,40,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-113,-114,-115,-42,-88,-97,-98,-19,-113,-114,40,40,-1,-133,-134,-135,-113,-138,-132,-113,-131,-113,-114,-87,110,-113,-114,40,-82,40,40,40,-68,-69,40,-98,-85,-86,-83,-1,-113,-114,-116,-82,-1,-113,-114,-114,-113,-1,-84,40,40,-89,40,-81,-67,-80,]),'SIZEOF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,27,28,29,30,31,32,33,34,35,36,39,40,43,50,51,60,61,62,63,64,67,68,72,73,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,42,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,42,-91,-92,-93,-32,-33,-34,-35,-36,-37,-38,-39,42,42,42,42,42,-43,-44,-11,-12,-13,-14,-15,-41,-77,-40,-116,-94,-95,-96,42,-1,-1,-18,-139,-136,42,-42,42,-142,-141,-125,-130,-16,-17,-118,-140,42,-99,-101,-100,-102,42,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,42,-97,-98,-19,-77,42,42,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,42,42,42,-78,-70,-72,42,-75,42,42,42,-68,-69,42,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,42,42,-89,42,-81,-67,-80,]),'RETURN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,43,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,43,43,-1,-133,-134,-135,-138,-132,-68,-69,43,-137,-1,-1,-1,-84,43,43,-89,43,-81,-67,-80,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,44,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,44,44,-1,-133,-134,-135,-138,-132,-68,-69,44,-137,-1,-1,-1,-84,44,44,-89,44,-81,-67,-80,]),'IF':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,45,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,45,45,-1,-133,-134,-135,-138,-132,-68,-69,45,-137,-1,-1,-1,-84,45,45,-89,45,-81,-67,-80,]),'ELSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,46,46,-1,-133,-134,-135,-138,-132,-68,-69,46,-137,-1,-1,-1,-84,46,46,-89,46,-81,-67,-80,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,47,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,47,47,-1,-133,-134,-135,-138,-132,-68,-69,47,-137,-1,-1,-1,-84,47,47,-89,47,-81,-67,-80,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,52,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,52,52,52,-1,-133,-134,-135,-138,-132,-68,-69,52,-137,-1,-1,-1,-84,52,52,-89,52,-81,-67,-80,]),'EXTERN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,53,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,53,53,53,-1,-133,-134,-135,-138,-132,-68,-69,53,-137,-1,-1,-1,-84,53,53,-89,53,-81,-67,-80,]),'INLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,54,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,54,54,54,-1,-133,-134,-135,-138,-132,-68,-69,54,-137,-1,-1,-1,-84,54,54,-89,54,-81,-67,-80,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,55,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,55,55,55,-1,-133,-134,-135,-138,-132,-68,-69,55,-137,-1,-1,-1,-84,55,55,-89,55,-81,-67,-80,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,56,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,56,56,56,-1,-133,-134,-135,-138,-132,-68,-69,56,-137,-1,-1,-1,-84,56,56,-89,56,-81,-67,-80,]),'SIGNED':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,57,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,57,57,57,-1,-133,-134,-135,-138,-132,-68,-69,57,-137,-1,-1,-1,-84,57,57,-89,57,-81,-67,-80,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,58,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,58,58,58,-1,-133,-134,-135,-138,-132,-68,-69,58,-137,-1,-1,-1,-84,58,58,-89,58,-81,-67,-80,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,130,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-1,59,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,59,59,59,-1,-133,-134,-135,-138,-132,-68,-69,59,-137,-1,-1,-1,-84,59,59,-89,59,-81,-67,-80,]),'FLOAT_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,39,40,43,49,50,51,60,61,62,63,64,65,67,68,72,73,74,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,60,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,60,-91,-92,-93,60,-32,-33,-34,-35,-36,-37,-38,-39,60,60,60,60,60,60,-43,-44,-11,-12,-13,-14,-15,60,-41,-77,-40,-116,60,-94,-95,-96,60,-1,-1,-18,-139,-136,60,-42,60,-142,-141,-125,-130,-16,-17,60,-118,-140,60,60,-99,-101,-100,-102,60,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,60,-97,-98,-19,-77,60,60,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,60,60,60,-78,-70,60,60,-75,60,60,60,-68,-69,60,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,60,60,-89,60,-81,-67,-80,]),'INT_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,39,40,43,49,50,51,60,61,62,63,64,65,67,68,72,73,74,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,61,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,61,-91,-92,-93,61,-32,-33,-34,-35,-36,-37,-38,-39,61,61,61,61,61,61,-43,-44,-11,-12,-13,-14,-15,61,-41,-77,-40,-116,61,-94,-95,-96,61,-1,-1,-18,-139,-136,61,-42,61,-142,-141,-125,-130,-16,-17,61,-118,-140,61,61,-99,-101,-100,-102,61,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,61,-97,-98,-19,-77,61,61,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,61,61,61,-78,-70,61,61,-75,61,61,61,-68,-69,61,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,61,61,-89,61,-81,-67,-80,]),'CHAR_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,39,40,43,49,50,51,60,61,62,63,64,65,67,68,72,73,74,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,62,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,62,-91,-92,-93,62,-32,-33,-34,-35,-36,-37,-38,-39,62,62,62,62,62,62,-43,-44,-11,-12,-13,-14,-15,62,-41,-77,-40,-116,62,-94,-95,-96,62,-1,-1,-18,-139,-136,62,-42,62,-142,-141,-125,-130,-16,-17,62,-118,-140,62,62,-99,-101,-100,-102,62,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,62,-97,-98,-19,-77,62,62,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,62,62,62,-78,-70,62,62,-75,62,62,62,-68,-69,62,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,62,62,-89,62,-81,-67,-80,]),'STRING_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,39,40,43,49,50,51,60,61,62,63,64,65,67,68,72,73,74,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,63,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,63,-91,-92,-93,63,-32,-33,-34,-35,-36,-37,-38,-39,63,63,63,63,63,63,-43,-44,-11,-12,-13,-14,-15,63,-41,-77,-40,-116,63,-94,-95,-96,63,-1,-1,-18,-139,-136,63,-42,63,-142,-141,-125,-130,-16,-17,63,-118,-140,63,63,-99,-101,-100,-102,63,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,63,-97,-98,-19,-77,63,63,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,63,63,63,-78,-70,63,63,-75,63,63,63,-68,-69,63,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,63,63,-89,63,-81,-67,-80,]),'NONDECIMAL_L':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,26,27,28,29,30,31,32,33,34,35,36,39,40,43,49,50,51,60,61,62,63,64,65,67,68,72,73,74,75,76,77,78,79,80,82,83,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,145,146,147,148,149,150,152,153,155,160,161,162,163,164,165,169,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,206,207,208,209,210,212,213,214,216,],[-1,64,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,64,-91,-92,-93,64,-32,-33,-34,-35,-36,-37,-38,-39,64,64,64,64,64,64,-43,-44,-11,-12,-13,-14,-15,64,-41,-77,-40,-116,64,-94,-95,-96,64,-1,-1,-18,-139,-136,64,-42,64,-142,-141,-125,-130,-16,-17,64,-118,-140,64,64,-99,-101,-100,-102,64,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-115,-42,-88,-77,64,-97,-98,-19,-77,64,64,-1,-133,-134,-135,-138,-132,-131,-87,-117,-113,-114,64,64,64,-78,-70,64,64,-75,64,64,64,-68,-69,64,-137,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-1,-84,64,64,-89,64,-81,-67,-80,]),'BITAND':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,49,50,51,60,61,62,63,64,65,67,68,69,70,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,158,159,160,161,162,163,164,165,169,171,172,173,174,175,176,177,179,180,181,182,183,184,186,187,188,192,193,194,195,196,197,198,199,200,201,202,203,206,207,208,209,210,212,213,214,216,],[-1,65,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-42,65,-91,-92,-93,-114,-116,65,-32,-33,-34,-35,-36,-37,-38,-39,65,65,-113,65,65,116,65,65,-43,-44,-11,-12,-13,-14,-15,65,-41,-77,-114,-113,-40,-116,65,-94,-95,-96,65,-1,-1,-18,-139,-113,-116,-114,-136,65,-42,65,-142,-141,-125,-130,-16,-17,65,-118,-140,65,65,-99,-101,-100,-102,65,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-52,-53,-54,-55,-56,-57,-58,-59,-77,-113,-114,-115,-42,-88,-77,65,-97,-98,-19,-77,-113,-114,65,65,-1,-133,-134,-135,-113,-138,-132,-113,-131,-113,-114,-87,116,-113,-114,65,65,65,-82,-78,-70,65,65,-75,65,65,65,-68,-69,65,-98,-85,-86,-83,-1,-79,-71,-73,-74,-76,-82,-1,-113,-114,-114,-113,-1,-84,65,65,-89,65,-81,-67,-80,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,83,87,92,93,94,148,149,150,152,153,181,182,184,207,210,213,214,216,],[-1,0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-139,-136,-142,-141,-125,-133,-134,-135,-138,-132,-68,-69,-137,-84,-89,-81,-67,-80,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,75,76,77,79,80,83,87,92,93,94,145,146,147,148,149,150,152,153,181,182,183,184,192,199,206,207,208,209,210,212,213,214,216,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-48,-91,-92,-93,-94,-95,-96,-1,-1,-139,-136,-142,-141,-125,181,182,-1,-133,-134,-135,-138,-132,-68,-69,204,-137,-1,-1,-1,-84,213,214,-89,216,-81,-67,-80,]),'ASTERISK':([15,16,21,22,27,28,29,30,31,32,33,34,38,41,50,51,60,61,62,63,64,67,69,70,71,72,73,81,82,84,85,86,90,100,104,105,106,107,128,129,131,132,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,167,171,174,184,186,187,188,195,196,197,198,200,201,202,203,],[67,-40,-114,-116,-32,-33,-34,-35,-36,-37,-38,-39,-113,111,-43,-44,-11,-12,-13,-14,-15,-41,-114,-113,67,-40,-116,-42,-18,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,67,-40,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,111,-113,-114,67,-82,67,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'INCREMENT':([16,38,50,51,60,61,62,63,64,70,72,84,90,105,107,128,134,135,143,151,154,158,160,162,186,187,195,200,203,211,],[-42,100,-43,-44,-11,-12,-13,-14,-15,100,-42,100,-42,100,100,100,-42,-88,100,100,100,100,-87,100,-85,-86,100,100,100,215,]),'LBRACK':([16,37,38,50,51,60,61,62,63,64,66,70,72,81,82,84,90,105,107,128,133,134,135,143,151,154,157,158,160,162,166,168,173,186,187,190,194,195,200,203,],[-42,99,102,-43,-44,-11,-12,-13,-14,-15,-123,102,-42,-42,102,102,-42,102,102,102,102,-42,102,102,102,102,102,102,102,102,99,-124,102,-85,-86,-123,102,102,102,102,]),'MEMBER':([16,38,50,51,60,61,62,63,64,70,72,81,82,84,90,105,107,128,133,134,135,143,151,154,157,158,160,162,173,186,187,194,195,200,203,],[-42,103,-43,-44,-11,-12,-13,-14,-15,103,-42,-42,103,103,-42,103,103,103,103,-42,103,103,103,103,103,103,103,103,103,-85,-86,103,103,103,103,]),'SIMPLE_ASSIGN':([16,37,38,50,51,60,61,62,63,64,66,96,134,135,156,160,166,168,185,186,187,190,],[-42,97,97,-43,-44,-11,-12,-13,-14,-15,-123,97,-42,-88,-126,-87,97,-124,-127,-85,-86,-123,]),'COMPLEX_ASSIGN':([16,37,38,50,51,60,61,62,63,64,66,96,134,135,156,160,166,168,185,186,187,190,],[-42,98,98,-43,-44,-11,-12,-13,-14,-15,-123,98,-42,-88,-126,-87,98,-124,-127,-85,-86,-123,]),'PLUS':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,109,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,109,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'DIVIDE':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,112,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,112,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'LSHIFT':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,113,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,113,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'RSHIFT':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,114,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,114,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'PERCENT':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,115,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,115,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'BITOR':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,117,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,-113,-114,-113,-113,-113,-114,-87,117,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'EQ':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,119,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,119,119,-113,-113,-113,-114,-87,119,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'NEQ':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,120,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,120,120,-113,-113,-113,-114,-87,120,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'LT':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,121,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,121,121,-113,-113,-113,-114,-87,121,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'GT':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,122,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,122,122,-113,-113,-113,-114,-87,122,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'LE':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,123,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,123,123,-113,-113,-113,-114,-87,123,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'GE':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,124,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,124,124,-113,-113,-113,-114,-87,124,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'AND':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,125,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,125,125,-113,-113,-113,-114,-87,125,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'OR':([16,21,22,38,41,50,51,60,61,62,63,64,69,70,72,73,84,85,86,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,151,154,158,159,160,161,162,163,171,184,186,187,188,195,196,197,198,200,201,202,203,],[-42,-114,-116,-113,126,-43,-44,-11,-12,-13,-14,-15,-114,-113,-42,-116,-113,-116,-114,-42,-118,-99,-101,-100,-102,-113,-114,-115,-42,-88,-97,-98,126,126,-113,-113,-113,-114,-87,126,-113,-114,-82,-98,-85,-86,-83,-113,-114,-116,-82,-113,-114,-114,-113,]),'SEMI':([21,22,23,37,50,51,60,61,62,63,64,66,73,84,85,86,89,90,100,104,105,106,107,128,129,133,134,135,138,139,143,144,154,160,161,162,163,168,171,184,186,187,188,189,191,198,200,201,202,203,204,],[75,76,77,94,-43,-44,-11,-12,-13,-14,-15,-123,-116,148,149,150,152,-42,-118,-99,-101,-100,-102,-119,-120,-115,-42,-88,-97,-98,-64,-65,148,-87,-117,-113,-114,-124,-82,-98,-85,-86,-83,205,207,-82,-63,-60,-62,-61,210,]),'LBRACE':([24,25,44,45,46,81,171,178,191,217,],[79,80,-49,-50,-51,147,192,199,206,-66,]),'RPAREN':([27,28,29,30,31,32,33,34,50,51,60,61,62,63,64,67,68,69,70,71,72,73,82,90,100,104,105,106,107,127,132,133,134,135,136,137,138,139,141,142,143,144,151,160,161,162,163,164,169,172,173,174,176,177,186,187,188,193,194,195,196,197,198,200,201,202,203,215,],[-32,-33,-34,-35,-36,-37,-38,-39,-43,-44,-11,-12,-13,-14,-15,-41,-77,138,139,140,-40,-116,-18,-42,-118,-99,-101,-100,-102,-77,-40,-115,-42,-88,-77,171,-97,-98,-77,178,-64,-65,184,-87,-117,-113,-114,188,191,-78,-70,-72,-75,198,-85,-86,-83,-79,-71,-73,-74,-76,-82,-63,-60,-62,-61,217,]),'COMMA':([27,28,29,30,31,32,33,34,50,51,60,61,62,63,64,67,72,73,82,90,100,104,105,106,107,133,134,135,138,139,160,161,162,163,172,173,174,176,186,187,188,194,195,196,197,198,],[-32,-33,-34,-35,-36,-37,-38,-39,-43,-44,-11,-12,-13,-14,-15,-41,-40,-116,-18,-42,-118,-99,-101,-100,-102,-115,-42,-88,-97,-98,-87,-117,-113,-114,193,-70,-72,-75,-85,-86,-83,-71,-73,-74,-76,-82,]),'error':([35,36,91,95,97,98,101,140,155,],[89,89,89,-130,-16,-17,-140,-19,-131,]),'RBRACK':([50,51,60,61,62,63,64,73,90,99,100,104,105,106,107,133,134,135,138,139,157,158,159,160,161,162,163,186,187,188,198,],[-43,-44,-11,-12,-13,-14,-15,-116,-42,156,-118,-99,-101,-100,-102,-115,-42,-88,-97,-98,185,186,187,-87,-117,-113,-114,-85,-86,-83,-82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'node_list':([0,79,80,147,192,199,206,],[1,145,146,183,208,209,212,]),'node':([1,145,146,183,208,209,212,],[2,2,2,2,2,2,2,]),'include':([1,145,146,183,208,209,212,],[3,3,3,3,3,3,3,]),'define':([1,145,146,183,208,209,212,],[4,4,4,4,4,4,4,]),'if':([1,145,146,183,208,209,212,],[5,5,5,5,5,5,5,]),'func_def':([1,145,146,183,208,209,212,],[6,6,6,6,6,6,6,]),'func_decl':([1,145,146,183,208,209,212,],[7,7,7,7,7,7,7,]),'statement':([1,145,146,183,208,209,212,],[8,8,8,8,8,8,8,]),'control_expr':([1,145,146,183,208,209,212,],[9,9,9,9,9,9,9,]),'struct_def':([1,145,146,183,208,209,212,],[10,10,10,10,10,10,10,]),'dtype':([1,17,48,88,130,137,145,146,164,169,170,177,183,208,209,212,],[15,71,131,71,167,174,15,15,174,174,71,174,15,15,15,15,]),'init_var':([1,130,145,146,183,208,209,212,],[18,165,18,18,18,18,18,18,]),'assign_var':([1,145,146,183,208,209,212,],[19,19,19,19,19,19,19,]),'declare_var':([1,145,146,183,208,209,212,],[20,20,20,20,20,20,20,]),'expression':([1,17,35,36,39,40,43,78,88,91,102,108,145,146,165,175,179,180,183,208,209,212,],[21,69,86,86,104,106,129,144,69,86,159,163,21,21,144,196,201,202,21,21,21,21,]),'func_call':([1,17,35,36,39,40,43,78,88,91,102,108,137,145,146,164,165,169,175,177,179,180,183,208,209,212,],[22,73,85,85,73,73,73,73,73,85,73,73,176,22,22,176,73,176,197,176,73,73,22,22,22,22,]),'return':([1,145,146,183,208,209,212,],[23,23,23,23,23,23,23,]),'control':([1,145,146,183,208,209,212,],[24,24,24,24,24,24,24,]),'for_loop':([1,145,146,183,208,209,212,],[25,25,25,25,25,25,25,]),'struct_type':([1,17,48,88,130,137,145,146,164,169,170,177,183,208,209,212,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'init_var_ls':([1,130,145,146,183,208,209,212,],[35,35,35,35,35,35,35,35,]),'assign_var_ls':([1,145,146,183,208,209,212,],[36,36,36,36,36,36,36,]),'declare_var_ls':([1,130,145,146,183,208,209,212,],[37,166,37,37,37,37,37,37,]),'name':([1,17,26,35,36,39,40,43,49,65,74,78,88,91,99,102,103,108,137,145,146,164,165,169,174,175,177,179,180,183,208,209,212,],[38,70,82,84,84,105,107,128,133,135,82,143,151,154,157,158,160,162,173,38,38,173,143,173,194,195,173,200,203,38,38,38,38,]),'operand':([1,17,35,36,39,40,43,78,88,91,102,108,145,146,165,175,179,180,183,208,209,212,],[41,41,41,41,41,41,41,41,41,41,41,161,41,41,41,41,41,41,41,41,41,41,]),'modifier':([1,130,145,146,183,208,209,212,],[48,48,48,48,48,48,48,48,]),'type_cast':([1,17,35,36,39,40,43,78,88,91,102,108,137,145,146,164,165,169,175,177,179,180,183,208,209,212,],[49,49,91,91,49,49,49,49,49,91,49,49,175,49,49,175,49,175,49,175,49,49,49,49,49,49,]),'literal':([1,17,26,35,36,39,40,43,49,65,74,78,88,91,99,102,103,108,137,145,146,164,165,169,174,175,177,179,180,183,208,209,212,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'access':([1,17,26,35,36,39,40,43,49,65,74,78,88,91,99,102,103,108,137,145,146,164,165,169,174,175,177,179,180,183,208,209,212,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'init_var_rs':([35,36,91,],[83,93,153,]),'typecast_init':([35,36,91,],[87,87,87,]),'assign_var_rs':([36,],[92,]),'assign':([37,38,96,166,],[95,101,155,95,]),'vector_init':([37,166,],[96,96,]),'binop':([41,161,],[108,108,]),'conditional':([41,143,144,161,],[118,179,180,118,]),'func_arglist':([68,127,136,141,],[137,164,169,177,]),'conditional_expr':([78,165,],[142,189,]),'func_arg':([137,164,169,177,],[172,172,172,172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> node_list","S'",1,None,None,None),
  ('node_list -> <empty>','node_list',0,'p_node_list','ply_tokenizer.py',169),
  ('node_list -> node_list node','node_list',2,'p_node_list','ply_tokenizer.py',170),
  ('node -> include','node',1,'p_node','ply_tokenizer.py',179),
  ('node -> define','node',1,'p_node','ply_tokenizer.py',180),
  ('node -> if','node',1,'p_node','ply_tokenizer.py',181),
  ('node -> func_def','node',1,'p_node','ply_tokenizer.py',182),
  ('node -> func_decl','node',1,'p_node','ply_tokenizer.py',183),
  ('node -> statement','node',1,'p_node','ply_tokenizer.py',184),
  ('node -> control_expr','node',1,'p_node','ply_tokenizer.py',185),
  ('node -> struct_def','node',1,'p_node','ply_tokenizer.py',186),
  ('literal -> FLOAT_L','literal',1,'p_literal','ply_tokenizer.py',192),
  ('literal -> INT_L','literal',1,'p_literal','ply_tokenizer.py',193),
  ('literal -> CHAR_L','literal',1,'p_literal','ply_tokenizer.py',194),
  ('literal -> STRING_L','literal',1,'p_literal','ply_tokenizer.py',195),
  ('literal -> NONDECIMAL_L','literal',1,'p_literal','ply_tokenizer.py',196),
  ('assign -> SIMPLE_ASSIGN','assign',1,'p_assign','ply_tokenizer.py',200),
  ('assign -> COMPLEX_ASSIGN','assign',1,'p_assign','ply_tokenizer.py',201),
  ('struct_type -> STRUCT name','struct_type',2,'p_struct_type','ply_tokenizer.py',205),
  ('type_cast -> LPAREN dtype RPAREN','type_cast',3,'p_type_cast','ply_tokenizer.py',209),
  ('modifier -> CONST','modifier',1,'p_modifier','ply_tokenizer.py',213),
  ('modifier -> EXTERN','modifier',1,'p_modifier','ply_tokenizer.py',214),
  ('modifier -> INLINE','modifier',1,'p_modifier','ply_tokenizer.py',215),
  ('modifier -> LONG','modifier',1,'p_modifier','ply_tokenizer.py',216),
  ('modifier -> SHORT','modifier',1,'p_modifier','ply_tokenizer.py',217),
  ('modifier -> SIGNED','modifier',1,'p_modifier','ply_tokenizer.py',218),
  ('modifier -> UNSIGNED','modifier',1,'p_modifier','ply_tokenizer.py',219),
  ('modifier -> VOLATILE','modifier',1,'p_modifier','ply_tokenizer.py',220),
  ('modifier_list -> <empty>','modifier_list',0,'p_modifier_list','ply_tokenizer.py',225),
  ('modifier_list -> modifier_list modifier','modifier_list',2,'p_modifier_list','ply_tokenizer.py',226),
  ('modified -> modifier_list dtype','modified',2,'p_modified_type','ply_tokenizer.py',234),
  ('modified -> modifier','modified',1,'p_modified_type','ply_tokenizer.py',235),
  ('dtype -> CHAR','dtype',1,'p_dtype','ply_tokenizer.py',240),
  ('dtype -> DOUBLE','dtype',1,'p_dtype','ply_tokenizer.py',241),
  ('dtype -> FLOAT','dtype',1,'p_dtype','ply_tokenizer.py',242),
  ('dtype -> INT','dtype',1,'p_dtype','ply_tokenizer.py',243),
  ('dtype -> VOID','dtype',1,'p_dtype','ply_tokenizer.py',244),
  ('dtype -> UINT8_T','dtype',1,'p_dtype','ply_tokenizer.py',245),
  ('dtype -> UINT16_T','dtype',1,'p_dtype','ply_tokenizer.py',246),
  ('dtype -> struct_type','dtype',1,'p_dtype','ply_tokenizer.py',247),
  ('dtype -> ID','dtype',1,'p_dtype','ply_tokenizer.py',248),
  ('dtype -> dtype ASTERISK','dtype',2,'p_dtype','ply_tokenizer.py',249),
  ('name -> ID','name',1,'p_names','ply_tokenizer.py',255),
  ('name -> literal','name',1,'p_names','ply_tokenizer.py',256),
  ('name -> access','name',1,'p_names','ply_tokenizer.py',257),
  ('include -> INCLUDE','include',1,'p_include','ply_tokenizer.py',272),
  ('define -> DEFINE','define',1,'p_define','ply_tokenizer.py',277),
  ('if -> IFNDEF','if',1,'p_ifs','ply_tokenizer.py',281),
  ('if -> ENDIF','if',1,'p_ifs','ply_tokenizer.py',282),
  ('control -> WHILE','control',1,'p_controls','ply_tokenizer.py',290),
  ('control -> IF','control',1,'p_controls','ply_tokenizer.py',291),
  ('control -> ELSE','control',1,'p_controls','ply_tokenizer.py',292),
  ('conditional -> EQ','conditional',1,'p_conditionals','ply_tokenizer.py',298),
  ('conditional -> NEQ','conditional',1,'p_conditionals','ply_tokenizer.py',299),
  ('conditional -> LT','conditional',1,'p_conditionals','ply_tokenizer.py',300),
  ('conditional -> GT','conditional',1,'p_conditionals','ply_tokenizer.py',301),
  ('conditional -> LE','conditional',1,'p_conditionals','ply_tokenizer.py',302),
  ('conditional -> GE','conditional',1,'p_conditionals','ply_tokenizer.py',303),
  ('conditional -> AND','conditional',1,'p_conditionals','ply_tokenizer.py',304),
  ('conditional -> OR','conditional',1,'p_conditionals','ply_tokenizer.py',305),
  ('conditional_expr -> name conditional expression','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',310),
  ('conditional_expr -> expression conditional name','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',311),
  ('conditional_expr -> expression conditional expression','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',312),
  ('conditional_expr -> name conditional name','conditional_expr',3,'p_conditional_expr','ply_tokenizer.py',313),
  ('conditional_expr -> name','conditional_expr',1,'p_conditional_expr','ply_tokenizer.py',314),
  ('conditional_expr -> expression','conditional_expr',1,'p_conditional_expr','ply_tokenizer.py',315),
  ('for_loop -> FOR LPAREN init_var conditional_expr SEMI ID INCREMENT RPAREN','for_loop',8,'p_for_loop','ply_tokenizer.py',319),
  ('control_expr -> control LPAREN conditional_expr RPAREN LBRACE node_list RBRACE','control_expr',7,'p_control_expr','ply_tokenizer.py',323),
  ('control_expr -> control LBRACE node_list RBRACE','control_expr',4,'p_control_expr','ply_tokenizer.py',324),
  ('control_expr -> for_loop LBRACE node_list RBRACE','control_expr',4,'p_control_expr','ply_tokenizer.py',325),
  ('func_arg -> name','func_arg',1,'p_func_arg','ply_tokenizer.py',337),
  ('func_arg -> dtype name','func_arg',2,'p_func_arg','ply_tokenizer.py',338),
  ('func_arg -> dtype','func_arg',1,'p_func_arg','ply_tokenizer.py',339),
  ('func_arg -> type_cast name','func_arg',2,'p_func_arg','ply_tokenizer.py',340),
  ('func_arg -> type_cast expression','func_arg',2,'p_func_arg','ply_tokenizer.py',341),
  ('func_arg -> func_call','func_arg',1,'p_func_arg','ply_tokenizer.py',342),
  ('func_arg -> type_cast func_call','func_arg',2,'p_func_arg','ply_tokenizer.py',343),
  ('func_arglist -> <empty>','func_arglist',0,'p_func_arglist','ply_tokenizer.py',352),
  ('func_arglist -> func_arglist func_arg','func_arglist',2,'p_func_arglist','ply_tokenizer.py',353),
  ('func_arglist -> func_arglist func_arg COMMA','func_arglist',3,'p_func_arglist','ply_tokenizer.py',354),
  ('func_def -> dtype ID LPAREN func_arglist RPAREN LBRACE node_list RBRACE','func_def',8,'p_func_def','ply_tokenizer.py',370),
  ('func_def -> ID LPAREN func_arglist RPAREN LBRACE node_list RBRACE','func_def',7,'p_func_def','ply_tokenizer.py',371),
  ('func_call -> ID LPAREN func_arglist RPAREN','func_call',4,'p_func_call','ply_tokenizer.py',385),
  ('func_call -> SIZEOF LPAREN func_arglist RPAREN','func_call',4,'p_func_call','ply_tokenizer.py',386),
  ('func_decl -> dtype ID LPAREN func_arglist RPAREN SEMI','func_decl',6,'p_func_decl','ply_tokenizer.py',397),
  ('access -> name LBRACK name RBRACK','access',4,'p_access','ply_tokenizer.py',407),
  ('access -> name LBRACK expression RBRACK','access',4,'p_access','ply_tokenizer.py',408),
  ('access -> name MEMBER name','access',3,'p_access','ply_tokenizer.py',409),
  ('access -> BITAND name','access',2,'p_access','ply_tokenizer.py',410),
  ('struct_def -> STRUCT ID LBRACE node_list RBRACE SEMI','struct_def',6,'p_struct_def','ply_tokenizer.py',422),
  ('struct_typedef -> TYPEDEF STRUCT LBRACE node_list RBRACE ID SEMI','struct_typedef',7,'p_struct_typedef','ply_tokenizer.py',426),
  ('statement -> init_var','statement',1,'p_statement_assign','ply_tokenizer.py',433),
  ('statement -> assign_var','statement',1,'p_statement_assign','ply_tokenizer.py',434),
  ('statement -> declare_var','statement',1,'p_statement_assign','ply_tokenizer.py',435),
  ('statement -> expression SEMI','statement',2,'p_statement_expression','ply_tokenizer.py',440),
  ('statement -> func_call SEMI','statement',2,'p_statement_expression','ply_tokenizer.py',441),
  ('statement -> return SEMI','statement',2,'p_statement_expression','ply_tokenizer.py',442),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','ply_tokenizer.py',446),
  ('expression -> LPAREN name RPAREN','expression',3,'p_expression_group','ply_tokenizer.py',447),
  ('expression -> NEGATE expression','expression',2,'p_expression_neg','ply_tokenizer.py',451),
  ('expression -> MINUS expression','expression',2,'p_expression_neg','ply_tokenizer.py',452),
  ('expression -> NEGATE name','expression',2,'p_expression_neg','ply_tokenizer.py',453),
  ('expression -> MINUS name','expression',2,'p_expression_neg','ply_tokenizer.py',454),
  ('binop -> PLUS','binop',1,'p_binops','ply_tokenizer.py',460),
  ('binop -> MINUS','binop',1,'p_binops','ply_tokenizer.py',461),
  ('binop -> ASTERISK','binop',1,'p_binops','ply_tokenizer.py',462),
  ('binop -> DIVIDE','binop',1,'p_binops','ply_tokenizer.py',463),
  ('binop -> LSHIFT','binop',1,'p_binops','ply_tokenizer.py',464),
  ('binop -> RSHIFT','binop',1,'p_binops','ply_tokenizer.py',465),
  ('binop -> PERCENT','binop',1,'p_binops','ply_tokenizer.py',466),
  ('binop -> BITAND','binop',1,'p_binops','ply_tokenizer.py',467),
  ('binop -> BITOR','binop',1,'p_binops','ply_tokenizer.py',468),
  ('binop -> conditional','binop',1,'p_binops','ply_tokenizer.py',469),
  ('operand -> name','operand',1,'p_operands','ply_tokenizer.py',473),
  ('operand -> expression','operand',1,'p_operands','ply_tokenizer.py',474),
  ('operand -> type_cast name','operand',2,'p_operands','ply_tokenizer.py',475),
  ('operand -> func_call','operand',1,'p_operands','ply_tokenizer.py',476),
  ('expression -> operand binop operand','expression',3,'p_expression_binop','ply_tokenizer.py',481),
  ('expression -> name INCREMENT','expression',2,'p_expression_increment','ply_tokenizer.py',486),
  ('return -> RETURN name','return',2,'p_expression_return','ply_tokenizer.py',490),
  ('return -> RETURN expression','return',2,'p_expression_return','ply_tokenizer.py',491),
  ('complex_dtype -> dtype','complex_dtype',1,'p_complex_dtype','ply_tokenizer.py',514),
  ('complex_dtype -> modifier dtype','complex_dtype',2,'p_complex_dtype','ply_tokenizer.py',515),
  ('declare_var_ls -> dtype ID','declare_var_ls',2,'p_decl_var_ls','ply_tokenizer.py',522),
  ('declare_var_ls -> modifier dtype ID','declare_var_ls',3,'p_decl_var_ls','ply_tokenizer.py',523),
  ('declare_var -> declare_var_ls SEMI','declare_var',2,'p_declare_var','ply_tokenizer.py',531),
  ('vector_init -> LBRACK RBRACK','vector_init',2,'p_vector_init','ply_tokenizer.py',537),
  ('vector_init -> LBRACK name RBRACK','vector_init',3,'p_vector_init','ply_tokenizer.py',538),
  ('vector_init_list -> <empty>','vector_init_list',0,'p_vector_init_list','ply_tokenizer.py',542),
  ('vector_init_list -> vector_init_list vector_init','vector_init_list',2,'p_vector_init_list','ply_tokenizer.py',543),
  ('init_var_ls -> declare_var_ls assign','init_var_ls',2,'p_init_var_ls','ply_tokenizer.py',551),
  ('init_var_ls -> declare_var_ls vector_init assign','init_var_ls',3,'p_init_var_ls','ply_tokenizer.py',552),
  ('typecast_init -> type_cast init_var_rs','typecast_init',2,'p_typecast_init_rs','ply_tokenizer.py',559),
  ('init_var_rs -> name SEMI','init_var_rs',2,'p_init_var_rs','ply_tokenizer.py',563),
  ('init_var_rs -> func_call SEMI','init_var_rs',2,'p_init_var_rs','ply_tokenizer.py',564),
  ('init_var_rs -> expression SEMI','init_var_rs',2,'p_init_var_rs','ply_tokenizer.py',565),
  ('init_var_rs -> typecast_init','init_var_rs',1,'p_init_var_rs','ply_tokenizer.py',566),
  ('init_var_rs -> LPAREN name RPAREN','init_var_rs',3,'p_init_var_rs','ply_tokenizer.py',567),
  ('init_var_rs -> error SEMI','init_var_rs',2,'p_init_var_rs_error','ply_tokenizer.py',575),
  ('init_var -> init_var_ls init_var_rs','init_var',2,'p_init_var','ply_tokenizer.py',580),
  ('assign_var_ls -> name assign','assign_var_ls',2,'p_assign_var_ls','ply_tokenizer.py',588),
  ('assign_var_rs -> init_var_rs','assign_var_rs',1,'p_assign_var_rs','ply_tokenizer.py',593),
  ('assign_var -> assign_var_ls assign_var_rs','assign_var',2,'p_assign_var','ply_tokenizer.py',598),
]
