Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
Token(type='PREPROC', value='#ifndef LINKED_LIST', line=3, column=0)
Token(type='PREPROC', value='#define LINKED_LIST', line=4, column=0)
Token(type='PREPROC', value='#include <stdlib.h>', line=5, column=0)
Token(type='PREPROC', value='#include "OLED_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=7, column=0)
Token(type='PREPROC', value='#include "UART_driver.h"', line=8, column=0)
Token(type='ID', value='struct', line=10, column=0)
Token(type='ID', value='Node', line=10, column=7)
Token(type='BRACEOPEN', value='{', line=10, column=12)
Token(type='ID', value='char', line=11, column=4)
Token(type='ARITOP', value='*', line=11, column=10)
Token(type='ID', value='data', line=11, column=11)
Token(type='END', value=';', line=11, column=15)
Token(type='ID', value='struct', line=12, column=4)
Token(type='ID', value='Node', line=12, column=11)
Token(type='ARITOP', value='*', line=12, column=15)
Token(type='ID', value='next', line=12, column=17)
Token(type='END', value=';', line=12, column=21)
Token(type='ID', value='struct', line=13, column=4)
Token(type='ID', value='Node', line=13, column=11)
Token(type='ARITOP', value='*', line=13, column=15)
Token(type='ID', value='prev', line=13, column=17)
Token(type='END', value=';', line=13, column=21)
Token(type='ID', value='struct', line=14, column=4)
Token(type='ID', value='Node', line=14, column=11)
Token(type='ARITOP', value='*', line=14, column=15)
Token(type='ID', value='sub', line=14, column=17)
Token(type='END', value=';', line=14, column=20)
Token(type='ID', value='struct', line=15, column=4)
Token(type='ID', value='Node', line=15, column=11)
Token(type='ARITOP', value='*', line=15, column=15)
Token(type='ID', value='super', line=15, column=17)
Token(type='END', value=';', line=15, column=22)
Token(type='BRACECLOSE', value='}', line=16, column=0)
Token(type='END', value=';', line=16, column=1)
Token(type='ID', value='void', line=18, column=0)
Token(type='ID', value='init_menu', line=18, column=5)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='ID', value='void', line=18, column=15)
Token(type='PARCLOSE', value=')', line=18, column=19)
Token(type='END', value=';', line=18, column=20)
Token(type='ID', value='void', line=22, column=0)
Token(type='ID', value='print_menu', line=22, column=5)
Token(type='PAROPEN', value='(', line=22, column=15)
Token(type='ID', value='void', line=22, column=16)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='void', line=24, column=0)
Token(type='ID', value='menu_up', line=24, column=5)
Token(type='PAROPEN', value='(', line=24, column=12)
Token(type='PARCLOSE', value=')', line=24, column=13)
Token(type='END', value=';', line=24, column=14)
Token(type='ID', value='void', line=25, column=0)
Token(type='ID', value='menu_down', line=25, column=5)
Token(type='PAROPEN', value='(', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=15)
Token(type='END', value=';', line=25, column=16)
Token(type='ID', value='struct', line=26, column=0)
Token(type='ID', value='Node', line=26, column=7)
Token(type='ARITOP', value='*', line=26, column=11)
Token(type='ID', value='menu_pos', line=26, column=13)
Token(type='PAROPEN', value='(', line=26, column=21)
Token(type='PARCLOSE', value=')', line=26, column=22)
Token(type='END', value=';', line=26, column=23)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='menu_sub', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='PARCLOSE', value=')', line=27, column=14)
Token(type='END', value=';', line=27, column=15)
Token(type='ID', value='void', line=28, column=0)
Token(type='ID', value='menu_super', line=28, column=5)
Token(type='PAROPEN', value='(', line=28, column=15)
Token(type='PARCLOSE', value=')', line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='struct', line=29, column=0)
Token(type='ID', value='Node', line=29, column=7)
Token(type='ARITOP', value='*', line=29, column=11)
Token(type='ID', value='get_head', line=29, column=13)
Token(type='PAROPEN', value='(', line=29, column=21)
Token(type='PARCLOSE', value=')', line=29, column=22)
Token(type='END', value=';', line=29, column=23)
Token(type='PREPROC', value='#endif', line=30, column=0)
