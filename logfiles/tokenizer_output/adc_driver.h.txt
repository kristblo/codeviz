Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=3, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=4, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=5, column=0)
Token(type='ID', value='typedef', line=11, column=0)
Token(type='ID', value='struct', line=11, column=8)
Token(type='BRACEOPEN', value='{', line=11, column=15)
Token(type='ID', value='uint8_t', line=12, column=4)
Token(type='ID', value='x', line=12, column=12)
Token(type='END', value=';', line=12, column=13)
Token(type='ID', value='uint8_t', line=13, column=4)
Token(type='ID', value='y', line=13, column=12)
Token(type='END', value=';', line=13, column=13)
Token(type='BRACECLOSE', value='}', line=14, column=0)
Token(type='ID', value='joystick_positions_t', line=14, column=2)
Token(type='END', value=';', line=14, column=22)
Token(type='ID', value='typedef', line=18, column=0)
Token(type='ID', value='enum', line=18, column=8)
Token(type='ID', value='direction', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=22)
Token(type='ID', value='LEFT', line=19, column=4)
Token(type='LISTSEP', value=',', line=19, column=8)
Token(type='ID', value='RIGHT', line=20, column=4)
Token(type='LISTSEP', value=',', line=20, column=9)
Token(type='ID', value='UP', line=21, column=4)
Token(type='LISTSEP', value=',', line=21, column=6)
Token(type='ID', value='DOWN', line=22, column=4)
Token(type='LISTSEP', value=',', line=22, column=8)
Token(type='ID', value='NEUTRAL', line=23, column=4)
Token(type='LISTSEP', value=',', line=23, column=11)
Token(type='ID', value='ERROR', line=24, column=4)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='direction_t', line=25, column=1)
Token(type='END', value=';', line=25, column=12)
Token(type='ID', value='void', line=27, column=0)
Token(type='ID', value='ADC_init', line=27, column=5)
Token(type='PAROPEN', value='(', line=27, column=13)
Token(type='ID', value='void', line=27, column=14)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='END', value=';', line=27, column=19)
Token(type='ID', value='uint8_t', line=29, column=0)
Token(type='ID', value='x_channel_adc_read', line=29, column=8)
Token(type='PAROPEN', value='(', line=29, column=26)
Token(type='ID', value='void', line=29, column=27)
Token(type='PARCLOSE', value=')', line=29, column=31)
Token(type='END', value=';', line=29, column=32)
Token(type='ID', value='uint8_t', line=31, column=0)
Token(type='ID', value='y_channel_adc_read', line=31, column=8)
Token(type='PAROPEN', value='(', line=31, column=26)
Token(type='ID', value='void', line=31, column=27)
Token(type='PARCLOSE', value=')', line=31, column=31)
Token(type='END', value=';', line=31, column=32)
Token(type='ID', value='joystick_positions_t', line=33, column=0)
Token(type='ID', value='get_joystick_positions', line=33, column=21)
Token(type='PAROPEN', value='(', line=33, column=43)
Token(type='ID', value='void', line=33, column=44)
Token(type='PARCLOSE', value=')', line=33, column=48)
Token(type='END', value=';', line=33, column=49)
Token(type='ID', value='direction_t', line=35, column=0)
Token(type='ID', value='get_direction', line=35, column=12)
Token(type='PAROPEN', value='(', line=35, column=25)
Token(type='ID', value='void', line=35, column=26)
Token(type='PARCLOSE', value=')', line=35, column=30)
Token(type='END', value=';', line=35, column=31)
Token(type='ID', value='uint8_t', line=37, column=0)
Token(type='ID', value='read_right_slider', line=37, column=8)
Token(type='PAROPEN', value='(', line=37, column=25)
Token(type='ID', value='void', line=37, column=26)
Token(type='PARCLOSE', value=')', line=37, column=30)
Token(type='END', value=';', line=37, column=31)
Token(type='ID', value='uint8_t', line=39, column=0)
Token(type='ID', value='read_left_slider', line=39, column=8)
Token(type='PAROPEN', value='(', line=39, column=24)
Token(type='ID', value='void', line=39, column=25)
Token(type='PARCLOSE', value=')', line=39, column=29)
Token(type='END', value=';', line=39, column=30)
Token(type='ID', value='char', line=41, column=0)
Token(type='ARITOP', value='*', line=41, column=4)
Token(type='ID', value='direction_to_string', line=41, column=6)
Token(type='PAROPEN', value='(', line=41, column=25)
Token(type='ID', value='direction_t', line=41, column=26)
Token(type='ID', value='dir', line=41, column=38)
Token(type='PARCLOSE', value=')', line=41, column=41)
Token(type='END', value=';', line=41, column=42)
Token(type='ID', value='char', line=43, column=0)
Token(type='ID', value='get_right_button', line=43, column=5)
Token(type='PAROPEN', value='(', line=43, column=21)
Token(type='ID', value='void', line=43, column=22)
Token(type='PARCLOSE', value=')', line=43, column=26)
Token(type='END', value=';', line=43, column=27)
Token(type='ID', value='char', line=45, column=0)
Token(type='ID', value='get_left_button', line=45, column=5)
Token(type='PAROPEN', value='(', line=45, column=20)
Token(type='ID', value='void', line=45, column=21)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='PREPROC', value='#endif', line=47, column=0)
Token(type='PREPROC', value='#ifndef ADC_DRIVER', line=1, column=0)
Token(type='PREPROC', value='#define ADC_DRIVER', line=2, column=0)
Token(type='PREPROC', value='#include "stdint.h"', line=3, column=0)
Token(type='PREPROC', value='#include "stdio.h"', line=4, column=0)
Token(type='ID', value='int', line=6, column=0)
Token(type='ID', value='adc_init', line=6, column=4)
Token(type='PAROPEN', value='(', line=6, column=12)
Token(type='PARCLOSE', value=')', line=6, column=13)
Token(type='END', value=';', line=6, column=14)
Token(type='ID', value='uint16_t', line=8, column=0)
Token(type='ID', value='adc_read', line=8, column=9)
Token(type='PAROPEN', value='(', line=8, column=17)
Token(type='PARCLOSE', value=')', line=8, column=18)
Token(type='END', value=';', line=8, column=19)
Token(type='ID', value='uint8_t', line=10, column=0)
Token(type='ID', value='get_goals', line=10, column=8)
Token(type='PAROPEN', value='(', line=10, column=17)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='END', value=';', line=10, column=19)
Token(type='ID', value='typedef', line=12, column=0)
Token(type='ID', value='enum', line=12, column=8)
Token(type='ID', value='adc_val', line=12, column=13)
Token(type='BRACEOPEN', value='{', line=12, column=20)
Token(type='ID', value='ADC_LOW', line=13, column=4)
Token(type='ASSIGN', value='=', line=13, column=12)
Token(type='NUMBER', value=0, line=13, column=14)
Token(type='LISTSEP', value=',', line=13, column=15)
Token(type='ID', value='ADC_HIGH', line=14, column=4)
Token(type='ASSIGN', value='=', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=15)
Token(type='BRACECLOSE', value='}', line=15, column=0)
Token(type='ID', value='adc_value', line=15, column=1)
Token(type='END', value=';', line=15, column=10)
Token(type='PREPROC', value='#endif', line=16, column=0)
