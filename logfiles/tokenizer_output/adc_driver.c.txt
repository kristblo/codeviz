Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=4, column=0)
Token(type='PREPROC', value='#include <avr/io.h>', line=5, column=0)
Token(type='ID', value='volatile', line=7, column=0)
Token(type='ID', value='char', line=7, column=9)
Token(type='ARITOP', value='*', line=7, column=14)
Token(type='ID', value='adc', line=7, column=15)
Token(type='ASSIGN', value='=', line=7, column=19)
Token(type='PAROPEN', value='(', line=7, column=21)
Token(type='ID', value='char', line=7, column=22)
Token(type='ARITOP', value='*', line=7, column=27)
Token(type='PARCLOSE', value=')', line=7, column=28)
Token(type='PREFIX', value='0x', line=7, column=30)
Token(type='NUMBER', value=1400, line=7, column=32)
Token(type='END', value=';', line=7, column=36)
Token(type='ID', value='joystick_positions_t', line=8, column=0)
Token(type='ID', value='offset', line=8, column=21)
Token(type='END', value=';', line=8, column=27)
Token(type='ID', value='void', line=10, column=0)
Token(type='ID', value='ADC_init', line=10, column=5)
Token(type='PAROPEN', value='(', line=10, column=13)
Token(type='ID', value='void', line=10, column=14)
Token(type='PARCLOSE', value=')', line=10, column=18)
Token(type='BRACEOPEN', value='{', line=10, column=19)
Token(type='ID', value='DDRB', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=9)
Token(type='PREFIX', value='0x', line=11, column=12)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='END', value=';', line=11, column=16)
Token(type='ID', value='TCCR0', line=14, column=4)
Token(type='ASSIGN', value='|=', line=14, column=10)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='NUMBER', value=1, line=14, column=14)
Token(type='BITWOP', value='<<', line=14, column=16)
Token(type='ID', value='WGM01', line=14, column=19)
Token(type='PARCLOSE', value=')', line=14, column=24)
Token(type='END', value=';', line=14, column=25)
Token(type='ID', value='DDRB', line=17, column=4)
Token(type='ASSIGN', value='&=', line=17, column=9)
Token(type='BITWOP', value='~', line=17, column=12)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1, line=17, column=15)
Token(type='BITWOP', value='<<', line=17, column=17)
Token(type='NUMBER', value=2, line=17, column=20)
Token(type='PARCLOSE', value=')', line=17, column=21)
Token(type='END', value=';', line=17, column=22)
Token(type='ID', value='PORTB', line=18, column=4)
Token(type='ASSIGN', value='&=', line=18, column=10)
Token(type='BITWOP', value='~', line=18, column=13)
Token(type='PAROPEN', value='(', line=18, column=14)
Token(type='NUMBER', value=1, line=18, column=16)
Token(type='BITWOP', value='<<', line=18, column=18)
Token(type='NUMBER', value=2, line=18, column=21)
Token(type='PARCLOSE', value=')', line=18, column=22)
Token(type='END', value=';', line=18, column=23)
Token(type='ID', value='DDRB', line=19, column=4)
Token(type='ASSIGN', value='&=', line=19, column=9)
Token(type='BITWOP', value='~', line=19, column=12)
Token(type='PAROPEN', value='(', line=19, column=13)
Token(type='NUMBER', value=1, line=19, column=15)
Token(type='BITWOP', value='<<', line=19, column=17)
Token(type='NUMBER', value=3, line=19, column=20)
Token(type='PARCLOSE', value=')', line=19, column=21)
Token(type='END', value=';', line=19, column=22)
Token(type='ID', value='PORTB', line=20, column=4)
Token(type='ASSIGN', value='&=', line=20, column=10)
Token(type='BITWOP', value='~', line=20, column=13)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='NUMBER', value=1, line=20, column=16)
Token(type='BITWOP', value='<<', line=20, column=18)
Token(type='NUMBER', value=3, line=20, column=21)
Token(type='PARCLOSE', value=')', line=20, column=22)
Token(type='END', value=';', line=20, column=23)
Token(type='ID', value='DDRE', line=22, column=4)
Token(type='ASSIGN', value='&=', line=22, column=9)
Token(type='BITWOP', value='~', line=22, column=12)
Token(type='PAROPEN', value='(', line=22, column=13)
Token(type='NUMBER', value=1, line=22, column=14)
Token(type='BITWOP', value='<<', line=22, column=16)
Token(type='NUMBER', value=2, line=22, column=19)
Token(type='PARCLOSE', value=')', line=22, column=20)
Token(type='END', value=';', line=22, column=21)
Token(type='ID', value='PORTE', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=10)
Token(type='BITWOP', value='~', line=23, column=13)
Token(type='PAROPEN', value='(', line=23, column=14)
Token(type='NUMBER', value=1, line=23, column=15)
Token(type='BITWOP', value='<<', line=23, column=17)
Token(type='NUMBER', value=2, line=23, column=20)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='TCCR0', line=28, column=4)
Token(type='ASSIGN', value='|=', line=28, column=10)
Token(type='PAROPEN', value='(', line=28, column=13)
Token(type='NUMBER', value=1, line=28, column=14)
Token(type='BITWOP', value='<<', line=28, column=16)
Token(type='ID', value='COM00', line=28, column=19)
Token(type='PARCLOSE', value=')', line=28, column=24)
Token(type='END', value=';', line=28, column=25)
Token(type='ID', value='TCCR0', line=30, column=4)
Token(type='ASSIGN', value='|=', line=30, column=10)
Token(type='PAROPEN', value='(', line=30, column=13)
Token(type='NUMBER', value=1, line=30, column=14)
Token(type='BITWOP', value='<<', line=30, column=16)
Token(type='ID', value='CS00', line=30, column=19)
Token(type='PARCLOSE', value=')', line=30, column=23)
Token(type='END', value=';', line=30, column=24)
Token(type='ID', value='OCR0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='NUMBER', value=0, line=34, column=11)
Token(type='END', value=';', line=34, column=12)
Token(type='ID', value='offset', line=35, column=4)
Token(type='MEMBER', value='.', line=35, column=10)
Token(type='ID', value='x', line=35, column=11)
Token(type='ASSIGN', value='=', line=35, column=13)
Token(type='NUMBER', value=128, line=35, column=16)
Token(type='ARITOP', value='-', line=35, column=20)
Token(type='ID', value='x_channel_adc_read', line=35, column=22)
Token(type='PAROPEN', value='(', line=35, column=40)
Token(type='PARCLOSE', value=')', line=35, column=41)
Token(type='END', value=';', line=35, column=42)
Token(type='ID', value='offset', line=36, column=4)
Token(type='MEMBER', value='.', line=36, column=10)
Token(type='ID', value='y', line=36, column=11)
Token(type='ASSIGN', value='=', line=36, column=13)
Token(type='NUMBER', value=128, line=36, column=15)
Token(type='ARITOP', value='-', line=36, column=19)
Token(type='ID', value='y_channel_adc_read', line=36, column=20)
Token(type='PAROPEN', value='(', line=36, column=38)
Token(type='PARCLOSE', value=')', line=36, column=39)
Token(type='END', value=';', line=36, column=40)
Token(type='BRACECLOSE', value='}', line=38, column=0)
Token(type='ID', value='uint8_t', line=40, column=0)
Token(type='ID', value='x_channel_adc_read', line=40, column=8)
Token(type='PAROPEN', value='(', line=40, column=26)
Token(type='ID', value='void', line=40, column=27)
Token(type='PARCLOSE', value=')', line=40, column=31)
Token(type='BRACEOPEN', value='{', line=40, column=32)
Token(type='ID', value='adc', line=41, column=4)
Token(type='BRACKOPEN', value='[', line=41, column=7)
Token(type='NUMBER', value=0, line=41, column=8)
Token(type='BRACKCLOSE', value=']', line=41, column=9)
Token(type='ASSIGN', value='=', line=41, column=11)
Token(type='PREFIX', value='0b', line=41, column=13)
Token(type='NUMBER', value=10000001, line=41, column=15)
Token(type='END', value=';', line=41, column=23)
Token(type='ID', value='_delay_ms', line=42, column=4)
Token(type='PAROPEN', value='(', line=42, column=13)
Token(type='NUMBER', value=1, line=42, column=14)
Token(type='PARCLOSE', value=')', line=42, column=15)
Token(type='END', value=';', line=42, column=16)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='adc', line=43, column=11)
Token(type='BRACKOPEN', value='[', line=43, column=14)
Token(type='NUMBER', value=0, line=43, column=15)
Token(type='BRACKCLOSE', value=']', line=43, column=16)
Token(type='END', value=';', line=43, column=17)
Token(type='BRACECLOSE', value='}', line=44, column=0)
Token(type='ID', value='uint8_t', line=45, column=0)
Token(type='ID', value='y_channel_adc_read', line=45, column=8)
Token(type='PAROPEN', value='(', line=45, column=26)
Token(type='ID', value='void', line=45, column=27)
Token(type='PARCLOSE', value=')', line=45, column=31)
Token(type='BRACEOPEN', value='{', line=45, column=32)
Token(type='ID', value='adc', line=46, column=4)
Token(type='BRACKOPEN', value='[', line=46, column=7)
Token(type='NUMBER', value=0, line=46, column=8)
Token(type='BRACKCLOSE', value=']', line=46, column=9)
Token(type='ASSIGN', value='=', line=46, column=11)
Token(type='PREFIX', value='0b', line=46, column=13)
Token(type='NUMBER', value=10000000, line=46, column=15)
Token(type='END', value=';', line=46, column=23)
Token(type='ID', value='_delay_ms', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='NUMBER', value=1, line=47, column=14)
Token(type='PARCLOSE', value=')', line=47, column=15)
Token(type='END', value=';', line=47, column=16)
Token(type='ID', value='return', line=48, column=4)
Token(type='ID', value='adc', line=48, column=11)
Token(type='BRACKOPEN', value='[', line=48, column=14)
Token(type='NUMBER', value=0, line=48, column=15)
Token(type='BRACKCLOSE', value=']', line=48, column=16)
Token(type='END', value=';', line=48, column=17)
Token(type='BRACECLOSE', value='}', line=49, column=0)
Token(type='ID', value='joystick_positions_t', line=51, column=0)
Token(type='ID', value='get_joystick_positions', line=51, column=21)
Token(type='PAROPEN', value='(', line=51, column=43)
Token(type='ID', value='void', line=51, column=44)
Token(type='PARCLOSE', value=')', line=51, column=48)
Token(type='BRACEOPEN', value='{', line=51, column=49)
Token(type='ID', value='joystick_positions_t', line=52, column=4)
Token(type='ID', value='pos', line=52, column=25)
Token(type='END', value=';', line=52, column=28)
Token(type='ID', value='uint8_t', line=53, column=4)
Token(type='ID', value='x', line=53, column=12)
Token(type='ASSIGN', value='=', line=53, column=14)
Token(type='ID', value='x_channel_adc_read', line=53, column=17)
Token(type='PAROPEN', value='(', line=53, column=35)
Token(type='PARCLOSE', value=')', line=53, column=36)
Token(type='END', value=';', line=53, column=37)
Token(type='ID', value='uint8_t', line=54, column=4)
Token(type='ID', value='y', line=54, column=12)
Token(type='ASSIGN', value='=', line=54, column=14)
Token(type='ID', value='y_channel_adc_read', line=54, column=17)
Token(type='PAROPEN', value='(', line=54, column=35)
Token(type='PARCLOSE', value=')', line=54, column=36)
Token(type='END', value=';', line=54, column=37)
Token(type='ID', value='pos', line=59, column=4)
Token(type='MEMBER', value='.', line=59, column=7)
Token(type='ID', value='x', line=59, column=8)
Token(type='ASSIGN', value='=', line=59, column=10)
Token(type='ID', value='x', line=59, column=12)
Token(type='END', value=';', line=59, column=13)
Token(type='ID', value='pos', line=60, column=4)
Token(type='MEMBER', value='.', line=60, column=7)
Token(type='ID', value='y', line=60, column=8)
Token(type='ASSIGN', value='=', line=60, column=10)
Token(type='ID', value='y', line=60, column=12)
Token(type='END', value=';', line=60, column=13)
Token(type='ID', value='return', line=61, column=4)
Token(type='ID', value='pos', line=61, column=11)
Token(type='END', value=';', line=61, column=14)
Token(type='BRACECLOSE', value='}', line=62, column=0)
Token(type='ID', value='direction_t', line=64, column=0)
Token(type='ID', value='get_direction', line=64, column=12)
Token(type='PAROPEN', value='(', line=64, column=25)
Token(type='ID', value='void', line=64, column=26)
Token(type='PARCLOSE', value=')', line=64, column=30)
Token(type='BRACEOPEN', value='{', line=64, column=31)
Token(type='ID', value='joystick_positions_t', line=65, column=4)
Token(type='ID', value='pos', line=65, column=25)
Token(type='ASSIGN', value='=', line=65, column=29)
Token(type='ID', value='get_joystick_positions', line=65, column=31)
Token(type='PAROPEN', value='(', line=65, column=53)
Token(type='PARCLOSE', value=')', line=65, column=54)
Token(type='END', value=';', line=65, column=55)
Token(type='ID', value='int', line=66, column=4)
Token(type='ID', value='x', line=66, column=8)
Token(type='ASSIGN', value='=', line=66, column=10)
Token(type='PAROPEN', value='(', line=66, column=12)
Token(type='ID', value='int', line=66, column=13)
Token(type='PARCLOSE', value=')', line=66, column=16)
Token(type='ID', value='pos', line=66, column=18)
Token(type='MEMBER', value='.', line=66, column=21)
Token(type='ID', value='x', line=66, column=22)
Token(type='ARITOP', value='-', line=66, column=24)
Token(type='NUMBER', value=33, line=66, column=25)
Token(type='END', value=';', line=66, column=27)
Token(type='ID', value='int', line=67, column=4)
Token(type='ID', value='y', line=67, column=8)
Token(type='ASSIGN', value='=', line=67, column=10)
Token(type='PAROPEN', value='(', line=67, column=12)
Token(type='ID', value='int', line=67, column=13)
Token(type='PARCLOSE', value=')', line=67, column=16)
Token(type='ID', value='pos', line=67, column=18)
Token(type='MEMBER', value='.', line=67, column=21)
Token(type='ID', value='y', line=67, column=22)
Token(type='ARITOP', value='-', line=67, column=23)
Token(type='NUMBER', value=33, line=67, column=24)
Token(type='END', value=';', line=67, column=26)
Token(type='IF', value='if', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=6)
Token(type='PAROPEN', value='(', line=68, column=7)
Token(type='ID', value='x', line=68, column=8)
Token(type='ARITOP', value='>', line=68, column=10)
Token(type='NUMBER', value=115, line=68, column=12)
Token(type='PARCLOSE', value=')', line=68, column=15)
Token(type='LOGOP', value='&&', line=68, column=17)
Token(type='PAROPEN', value='(', line=68, column=20)
Token(type='ID', value='x', line=68, column=22)
Token(type='ARITOP', value='<', line=68, column=24)
Token(type='NUMBER', value=141, line=68, column=25)
Token(type='PARCLOSE', value=')', line=68, column=28)
Token(type='LOGOP', value='&&', line=68, column=30)
Token(type='PAROPEN', value='(', line=68, column=33)
Token(type='ID', value='y', line=68, column=34)
Token(type='ARITOP', value='<', line=68, column=36)
Token(type='NUMBER', value=141, line=68, column=38)
Token(type='PARCLOSE', value=')', line=68, column=41)
Token(type='LOGOP', value='&&', line=68, column=43)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='y', line=68, column=47)
Token(type='ARITOP', value='>', line=68, column=49)
Token(type='NUMBER', value=115, line=68, column=51)
Token(type='PARCLOSE', value=')', line=68, column=54)
Token(type='PARCLOSE', value=')', line=68, column=55)
Token(type='BRACEOPEN', value='{', line=68, column=56)
Token(type='ID', value='return', line=69, column=8)
Token(type='ID', value='NEUTRAL', line=69, column=15)
Token(type='END', value=';', line=69, column=22)
Token(type='BRACECLOSE', value='}', line=70, column=4)
Token(type='IF', value='if', line=71, column=4)
Token(type='PAROPEN', value='(', line=71, column=6)
Token(type='PAROPEN', value='(', line=71, column=7)
Token(type='ID', value='y', line=71, column=8)
Token(type='LOGOP', value='>=', line=71, column=10)
Token(type='ID', value='x', line=71, column=13)
Token(type='PARCLOSE', value=')', line=71, column=14)
Token(type='LOGOP', value='&&', line=71, column=16)
Token(type='PAROPEN', value='(', line=71, column=19)
Token(type='ID', value='y', line=71, column=20)
Token(type='LOGOP', value='>=', line=71, column=22)
Token(type='PAROPEN', value='(', line=71, column=25)
Token(type='NUMBER', value=255, line=71, column=26)
Token(type='ARITOP', value='-', line=71, column=29)
Token(type='ID', value='x', line=71, column=30)
Token(type='PARCLOSE', value=')', line=71, column=31)
Token(type='PARCLOSE', value=')', line=71, column=32)
Token(type='PARCLOSE', value=')', line=71, column=33)
Token(type='BRACEOPEN', value='{', line=71, column=34)
Token(type='ID', value='return', line=72, column=8)
Token(type='ID', value='UP', line=72, column=15)
Token(type='END', value=';', line=72, column=17)
Token(type='BRACECLOSE', value='}', line=73, column=4)
Token(type='IF', value='if', line=74, column=4)
Token(type='PAROPEN', value='(', line=74, column=6)
Token(type='PAROPEN', value='(', line=74, column=7)
Token(type='ID', value='y', line=74, column=8)
Token(type='LOGOP', value='<=', line=74, column=10)
Token(type='ID', value='x', line=74, column=13)
Token(type='PARCLOSE', value=')', line=74, column=14)
Token(type='LOGOP', value='&&', line=74, column=16)
Token(type='PAROPEN', value='(', line=74, column=19)
Token(type='ID', value='y', line=74, column=20)
Token(type='LOGOP', value='>=', line=74, column=22)
Token(type='PAROPEN', value='(', line=74, column=25)
Token(type='NUMBER', value=255, line=74, column=26)
Token(type='ARITOP', value='-', line=74, column=29)
Token(type='ID', value='x', line=74, column=30)
Token(type='PARCLOSE', value=')', line=74, column=31)
Token(type='PARCLOSE', value=')', line=74, column=32)
Token(type='PARCLOSE', value=')', line=74, column=33)
Token(type='BRACEOPEN', value='{', line=74, column=34)
Token(type='ID', value='return', line=75, column=8)
Token(type='ID', value='RIGHT', line=75, column=15)
Token(type='END', value=';', line=75, column=20)
Token(type='BRACECLOSE', value='}', line=76, column=4)
Token(type='IF', value='if', line=77, column=4)
Token(type='PAROPEN', value='(', line=77, column=6)
Token(type='PAROPEN', value='(', line=77, column=7)
Token(type='ID', value='y', line=77, column=8)
Token(type='LOGOP', value='>=', line=77, column=10)
Token(type='ID', value='x', line=77, column=13)
Token(type='PARCLOSE', value=')', line=77, column=14)
Token(type='LOGOP', value='&&', line=77, column=16)
Token(type='PAROPEN', value='(', line=77, column=19)
Token(type='ID', value='y', line=77, column=20)
Token(type='LOGOP', value='<=', line=77, column=22)
Token(type='PAROPEN', value='(', line=77, column=24)
Token(type='NUMBER', value=255, line=77, column=25)
Token(type='ARITOP', value='-', line=77, column=28)
Token(type='ID', value='x', line=77, column=29)
Token(type='PARCLOSE', value=')', line=77, column=30)
Token(type='PARCLOSE', value=')', line=77, column=31)
Token(type='PARCLOSE', value=')', line=77, column=32)
Token(type='BRACEOPEN', value='{', line=77, column=33)
Token(type='ID', value='return', line=78, column=8)
Token(type='ID', value='LEFT', line=78, column=15)
Token(type='END', value=';', line=78, column=19)
Token(type='BRACECLOSE', value='}', line=79, column=4)
Token(type='IF', value='if', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=6)
Token(type='PAROPEN', value='(', line=80, column=7)
Token(type='ID', value='y', line=80, column=8)
Token(type='LOGOP', value='<=', line=80, column=10)
Token(type='ID', value='x', line=80, column=12)
Token(type='PARCLOSE', value=')', line=80, column=13)
Token(type='LOGOP', value='&&', line=80, column=15)
Token(type='PAROPEN', value='(', line=80, column=18)
Token(type='ID', value='y', line=80, column=19)
Token(type='LOGOP', value='<=', line=80, column=21)
Token(type='PAROPEN', value='(', line=80, column=24)
Token(type='NUMBER', value=255, line=80, column=25)
Token(type='ARITOP', value='-', line=80, column=28)
Token(type='ID', value='x', line=80, column=29)
Token(type='PARCLOSE', value=')', line=80, column=30)
Token(type='PARCLOSE', value=')', line=80, column=31)
Token(type='PARCLOSE', value=')', line=80, column=32)
Token(type='BRACEOPEN', value='{', line=80, column=33)
Token(type='ID', value='return', line=81, column=8)
Token(type='ID', value='DOWN', line=81, column=15)
Token(type='END', value=';', line=81, column=19)
Token(type='BRACECLOSE', value='}', line=82, column=4)
Token(type='ID', value='return', line=83, column=4)
Token(type='ID', value='ERROR', line=83, column=11)
Token(type='END', value=';', line=83, column=16)
Token(type='BRACECLOSE', value='}', line=84, column=0)
Token(type='ID', value='uint8_t', line=88, column=0)
Token(type='ID', value='read_left_slider', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=24)
Token(type='ID', value='void', line=88, column=25)
Token(type='PARCLOSE', value=')', line=88, column=29)
Token(type='BRACEOPEN', value='{', line=88, column=30)
Token(type='ID', value='adc', line=89, column=4)
Token(type='BRACKOPEN', value='[', line=89, column=7)
Token(type='NUMBER', value=0, line=89, column=8)
Token(type='BRACKCLOSE', value=']', line=89, column=9)
Token(type='ASSIGN', value='=', line=89, column=11)
Token(type='PREFIX', value='0b', line=89, column=13)
Token(type='NUMBER', value=10000010, line=89, column=15)
Token(type='END', value=';', line=89, column=23)
Token(type='ID', value='_delay_ms', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=13)
Token(type='NUMBER', value=1, line=90, column=14)
Token(type='PARCLOSE', value=')', line=90, column=15)
Token(type='END', value=';', line=90, column=16)
Token(type='ID', value='return', line=91, column=4)
Token(type='ID', value='adc', line=91, column=11)
Token(type='BRACKOPEN', value='[', line=91, column=14)
Token(type='NUMBER', value=0, line=91, column=15)
Token(type='BRACKCLOSE', value=']', line=91, column=16)
Token(type='END', value=';', line=91, column=17)
Token(type='BRACECLOSE', value='}', line=92, column=0)
Token(type='ID', value='uint8_t', line=94, column=0)
Token(type='ID', value='read_right_slider', line=94, column=8)
Token(type='PAROPEN', value='(', line=94, column=25)
Token(type='ID', value='void', line=94, column=26)
Token(type='PARCLOSE', value=')', line=94, column=30)
Token(type='BRACEOPEN', value='{', line=94, column=31)
Token(type='ID', value='adc', line=95, column=5)
Token(type='BRACKOPEN', value='[', line=95, column=8)
Token(type='NUMBER', value=0, line=95, column=9)
Token(type='BRACKCLOSE', value=']', line=95, column=10)
Token(type='ASSIGN', value='=', line=95, column=12)
Token(type='PREFIX', value='0b', line=95, column=14)
Token(type='NUMBER', value=10000011, line=95, column=16)
Token(type='END', value=';', line=95, column=24)
Token(type='ID', value='_delay_ms', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=13)
Token(type='NUMBER', value=1, line=96, column=14)
Token(type='PARCLOSE', value=')', line=96, column=15)
Token(type='END', value=';', line=96, column=16)
Token(type='ID', value='return', line=97, column=4)
Token(type='ID', value='adc', line=97, column=11)
Token(type='BRACKOPEN', value='[', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=15)
Token(type='BRACKCLOSE', value=']', line=97, column=16)
Token(type='END', value=';', line=97, column=17)
Token(type='BRACECLOSE', value='}', line=98, column=0)
Token(type='ID', value='char', line=100, column=0)
Token(type='ARITOP', value='*', line=100, column=4)
Token(type='ID', value='direction_to_string', line=100, column=6)
Token(type='PAROPEN', value='(', line=100, column=25)
Token(type='ID', value='direction_t', line=100, column=26)
Token(type='ID', value='dir', line=100, column=38)
Token(type='PARCLOSE', value=')', line=100, column=41)
Token(type='BRACEOPEN', value='{', line=100, column=42)
Token(type='ID', value='switch', line=101, column=4)
Token(type='PAROPEN', value='(', line=101, column=11)
Token(type='ID', value='dir', line=101, column=12)
Token(type='PARCLOSE', value=')', line=101, column=15)
Token(type='BRACEOPEN', value='{', line=102, column=4)
Token(type='ID', value='case', line=103, column=4)
Token(type='NUMBER', value=0, line=103, column=9)
Token(type='ARITOP', value=':', line=103, column=10)
Token(type='ID', value='return', line=104, column=8)
Token(type='STRING', value='LEFT', line=104, column=20)
Token(type='END', value=';', line=104, column=21)
Token(type='ID', value='break', line=105, column=8)
Token(type='END', value=';', line=105, column=13)
Token(type='ID', value='case', line=106, column=4)
Token(type='NUMBER', value=1, line=106, column=9)
Token(type='ARITOP', value=':', line=106, column=10)
Token(type='ID', value='return', line=107, column=8)
Token(type='STRING', value='RIGHT', line=107, column=21)
Token(type='END', value=';', line=107, column=22)
Token(type='ID', value='break', line=108, column=8)
Token(type='END', value=';', line=108, column=13)
Token(type='ID', value='case', line=109, column=4)
Token(type='NUMBER', value=2, line=109, column=9)
Token(type='ARITOP', value=':', line=109, column=10)
Token(type='ID', value='return', line=110, column=8)
Token(type='STRING', value='UP', line=110, column=18)
Token(type='END', value=';', line=110, column=19)
Token(type='ID', value='break', line=111, column=8)
Token(type='END', value=';', line=111, column=13)
Token(type='ID', value='case', line=112, column=4)
Token(type='NUMBER', value=3, line=112, column=9)
Token(type='ARITOP', value=':', line=112, column=10)
Token(type='ID', value='return', line=113, column=8)
Token(type='STRING', value='DOWN', line=113, column=20)
Token(type='END', value=';', line=113, column=21)
Token(type='ID', value='break', line=114, column=8)
Token(type='END', value=';', line=114, column=13)
Token(type='ID', value='case', line=115, column=4)
Token(type='NUMBER', value=4, line=115, column=9)
Token(type='ARITOP', value=':', line=115, column=10)
Token(type='ID', value='return', line=116, column=8)
Token(type='STRING', value='NEUTRAL', line=116, column=23)
Token(type='END', value=';', line=116, column=24)
Token(type='ID', value='break', line=117, column=8)
Token(type='END', value=';', line=117, column=13)
Token(type='ID', value='default', line=118, column=4)
Token(type='ARITOP', value=':', line=118, column=11)
Token(type='ID', value='return', line=119, column=8)
Token(type='STRING', value='ERROR', line=119, column=21)
Token(type='END', value=';', line=119, column=22)
Token(type='ID', value='break', line=120, column=8)
Token(type='END', value=';', line=120, column=13)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='BRACECLOSE', value='}', line=122, column=0)
Token(type='ID', value='char', line=124, column=0)
Token(type='ID', value='get_right_button', line=124, column=5)
Token(type='PAROPEN', value='(', line=124, column=21)
Token(type='ID', value='void', line=124, column=22)
Token(type='PARCLOSE', value=')', line=124, column=26)
Token(type='BRACEOPEN', value='{', line=124, column=27)
Token(type='ID', value='return', line=125, column=4)
Token(type='PAROPEN', value='(', line=125, column=11)
Token(type='ID', value='PINB', line=125, column=12)
Token(type='BITWOP', value='&', line=125, column=17)
Token(type='PAROPEN', value='(', line=125, column=19)
Token(type='NUMBER', value=1, line=125, column=20)
Token(type='BITWOP', value='<<', line=125, column=22)
Token(type='NUMBER', value=2, line=125, column=25)
Token(type='PARCLOSE', value=')', line=125, column=26)
Token(type='PARCLOSE', value=')', line=125, column=27)
Token(type='END', value=';', line=125, column=28)
Token(type='BRACECLOSE', value='}', line=126, column=0)
Token(type='ID', value='char', line=128, column=0)
Token(type='ID', value='get_left_button', line=128, column=5)
Token(type='PAROPEN', value='(', line=128, column=20)
Token(type='ID', value='void', line=128, column=21)
Token(type='PARCLOSE', value=')', line=128, column=25)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ID', value='return', line=129, column=4)
Token(type='PAROPEN', value='(', line=129, column=11)
Token(type='ID', value='PINB', line=129, column=12)
Token(type='BITWOP', value='&', line=129, column=17)
Token(type='PAROPEN', value='(', line=129, column=19)
Token(type='NUMBER', value=1, line=129, column=20)
Token(type='BITWOP', value='<<', line=129, column=22)
Token(type='NUMBER', value=3, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=27)
Token(type='PARCLOSE', value=')', line=129, column=28)
Token(type='END', value=';', line=129, column=29)
Token(type='BRACECLOSE', value='}', line=130, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=3, column=0)
Token(type='PREPROC', value='#include "adc_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#define PASSWD_PMC 0x504d4300', line=5, column=0)
Token(type='PREPROC', value='#define PASSWD_ADC 0x41444300', line=6, column=0)
Token(type='ID', value='uint8_t', line=8, column=0)
Token(type='ID', value='goals', line=8, column=8)
Token(type='END', value=';', line=8, column=13)
Token(type='ID', value='adc_value', line=9, column=0)
Token(type='ID', value='last_state', line=9, column=10)
Token(type='END', value=';', line=9, column=20)
Token(type='ID', value='int', line=11, column=0)
Token(type='ID', value='adc_init', line=11, column=4)
Token(type='PAROPEN', value='(', line=11, column=12)
Token(type='PARCLOSE', value=')', line=11, column=13)
Token(type='BRACEOPEN', value='{', line=11, column=14)
Token(type='ID', value='PMC', line=13, column=4)
Token(type='MEMBER', value='->', line=13, column=7)
Token(type='ID', value='PMC_WPMR', line=13, column=9)
Token(type='ASSIGN', value='=', line=13, column=18)
Token(type='ID', value='PASSWD_PMC', line=13, column=20)
Token(type='END', value=';', line=13, column=30)
Token(type='ID', value='PMC', line=14, column=4)
Token(type='MEMBER', value='->', line=14, column=7)
Token(type='ID', value='PMC_PCER1', line=14, column=9)
Token(type='ASSIGN', value='|=', line=14, column=19)
Token(type='ID', value='PMC_PCER1_PID37', line=14, column=22)
Token(type='END', value=';', line=14, column=37)
Token(type='ID', value='ADC', line=17, column=4)
Token(type='MEMBER', value='->', line=17, column=7)
Token(type='ID', value='ADC_WPMR', line=17, column=9)
Token(type='ASSIGN', value='=', line=17, column=18)
Token(type='ID', value='PASSWD_ADC', line=17, column=20)
Token(type='END', value=';', line=17, column=30)
Token(type='ID', value='ADC', line=18, column=4)
Token(type='MEMBER', value='->', line=18, column=7)
Token(type='ID', value='ADC_MR', line=18, column=9)
Token(type='ASSIGN', value='|=', line=18, column=16)
Token(type='ID', value='ADC_MR_FWUP', line=18, column=19)
Token(type='BITWOP', value='|', line=18, column=31)
Token(type='ID', value='ADC_MR_FREERUN_ON', line=18, column=33)
Token(type='BITWOP', value='|', line=18, column=51)
Token(type='PAROPEN', value='(', line=18, column=53)
Token(type='NUMBER', value=1, line=18, column=54)
Token(type='BITWOP', value='<<', line=18, column=56)
Token(type='ID', value='ADC_MR_PRESCAL_Pos', line=18, column=59)
Token(type='PARCLOSE', value=')', line=18, column=77)
Token(type='BITWOP', value='|', line=18, column=79)
Token(type='ID', value='ADC_MR_STARTUP_SUT8', line=18, column=81)
Token(type='BITWOP', value='|', line=19, column=4)
Token(type='ID', value='ADC_MR_SETTLING_AST9', line=19, column=6)
Token(type='BITWOP', value='|', line=19, column=27)
Token(type='PAROPEN', value='(', line=19, column=29)
Token(type='NUMBER', value=2, line=19, column=30)
Token(type='BITWOP', value='<<', line=19, column=32)
Token(type='ID', value='ADC_MR_TRACKTIM_Pos', line=19, column=35)
Token(type='PARCLOSE', value=')', line=19, column=54)
Token(type='BITWOP', value='|', line=19, column=56)
Token(type='PAROPEN', value='(', line=19, column=58)
Token(type='NUMBER', value=2, line=19, column=59)
Token(type='BITWOP', value='<<', line=19, column=61)
Token(type='ID', value='ADC_MR_TRANSFER_Pos', line=19, column=64)
Token(type='PARCLOSE', value=')', line=19, column=83)
Token(type='END', value=';', line=19, column=84)
Token(type='ID', value='ADC', line=21, column=4)
Token(type='MEMBER', value='->', line=21, column=7)
Token(type='ID', value='ADC_CHER', line=21, column=9)
Token(type='ASSIGN', value='=', line=21, column=18)
Token(type='NUMBER', value=1, line=21, column=20)
Token(type='END', value=';', line=21, column=21)
Token(type='ID', value='goals', line=23, column=4)
Token(type='ASSIGN', value='=', line=23, column=10)
Token(type='NUMBER', value=0, line=23, column=12)
Token(type='END', value=';', line=23, column=13)
Token(type='ID', value='last_state', line=24, column=4)
Token(type='ASSIGN', value='=', line=24, column=15)
Token(type='ID', value='ADC_LOW', line=24, column=17)
Token(type='END', value=';', line=24, column=24)
Token(type='BRACECLOSE', value='}', line=25, column=0)
Token(type='ID', value='uint16_t', line=27, column=0)
Token(type='ID', value='adc_read', line=27, column=9)
Token(type='PAROPEN', value='(', line=27, column=17)
Token(type='PARCLOSE', value=')', line=27, column=18)
Token(type='BRACEOPEN', value='{', line=27, column=19)
Token(type='ID', value='uint16_t', line=28, column=4)
Token(type='ID', value='reading', line=28, column=13)
Token(type='ASSIGN', value='=', line=28, column=21)
Token(type='ID', value='ADC', line=28, column=23)
Token(type='MEMBER', value='->', line=28, column=26)
Token(type='ID', value='ADC_CDR', line=28, column=28)
Token(type='BRACKOPEN', value='[', line=28, column=35)
Token(type='NUMBER', value=0, line=28, column=36)
Token(type='BRACKCLOSE', value=']', line=28, column=37)
Token(type='END', value=';', line=28, column=38)
Token(type='ID', value='adc_value', line=29, column=4)
Token(type='ID', value='state', line=29, column=14)
Token(type='ASSIGN', value='=', line=29, column=20)
Token(type='ID', value='ADC_LOW', line=29, column=22)
Token(type='END', value=';', line=29, column=29)
Token(type='IF', value='if', line=30, column=4)
Token(type='PAROPEN', value='(', line=30, column=6)
Token(type='ID', value='reading', line=30, column=7)
Token(type='ARITOP', value='>', line=30, column=15)
Token(type='NUMBER', value=1500, line=30, column=17)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='ID', value='state', line=30, column=23)
Token(type='ASSIGN', value='=', line=30, column=29)
Token(type='ID', value='ADC_HIGH', line=30, column=31)
Token(type='END', value=';', line=30, column=39)
Token(type='IF', value='if', line=31, column=4)
Token(type='PAROPEN', value='(', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=8)
Token(type='ID', value='state', line=31, column=9)
Token(type='ASSIGN', value='=', line=31, column=16)
Token(type='ID', value='last_state', line=31, column=18)
Token(type='PARCLOSE', value=')', line=31, column=28)
Token(type='LOGOP', value='&&', line=31, column=30)
Token(type='PAROPEN', value='(', line=31, column=33)
Token(type='ID', value='state', line=31, column=34)
Token(type='ASSIGN', value='=', line=31, column=40)
Token(type='ASSIGN', value='=', line=31, column=41)
Token(type='ID', value='ADC_LOW', line=31, column=43)
Token(type='PARCLOSE', value=')', line=31, column=50)
Token(type='PARCLOSE', value=')', line=31, column=51)
Token(type='BRACEOPEN', value='{', line=31, column=52)
Token(type='ID', value='goals', line=32, column=8)
Token(type='ARITOP', value='+', line=32, column=13)
Token(type='ARITOP', value='+', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='printf', line=33, column=8)
Token(type='PAROPEN', value='(', line=33, column=14)
Token(type='STRING', value='New goals! Total goals: %d\\n\\r', line=33, column=46)
Token(type='LISTSEP', value=',', line=33, column=47)
Token(type='ID', value='goals', line=33, column=49)
Token(type='PARCLOSE', value=')', line=33, column=54)
Token(type='END', value=';', line=33, column=55)
Token(type='BRACECLOSE', value='}', line=34, column=4)
Token(type='ID', value='last_state', line=35, column=4)
Token(type='ASSIGN', value='=', line=35, column=15)
Token(type='ID', value='state', line=35, column=17)
Token(type='END', value=';', line=35, column=22)
Token(type='ID', value='return', line=37, column=4)
Token(type='ID', value='reading', line=37, column=11)
Token(type='END', value=';', line=37, column=18)
Token(type='BRACECLOSE', value='}', line=40, column=0)
Token(type='ID', value='uint8_t', line=42, column=0)
Token(type='ID', value='get_goals', line=42, column=8)
Token(type='PAROPEN', value='(', line=42, column=17)
Token(type='PARCLOSE', value=')', line=42, column=18)
Token(type='BRACEOPEN', value='{', line=42, column=19)
Token(type='ID', value='return', line=43, column=4)
Token(type='ID', value='goals', line=43, column=11)
Token(type='END', value=';', line=43, column=16)
Token(type='BRACECLOSE', value='}', line=44, column=0)
