Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
Token(type='PREPROC', value='#define F_CPU 4915200', line=2, column=0)
Token(type='PREPROC', value='#include <util/delay.h>', line=3, column=0)
Token(type='PREPROC', value='#include "includes.h"', line=4, column=0)
Token(type='PREPROC', value='#include "joystick_can.h"', line=5, column=0)
Token(type='ID', value='int', line=18, column=0)
Token(type='ID', value='main', line=18, column=4)
Token(type='PAROPEN', value='(', line=18, column=8)
Token(type='ID', value='void', line=18, column=9)
Token(type='PARCLOSE', value=')', line=18, column=13)
Token(type='BRACEOPEN', value='{', line=18, column=14)
Token(type='ID', value='SREG', line=21, column=4)
Token(type='ASSIGN', value='|=', line=21, column=9)
Token(type='PAROPEN', value='(', line=21, column=12)
Token(type='NUMBER', value=1, line=21, column=13)
Token(type='BITWOP', value='<<', line=21, column=15)
Token(type='NUMBER', value=7, line=21, column=18)
Token(type='PARCLOSE', value=')', line=21, column=19)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='DDRD', line=23, column=4)
Token(type='ASSIGN', value='&=', line=23, column=9)
Token(type='BITWOP', value='~', line=23, column=12)
Token(type='PAROPEN', value='(', line=23, column=13)
Token(type='NUMBER', value=1, line=23, column=14)
Token(type='BITWOP', value='<<', line=23, column=16)
Token(type='ID', value='PD2', line=23, column=19)
Token(type='PARCLOSE', value=')', line=23, column=22)
Token(type='END', value=';', line=23, column=23)
Token(type='ID', value='UART_init', line=26, column=1)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='MYUBRR', line=26, column=11)
Token(type='PARCLOSE', value=')', line=26, column=17)
Token(type='END', value=';', line=26, column=18)
Token(type='ID', value='MCUCR', line=30, column=1)
Token(type='ASSIGN', value='|=', line=30, column=7)
Token(type='PAROPEN', value='(', line=30, column=10)
Token(type='NUMBER', value=1, line=30, column=11)
Token(type='BITWOP', value='<<', line=30, column=13)
Token(type='ID', value='SRE', line=30, column=16)
Token(type='PARCLOSE', value=')', line=30, column=19)
Token(type='END', value=';', line=30, column=20)
Token(type='ID', value='SFIOR', line=31, column=1)
Token(type='ASSIGN', value='|=', line=31, column=7)
Token(type='PAROPEN', value='(', line=31, column=10)
Token(type='NUMBER', value=1, line=31, column=11)
Token(type='BITWOP', value='<<', line=31, column=13)
Token(type='ID', value='XMM2', line=31, column=16)
Token(type='PARCLOSE', value=')', line=31, column=20)
Token(type='END', value=';', line=31, column=21)
Token(type='ID', value='EMCUCR', line=32, column=1)
Token(type='ASSIGN', value='|=', line=32, column=8)
Token(type='PAROPEN', value='(', line=32, column=11)
Token(type='NUMBER', value=3, line=32, column=12)
Token(type='BITWOP', value='<<', line=32, column=14)
Token(type='ID', value='SRW10', line=32, column=17)
Token(type='PARCLOSE', value=')', line=32, column=22)
Token(type='END', value=';', line=32, column=23)
Token(type='ID', value='ADC_init', line=36, column=1)
Token(type='PAROPEN', value='(', line=36, column=9)
Token(type='PARCLOSE', value=')', line=36, column=10)
Token(type='END', value=';', line=36, column=11)
Token(type='ID', value='OLED_init', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=10)
Token(type='PARCLOSE', value=')', line=40, column=11)
Token(type='END', value=';', line=40, column=12)
Token(type='ID', value='write_command_OLED', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=19)
Token(type='PREFIX', value='0x', line=41, column=20)
Token(type='ID', value='af', line=41, column=22)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='OLED_clear', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='OLED_print_start_screen', line=43, column=1)
Token(type='PAROPEN', value='(', line=43, column=24)
Token(type='PARCLOSE', value=')', line=43, column=25)
Token(type='END', value=';', line=43, column=26)
Token(type='ID', value='init_menu', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=11)
Token(type='PARCLOSE', value=')', line=44, column=12)
Token(type='END', value=';', line=44, column=13)
Token(type='ID', value='direction_t', line=45, column=1)
Token(type='ID', value='dir', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=17)
Token(type='ID', value='get_direction', line=45, column=19)
Token(type='PAROPEN', value='(', line=45, column=32)
Token(type='PARCLOSE', value=')', line=45, column=33)
Token(type='END', value=';', line=45, column=34)
Token(type='ID', value='direction_t', line=46, column=1)
Token(type='ID', value='last_dir', line=46, column=13)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='dir', line=46, column=24)
Token(type='END', value=';', line=46, column=27)
Token(type='ID', value='char', line=47, column=1)
Token(type='ID', value='status', line=47, column=6)
Token(type='END', value=';', line=47, column=12)
Token(type='ID', value='SPI_init', line=51, column=1)
Token(type='PAROPEN', value='(', line=51, column=9)
Token(type='PARCLOSE', value=')', line=51, column=10)
Token(type='END', value=';', line=51, column=11)
Token(type='ID', value='mcp_reset', line=56, column=1)
Token(type='PAROPEN', value='(', line=56, column=10)
Token(type='PARCLOSE', value=')', line=56, column=11)
Token(type='END', value=';', line=56, column=12)
Token(type='ID', value='CAN_init', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=9)
Token(type='PARCLOSE', value=')', line=57, column=10)
Token(type='END', value=';', line=57, column=11)
Token(type='ID', value='while', line=90, column=4)
Token(type='PAROPEN', value='(', line=90, column=10)
Token(type='NUMBER', value=1, line=90, column=11)
Token(type='PARCLOSE', value=')', line=90, column=12)
Token(type='BRACEOPEN', value='{', line=91, column=4)
Token(type='BRACECLOSE', value='}', line=226, column=4)
Token(type='BRACECLOSE', value='}', line=229, column=0)
Token(type='PREPROC', value='#include <stdio.h>', line=1, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=2, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/uart.h"', line=3, column=0)
Token(type='PREPROC', value='#include "uart_and_printf/printf-stdarg.h"', line=4, column=0)
Token(type='PREPROC', value='#include "can_controller.h"', line=5, column=0)
Token(type='PREPROC', value='#include "tc_driver.h"', line=6, column=0)
Token(type='PREPROC', value='#include "sam.h"', line=7, column=0)
Token(type='PREPROC', value='#include "pwm_driver.h"', line=8, column=0)
Token(type='PREPROC', value='#include <adc_driver.h>', line=9, column=0)
Token(type='PREPROC', value='#include "dacc_driver.h"', line=10, column=0)
Token(type='PREPROC', value='#include "motor_controller.h"', line=11, column=0)
Token(type='PREPROC', value='#include "pid.h"', line=12, column=0)
Token(type='PREPROC', value='#define CAN_BR_INIT_VAlUE 0x00290165', line=14, column=0)
Token(type='ID', value='void', line=26, column=0)
Token(type='ID', value='delay', line=26, column=5)
Token(type='PAROPEN', value='(', line=26, column=10)
Token(type='ID', value='int', line=26, column=11)
Token(type='ID', value='d', line=26, column=15)
Token(type='PARCLOSE', value=')', line=26, column=16)
Token(type='BRACEOPEN', value='{', line=26, column=17)
Token(type='ID', value='int', line=27, column=4)
Token(type='ID', value='a', line=27, column=8)
Token(type='END', value=';', line=27, column=9)
Token(type='FOR', value='for', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='ID', value='int', line=28, column=8)
Token(type='ID', value='i', line=28, column=12)
Token(type='ASSIGN', value='=', line=28, column=14)
Token(type='NUMBER', value=1, line=28, column=16)
Token(type='END', value=';', line=28, column=17)
Token(type='ID', value='i', line=28, column=19)
Token(type='ARITOP', value='<', line=28, column=20)
Token(type='ID', value='d', line=28, column=21)
Token(type='ARITOP', value='*', line=28, column=22)
Token(type='NUMBER', value=3000, line=28, column=23)
Token(type='END', value=';', line=28, column=27)
Token(type='ID', value='i', line=28, column=29)
Token(type='ARITOP', value='+', line=28, column=30)
Token(type='ARITOP', value='+', line=28, column=31)
Token(type='PARCLOSE', value=')', line=28, column=32)
Token(type='BRACEOPEN', value='{', line=28, column=33)
Token(type='ID', value='a', line=29, column=12)
Token(type='ASSIGN', value='=', line=29, column=14)
Token(type='NUMBER', value=1, line=29, column=16)
Token(type='END', value=';', line=29, column=17)
Token(type='BRACECLOSE', value='}', line=30, column=8)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define kp 1', line=32, column=0)
Token(type='PREPROC', value='#define ki 1', line=33, column=0)
Token(type='PREPROC', value='#define t 1', line=34, column=0)
Token(type='ID', value='PI', line=35, column=1)
Token(type='ARITOP', value='*', line=35, column=4)
Token(type='ID', value='pi', line=35, column=5)
Token(type='END', value=';', line=35, column=7)
Token(type='ID', value='int', line=37, column=0)
Token(type='ID', value='main', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=8)
Token(type='PARCLOSE', value=')', line=37, column=9)
Token(type='BRACEOPEN', value='{', line=38, column=0)
Token(type='ID', value='WDT', line=40, column=1)
Token(type='MEMBER', value='->', line=40, column=4)
Token(type='ID', value='WDT_MR', line=40, column=6)
Token(type='ASSIGN', value='=', line=40, column=13)
Token(type='ID', value='WDT_MR_WDDIS', line=40, column=15)
Token(type='END', value=';', line=40, column=27)
Token(type='ID', value='configure_uart', line=41, column=1)
Token(type='PAROPEN', value='(', line=41, column=15)
Token(type='PARCLOSE', value=')', line=41, column=16)
Token(type='END', value=';', line=41, column=17)
Token(type='ID', value='SystemInit', line=42, column=1)
Token(type='PAROPEN', value='(', line=42, column=11)
Token(type='PARCLOSE', value=')', line=42, column=12)
Token(type='END', value=';', line=42, column=13)
Token(type='ID', value='printf', line=45, column=1)
Token(type='PAROPEN', value='(', line=45, column=7)
Token(type='STRING', value='Hello World\\n\\r', line=45, column=24)
Token(type='PARCLOSE', value=')', line=45, column=25)
Token(type='END', value=';', line=45, column=26)
Token(type='ID', value='PMC', line=50, column=1)
Token(type='MEMBER', value='->', line=50, column=4)
Token(type='ID', value='PMC_PCER0', line=50, column=6)
Token(type='ASSIGN', value='|=', line=50, column=16)
Token(type='PAROPEN', value='(', line=50, column=19)
Token(type='NUMBER', value=1, line=50, column=20)
Token(type='BITWOP', value='<<', line=50, column=22)
Token(type='NUMBER', value=11, line=50, column=25)
Token(type='PARCLOSE', value=')', line=50, column=27)
Token(type='END', value=';', line=50, column=28)
Token(type='ID', value='PIOA', line=51, column=1)
Token(type='MEMBER', value='->', line=51, column=5)
Token(type='ID', value='PIO_PER', line=51, column=7)
Token(type='ASSIGN', value='|=', line=51, column=15)
Token(type='PAROPEN', value='(', line=51, column=18)
Token(type='NUMBER', value=3, line=51, column=19)
Token(type='BITWOP', value='<<', line=51, column=21)
Token(type='NUMBER', value=19, line=51, column=24)
Token(type='PARCLOSE', value=')', line=51, column=26)
Token(type='END', value=';', line=51, column=27)
Token(type='ID', value='PIOA', line=52, column=1)
Token(type='MEMBER', value='->', line=52, column=5)
Token(type='ID', value='PIO_OER', line=52, column=7)
Token(type='ASSIGN', value='|=', line=52, column=15)
Token(type='PAROPEN', value='(', line=52, column=18)
Token(type='NUMBER', value=3, line=52, column=19)
Token(type='BITWOP', value='<<', line=52, column=21)
Token(type='NUMBER', value=19, line=52, column=24)
Token(type='PARCLOSE', value=')', line=52, column=26)
Token(type='END', value=';', line=52, column=27)
Token(type='ID', value='uint32_t', line=54, column=1)
Token(type='ID', value='clokk', line=54, column=10)
Token(type='ASSIGN', value='=', line=54, column=16)
Token(type='ID', value='PMC', line=54, column=18)
Token(type='MEMBER', value='->', line=54, column=21)
Token(type='ID', value='PMC_MCKR', line=54, column=23)
Token(type='BITWOP', value='&', line=54, column=32)
Token(type='PAROPEN', value='(', line=54, column=34)
Token(type='PREFIX', value='0b', line=54, column=35)
Token(type='NUMBER', value=111, line=54, column=37)
Token(type='BITWOP', value='<<', line=54, column=41)
Token(type='NUMBER', value=4, line=54, column=44)
Token(type='PARCLOSE', value=')', line=54, column=45)
Token(type='END', value=';', line=54, column=46)
Token(type='ID', value='printf', line=55, column=1)
Token(type='PAROPEN', value='(', line=55, column=7)
Token(type='STRING', value='Klokkestatus er: %x \\n', line=55, column=31)
Token(type='LISTSEP', value=',', line=55, column=32)
Token(type='ID', value='clokk', line=55, column=34)
Token(type='PARCLOSE', value=')', line=55, column=39)
Token(type='END', value=';', line=55, column=40)
Token(type='ID', value='uint32_t', line=56, column=1)
Token(type='ID', value='clfq', line=56, column=10)
Token(type='ASSIGN', value='=', line=56, column=15)
Token(type='ID', value='PMC', line=56, column=17)
Token(type='MEMBER', value='->', line=56, column=20)
Token(type='ID', value='CKGR_MOR', line=56, column=22)
Token(type='BITWOP', value='&', line=56, column=31)
Token(type='PAROPEN', value='(', line=56, column=33)
Token(type='PREFIX', value='0b', line=56, column=34)
Token(type='NUMBER', value=111, line=56, column=36)
Token(type='BITWOP', value='<<', line=56, column=40)
Token(type='NUMBER', value=4, line=56, column=43)
Token(type='PARCLOSE', value=')', line=56, column=44)
Token(type='END', value=';', line=56, column=45)
Token(type='ID', value='printf', line=57, column=1)
Token(type='PAROPEN', value='(', line=57, column=7)
Token(type='STRING', value='Klokkehastighet er: %d \\n', line=57, column=34)
Token(type='LISTSEP', value=',', line=57, column=35)
Token(type='ID', value='clfq', line=57, column=37)
Token(type='PARCLOSE', value=')', line=57, column=41)
Token(type='END', value=';', line=57, column=42)
Token(type='ID', value='PIOA', line=58, column=1)
Token(type='MEMBER', value='->', line=58, column=5)
Token(type='ID', value='PIO_SODR', line=58, column=7)
Token(type='ASSIGN', value='=', line=58, column=16)
Token(type='ID', value='PIO_SODR_P19', line=58, column=18)
Token(type='END', value=';', line=58, column=30)
Token(type='ID', value='PIOA', line=59, column=1)
Token(type='MEMBER', value='->', line=59, column=5)
Token(type='ID', value='PIO_CODR', line=59, column=7)
Token(type='ASSIGN', value='=', line=59, column=16)
Token(type='ID', value='PIO_SODR_P19', line=59, column=18)
Token(type='END', value=';', line=59, column=30)
Token(type='ID', value='CAN_MESSAGE', line=61, column=1)
Token(type='ID', value='message', line=61, column=13)
Token(type='END', value=';', line=61, column=20)
Token(type='ID', value='CAN_MESSAGE', line=62, column=1)
Token(type='ARITOP', value='*', line=62, column=12)
Token(type='ID', value='msg', line=62, column=14)
Token(type='ASSIGN', value='=', line=62, column=18)
Token(type='BITWOP', value='&', line=62, column=20)
Token(type='ID', value='message', line=62, column=21)
Token(type='END', value=';', line=62, column=28)
Token(type='ID', value='CAN_MESSAGE', line=63, column=1)
Token(type='ID', value='back', line=63, column=13)
Token(type='END', value=';', line=63, column=17)
Token(type='ID', value='int', line=64, column=1)
Token(type='ID', value='a', line=64, column=5)
Token(type='END', value=';', line=64, column=6)
Token(type='ID', value='message', line=65, column=1)
Token(type='MEMBER', value='.', line=65, column=8)
Token(type='ID', value='id', line=65, column=9)
Token(type='ASSIGN', value='=', line=65, column=12)
Token(type='NUMBER', value=1, line=65, column=14)
Token(type='END', value=';', line=65, column=15)
Token(type='ID', value='message', line=66, column=1)
Token(type='MEMBER', value='.', line=66, column=8)
Token(type='ID', value='data_length', line=66, column=9)
Token(type='ASSIGN', value='=', line=66, column=21)
Token(type='NUMBER', value=8, line=66, column=23)
Token(type='END', value=';', line=66, column=24)
Token(type='FOR', value='for', line=67, column=1)
Token(type='PAROPEN', value='(', line=67, column=5)
Token(type='ID', value='int', line=67, column=6)
Token(type='ID', value='i', line=67, column=10)
Token(type='ASSIGN', value='=', line=67, column=12)
Token(type='NUMBER', value=0, line=67, column=14)
Token(type='END', value=';', line=67, column=15)
Token(type='ID', value='i', line=67, column=17)
Token(type='ARITOP', value='<', line=67, column=19)
Token(type='NUMBER', value=8, line=67, column=21)
Token(type='END', value=';', line=67, column=22)
Token(type='ID', value='i', line=67, column=24)
Token(type='ARITOP', value='+', line=67, column=25)
Token(type='ARITOP', value='+', line=67, column=26)
Token(type='PARCLOSE', value=')', line=67, column=27)
Token(type='BRACEOPEN', value='{', line=67, column=29)
Token(type='ID', value='message', line=68, column=2)
Token(type='MEMBER', value='.', line=68, column=9)
Token(type='ID', value='data', line=68, column=10)
Token(type='BRACKOPEN', value='[', line=68, column=14)
Token(type='ID', value='i', line=68, column=15)
Token(type='BRACKCLOSE', value=']', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=18)
Token(type='NUMBER', value=3, line=68, column=20)
Token(type='ARITOP', value='*', line=68, column=22)
Token(type='ID', value='i', line=68, column=24)
Token(type='END', value=';', line=68, column=25)
Token(type='BRACECLOSE', value='}', line=69, column=1)
Token(type='ID', value='can_send', line=70, column=1)
Token(type='PAROPEN', value='(', line=70, column=9)
Token(type='BITWOP', value='&', line=70, column=10)
Token(type='ID', value='message', line=70, column=11)
Token(type='LISTSEP', value=',', line=70, column=18)
Token(type='NUMBER', value=0, line=70, column=20)
Token(type='PARCLOSE', value=')', line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='pwm_init', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=9)
Token(type='PARCLOSE', value=')', line=76, column=10)
Token(type='END', value=';', line=76, column=11)
Token(type='ID', value='adc_init', line=77, column=1)
Token(type='PAROPEN', value='(', line=77, column=9)
Token(type='PARCLOSE', value=')', line=77, column=10)
Token(type='END', value=';', line=77, column=11)
Token(type='ID', value='tc_init', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=8)
Token(type='PARCLOSE', value=')', line=82, column=9)
Token(type='END', value=';', line=82, column=10)
Token(type='ID', value='dacc_init', line=83, column=1)
Token(type='PAROPEN', value='(', line=83, column=10)
Token(type='PARCLOSE', value=')', line=83, column=11)
Token(type='END', value=';', line=83, column=12)
Token(type='ID', value='motor_init', line=84, column=1)
Token(type='PAROPEN', value='(', line=84, column=11)
Token(type='PARCLOSE', value=')', line=84, column=12)
Token(type='END', value=';', line=84, column=13)
Token(type='ID', value='PI_init', line=85, column=1)
Token(type='PAROPEN', value='(', line=85, column=8)
Token(type='ID', value='kp', line=85, column=9)
Token(type='LISTSEP', value=',', line=85, column=11)
Token(type='ID', value='ki', line=85, column=13)
Token(type='LISTSEP', value=',', line=85, column=15)
Token(type='ID', value='t', line=85, column=17)
Token(type='PARCLOSE', value=')', line=85, column=18)
Token(type='END', value=';', line=85, column=19)
Token(type='ID', value='int64_t', line=86, column=1)
Token(type='ID', value='sum_encoder', line=86, column=9)
Token(type='ASSIGN', value='=', line=86, column=21)
Token(type='NUMBER', value=0, line=86, column=23)
Token(type='END', value=';', line=86, column=24)
Token(type='ID', value='dacc_write', line=87, column=1)
Token(type='PAROPEN', value='(', line=87, column=11)
Token(type='PREFIX', value='0x', line=87, column=12)
Token(type='NUMBER', value=0, line=87, column=14)
Token(type='PARCLOSE', value=')', line=87, column=18)
Token(type='END', value=';', line=87, column=19)
Token(type='ID', value='while', line=91, column=4)
Token(type='PAROPEN', value='(', line=91, column=10)
Token(type='NUMBER', value=1, line=91, column=11)
Token(type='PARCLOSE', value=')', line=91, column=12)
Token(type='BRACEOPEN', value='{', line=92, column=4)
Token(type='IF', value='if', line=96, column=2)
Token(type='PAROPEN', value='(', line=96, column=5)
Token(type='ID', value='can_receive', line=96, column=6)
Token(type='PAROPEN', value='(', line=96, column=17)
Token(type='ID', value='msg', line=96, column=18)
Token(type='LISTSEP', value=',', line=96, column=21)
Token(type='NUMBER', value=1, line=96, column=23)
Token(type='PARCLOSE', value=')', line=96, column=24)
Token(type='ASSIGN', value='=', line=96, column=26)
Token(type='ASSIGN', value='=', line=96, column=27)
Token(type='NUMBER', value=0, line=96, column=29)
Token(type='PARCLOSE', value=')', line=96, column=30)
Token(type='BRACEOPEN', value='{', line=96, column=32)
Token(type='ID', value='printf', line=97, column=3)
Token(type='PAROPEN', value='(', line=97, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=97, column=43)
Token(type='PARCLOSE', value=')', line=97, column=44)
Token(type='END', value=';', line=97, column=45)
Token(type='ID', value='printf', line=98, column=3)
Token(type='PAROPEN', value='(', line=98, column=9)
Token(type='STRING', value='ID = %x', line=98, column=18)
Token(type='LISTSEP', value=',', line=98, column=19)
Token(type='ID', value='msg', line=98, column=21)
Token(type='MEMBER', value='->', line=98, column=24)
Token(type='ID', value='id', line=98, column=26)
Token(type='PARCLOSE', value=')', line=98, column=28)
Token(type='END', value=';', line=98, column=29)
Token(type='ID', value='printf', line=99, column=3)
Token(type='PAROPEN', value='(', line=99, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=99, column=30)
Token(type='LISTSEP', value=',', line=99, column=31)
Token(type='ID', value='msg', line=99, column=33)
Token(type='MEMBER', value='->', line=99, column=36)
Token(type='ID', value='data_length', line=99, column=38)
Token(type='PARCLOSE', value=')', line=99, column=49)
Token(type='END', value=';', line=99, column=50)
Token(type='FOR', value='for', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=7)
Token(type='ID', value='int', line=100, column=8)
Token(type='ID', value='i', line=100, column=12)
Token(type='ASSIGN', value='=', line=100, column=14)
Token(type='NUMBER', value=0, line=100, column=16)
Token(type='END', value=';', line=100, column=17)
Token(type='ID', value='i', line=100, column=19)
Token(type='ARITOP', value='<', line=100, column=21)
Token(type='NUMBER', value=8, line=100, column=23)
Token(type='END', value=';', line=100, column=24)
Token(type='ID', value='i', line=100, column=26)
Token(type='ARITOP', value='+', line=100, column=27)
Token(type='ARITOP', value='+', line=100, column=28)
Token(type='PARCLOSE', value=')', line=100, column=29)
Token(type='BRACEOPEN', value='{', line=100, column=31)
Token(type='ID', value='printf', line=102, column=4)
Token(type='PAROPEN', value='(', line=102, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=102, column=30)
Token(type='LISTSEP', value=',', line=102, column=31)
Token(type='ID', value='i', line=102, column=33)
Token(type='LISTSEP', value=',', line=102, column=34)
Token(type='ID', value='msg', line=102, column=36)
Token(type='MEMBER', value='->', line=102, column=39)
Token(type='ID', value='data', line=102, column=41)
Token(type='BRACKOPEN', value='[', line=102, column=45)
Token(type='ID', value='i', line=102, column=46)
Token(type='BRACKCLOSE', value=']', line=102, column=47)
Token(type='PARCLOSE', value=')', line=102, column=48)
Token(type='END', value=';', line=102, column=49)
Token(type='BRACECLOSE', value='}', line=104, column=3)
Token(type='ID', value='message', line=105, column=3)
Token(type='MEMBER', value='.', line=105, column=10)
Token(type='ID', value='id', line=105, column=11)
Token(type='ASSIGN', value='=', line=105, column=14)
Token(type='NUMBER', value=0, line=105, column=16)
Token(type='END', value=';', line=105, column=17)
Token(type='ID', value='message', line=106, column=3)
Token(type='MEMBER', value='.', line=106, column=10)
Token(type='ID', value='data_length', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=23)
Token(type='NUMBER', value=8, line=106, column=25)
Token(type='END', value=';', line=106, column=26)
Token(type='FOR', value='for', line=107, column=3)
Token(type='PAROPEN', value='(', line=107, column=7)
Token(type='ID', value='int', line=107, column=8)
Token(type='ID', value='i', line=107, column=12)
Token(type='ASSIGN', value='=', line=107, column=14)
Token(type='NUMBER', value=0, line=107, column=16)
Token(type='END', value=';', line=107, column=17)
Token(type='ID', value='i', line=107, column=19)
Token(type='ARITOP', value='<', line=107, column=21)
Token(type='NUMBER', value=8, line=107, column=23)
Token(type='END', value=';', line=107, column=24)
Token(type='ID', value='i', line=107, column=26)
Token(type='ARITOP', value='+', line=107, column=27)
Token(type='ARITOP', value='+', line=107, column=28)
Token(type='PARCLOSE', value=')', line=107, column=29)
Token(type='BRACEOPEN', value='{', line=107, column=31)
Token(type='ID', value='message', line=108, column=4)
Token(type='MEMBER', value='.', line=108, column=11)
Token(type='ID', value='data', line=108, column=12)
Token(type='BRACKOPEN', value='[', line=108, column=16)
Token(type='ID', value='i', line=108, column=17)
Token(type='BRACKCLOSE', value=']', line=108, column=18)
Token(type='ASSIGN', value='=', line=108, column=20)
Token(type='ID', value='i', line=108, column=22)
Token(type='END', value=';', line=108, column=23)
Token(type='BRACECLOSE', value='}', line=109, column=3)
Token(type='IF', value='if', line=110, column=3)
Token(type='PAROPEN', value='(', line=110, column=6)
Token(type='ID', value='can_send', line=110, column=7)
Token(type='PAROPEN', value='(', line=110, column=15)
Token(type='ID', value='msg', line=110, column=16)
Token(type='LISTSEP', value=',', line=110, column=19)
Token(type='NUMBER', value=0, line=110, column=21)
Token(type='PARCLOSE', value=')', line=110, column=22)
Token(type='ASSIGN', value='=', line=110, column=25)
Token(type='NUMBER', value=1, line=110, column=27)
Token(type='PARCLOSE', value=')', line=110, column=28)
Token(type='BRACEOPEN', value='{', line=110, column=30)
Token(type='ID', value='printf', line=111, column=4)
Token(type='PAROPEN', value='(', line=111, column=10)
Token(type='STRING', value='Sending\\n\\r', line=111, column=23)
Token(type='PARCLOSE', value=')', line=111, column=24)
Token(type='END', value=';', line=111, column=25)
Token(type='BRACECLOSE', value='}', line=112, column=3)
Token(type='BRACECLOSE', value='}', line=114, column=2)
Token(type='ELSE', value='else', line=115, column=2)
Token(type='IF', value='if', line=115, column=7)
Token(type='PAROPEN', value='(', line=115, column=10)
Token(type='ID', value='can_receive', line=115, column=11)
Token(type='PAROPEN', value='(', line=115, column=22)
Token(type='BITWOP', value='&', line=115, column=23)
Token(type='ID', value='msg', line=115, column=24)
Token(type='LISTSEP', value=',', line=115, column=27)
Token(type='NUMBER', value=1, line=115, column=29)
Token(type='PARCLOSE', value=')', line=115, column=30)
Token(type='ASSIGN', value='=', line=115, column=32)
Token(type='ASSIGN', value='=', line=115, column=33)
Token(type='NUMBER', value=0, line=115, column=35)
Token(type='PARCLOSE', value=')', line=115, column=36)
Token(type='BRACEOPEN', value='{', line=115, column=38)
Token(type='ID', value='printf', line=116, column=3)
Token(type='PAROPEN', value='(', line=116, column=9)
Token(type='STRING', value='Got a message on mailbox 1\\n \\r', line=116, column=42)
Token(type='PARCLOSE', value=')', line=116, column=43)
Token(type='END', value=';', line=116, column=44)
Token(type='BRACECLOSE', value='}', line=117, column=2)
Token(type='FOR', value='for', line=118, column=2)
Token(type='PAROPEN', value='(', line=118, column=6)
Token(type='ID', value='int', line=118, column=7)
Token(type='ID', value='i', line=118, column=11)
Token(type='ASSIGN', value='=', line=118, column=13)
Token(type='NUMBER', value=1, line=118, column=15)
Token(type='END', value=';', line=118, column=16)
Token(type='ID', value='i', line=118, column=18)
Token(type='ARITOP', value='<', line=118, column=20)
Token(type='NUMBER', value=2500000, line=118, column=22)
Token(type='END', value=';', line=118, column=29)
Token(type='ID', value='i', line=118, column=31)
Token(type='ARITOP', value='+', line=118, column=32)
Token(type='ARITOP', value='+', line=118, column=33)
Token(type='PARCLOSE', value=')', line=118, column=34)
Token(type='BRACEOPEN', value='{', line=118, column=36)
Token(type='ID', value='a', line=119, column=3)
Token(type='ASSIGN', value='=', line=119, column=5)
Token(type='NUMBER', value=1, line=119, column=7)
Token(type='END', value=';', line=119, column=8)
Token(type='BRACECLOSE', value='}', line=120, column=2)
Token(type='ID', value='printf', line=121, column=2)
Token(type='PAROPEN', value='(', line=121, column=8)
Token(type='STRING', value='One loop\\n\\r', line=121, column=22)
Token(type='PARCLOSE', value=')', line=121, column=23)
Token(type='END', value=';', line=121, column=24)
Token(type='ID', value='message', line=122, column=2)
Token(type='MEMBER', value='.', line=122, column=9)
Token(type='ID', value='id', line=122, column=10)
Token(type='ASSIGN', value='=', line=122, column=13)
Token(type='NUMBER', value=1, line=122, column=15)
Token(type='END', value=';', line=122, column=16)
Token(type='ID', value='message', line=123, column=2)
Token(type='MEMBER', value='.', line=123, column=9)
Token(type='ID', value='data_length', line=123, column=10)
Token(type='ASSIGN', value='=', line=123, column=22)
Token(type='NUMBER', value=8, line=123, column=24)
Token(type='END', value=';', line=123, column=25)
Token(type='FOR', value='for', line=124, column=2)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ID', value='int', line=124, column=7)
Token(type='ID', value='i', line=124, column=11)
Token(type='ASSIGN', value='=', line=124, column=13)
Token(type='NUMBER', value=0, line=124, column=15)
Token(type='END', value=';', line=124, column=16)
Token(type='ID', value='i', line=124, column=18)
Token(type='ARITOP', value='<', line=124, column=20)
Token(type='NUMBER', value=8, line=124, column=22)
Token(type='END', value=';', line=124, column=23)
Token(type='ID', value='i', line=124, column=25)
Token(type='ARITOP', value='+', line=124, column=26)
Token(type='ARITOP', value='+', line=124, column=27)
Token(type='PARCLOSE', value=')', line=124, column=28)
Token(type='BRACEOPEN', value='{', line=124, column=30)
Token(type='ID', value='message', line=125, column=3)
Token(type='MEMBER', value='.', line=125, column=10)
Token(type='ID', value='data', line=125, column=11)
Token(type='BRACKOPEN', value='[', line=125, column=15)
Token(type='ID', value='i', line=125, column=16)
Token(type='BRACKCLOSE', value=']', line=125, column=17)
Token(type='ASSIGN', value='=', line=125, column=19)
Token(type='NUMBER', value=2, line=125, column=21)
Token(type='ARITOP', value='*', line=125, column=23)
Token(type='ID', value='i', line=125, column=25)
Token(type='END', value=';', line=125, column=26)
Token(type='BRACECLOSE', value='}', line=126, column=2)
Token(type='ID', value='back', line=127, column=2)
Token(type='MEMBER', value='.', line=127, column=6)
Token(type='ID', value='id', line=127, column=7)
Token(type='ASSIGN', value='=', line=127, column=10)
Token(type='NUMBER', value=2, line=127, column=12)
Token(type='END', value=';', line=127, column=13)
Token(type='ID', value='back', line=128, column=2)
Token(type='MEMBER', value='.', line=128, column=6)
Token(type='ID', value='data_length', line=128, column=7)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='NUMBER', value=7, line=128, column=21)
Token(type='END', value=';', line=128, column=22)
Token(type='IF', value='if', line=129, column=2)
Token(type='PAROPEN', value='(', line=129, column=5)
Token(type='ID', value='can_send', line=129, column=6)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='BITWOP', value='&', line=129, column=15)
Token(type='ID', value='message', line=129, column=16)
Token(type='LISTSEP', value=',', line=129, column=23)
Token(type='NUMBER', value=0, line=129, column=25)
Token(type='PARCLOSE', value=')', line=129, column=26)
Token(type='ASSIGN', value='=', line=129, column=28)
Token(type='ASSIGN', value='=', line=129, column=29)
Token(type='NUMBER', value=1, line=129, column=31)
Token(type='PARCLOSE', value=')', line=129, column=32)
Token(type='BRACEOPEN', value='{', line=129, column=34)
Token(type='ID', value='printf', line=130, column=3)
Token(type='PAROPEN', value='(', line=130, column=9)
Token(type='STRING', value='couldnt send\\n\\r', line=130, column=27)
Token(type='PARCLOSE', value=')', line=130, column=28)
Token(type='END', value=';', line=130, column=29)
Token(type='BRACECLOSE', value='}', line=131, column=2)
Token(type='FOR', value='for', line=137, column=2)
Token(type='PAROPEN', value='(', line=137, column=6)
Token(type='ID', value='int', line=137, column=7)
Token(type='ID', value='i', line=137, column=11)
Token(type='ASSIGN', value='=', line=137, column=13)
Token(type='NUMBER', value=0, line=137, column=15)
Token(type='END', value=';', line=137, column=16)
Token(type='ID', value='i', line=137, column=18)
Token(type='ARITOP', value='<', line=137, column=20)
Token(type='NUMBER', value=10, line=137, column=22)
Token(type='END', value=';', line=137, column=24)
Token(type='ID', value='i', line=137, column=26)
Token(type='ARITOP', value='+', line=137, column=27)
Token(type='ARITOP', value='+', line=137, column=28)
Token(type='PARCLOSE', value=')', line=137, column=29)
Token(type='BRACEOPEN', value='{', line=137, column=31)
Token(type='ID', value='printf', line=138, column=3)
Token(type='PAROPEN', value='(', line=138, column=9)
Token(type='STRING', value='hei', line=138, column=14)
Token(type='PARCLOSE', value=')', line=138, column=15)
Token(type='END', value=';', line=138, column=16)
Token(type='ID', value='delay', line=139, column=3)
Token(type='PAROPEN', value='(', line=139, column=8)
Token(type='NUMBER', value=1, line=139, column=9)
Token(type='PARCLOSE', value=')', line=139, column=10)
Token(type='END', value=';', line=139, column=11)
Token(type='ID', value='pwm_update_dc', line=140, column=3)
Token(type='PAROPEN', value='(', line=140, column=16)
Token(type='NUMBER', value=2650, line=140, column=17)
Token(type='ARITOP', value='+', line=140, column=22)
Token(type='NUMBER', value=200, line=140, column=24)
Token(type='ARITOP', value='*', line=140, column=28)
Token(type='ID', value='i', line=140, column=30)
Token(type='PARCLOSE', value=')', line=140, column=31)
Token(type='END', value=';', line=140, column=32)
Token(type='BRACECLOSE', value='}', line=141, column=2)
Token(type='ID', value='delay', line=142, column=2)
Token(type='PAROPEN', value='(', line=142, column=7)
Token(type='NUMBER', value=100, line=142, column=8)
Token(type='PARCLOSE', value=')', line=142, column=11)
Token(type='END', value=';', line=142, column=12)
Token(type='ID', value='adc_read', line=145, column=2)
Token(type='PAROPEN', value='(', line=145, column=10)
Token(type='PARCLOSE', value=')', line=145, column=11)
Token(type='END', value=';', line=145, column=12)
Token(type='ID', value='dacc_write', line=150, column=2)
Token(type='PAROPEN', value='(', line=150, column=12)
Token(type='PREFIX', value='0x', line=150, column=13)
Token(type='NUMBER', value=0, line=150, column=15)
Token(type='ID', value='FFF', line=150, column=16)
Token(type='PARCLOSE', value=')', line=150, column=19)
Token(type='END', value=';', line=150, column=20)
Token(type='ID', value='motor_joystick_to_encoder', line=151, column=2)
Token(type='PAROPEN', value='(', line=151, column=27)
Token(type='NUMBER', value=255, line=151, column=28)
Token(type='PARCLOSE', value=')', line=151, column=31)
Token(type='END', value=';', line=151, column=32)
Token(type='ID', value='motor_read_encoder', line=152, column=2)
Token(type='PAROPEN', value='(', line=152, column=20)
Token(type='PARCLOSE', value=')', line=152, column=21)
Token(type='END', value=';', line=152, column=22)
Token(type='IF', value='if', line=154, column=2)
Token(type='PAROPEN', value='(', line=154, column=5)
Token(type='ID', value='can_receive', line=154, column=6)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='msg', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='NUMBER', value=0, line=154, column=23)
Token(type='PARCLOSE', value=')', line=154, column=24)
Token(type='ASSIGN', value='=', line=154, column=26)
Token(type='ASSIGN', value='=', line=154, column=27)
Token(type='NUMBER', value=0, line=154, column=29)
Token(type='PARCLOSE', value=')', line=154, column=30)
Token(type='BRACEOPEN', value='{', line=154, column=32)
Token(type='ID', value='printf', line=156, column=3)
Token(type='PAROPEN', value='(', line=156, column=9)
Token(type='STRING', value='Got a message on mailbox 0:)\\n\\r', line=156, column=43)
Token(type='PARCLOSE', value=')', line=156, column=44)
Token(type='END', value=';', line=156, column=45)
Token(type='ID', value='printf', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=9)
Token(type='STRING', value='ID = %x', line=157, column=18)
Token(type='LISTSEP', value=',', line=157, column=19)
Token(type='ID', value='msg', line=157, column=21)
Token(type='MEMBER', value='->', line=157, column=24)
Token(type='ID', value='id', line=157, column=26)
Token(type='PARCLOSE', value=')', line=157, column=28)
Token(type='END', value=';', line=157, column=29)
Token(type='ID', value='printf', line=158, column=3)
Token(type='PAROPEN', value='(', line=158, column=9)
Token(type='STRING', value='Data length: %x\\n\\r', line=158, column=30)
Token(type='LISTSEP', value=',', line=158, column=31)
Token(type='ID', value='msg', line=158, column=33)
Token(type='MEMBER', value='->', line=158, column=36)
Token(type='ID', value='data_length', line=158, column=38)
Token(type='PARCLOSE', value=')', line=158, column=49)
Token(type='END', value=';', line=158, column=50)
Token(type='FOR', value='for', line=159, column=3)
Token(type='PAROPEN', value='(', line=159, column=7)
Token(type='ID', value='int', line=159, column=8)
Token(type='ID', value='i', line=159, column=12)
Token(type='ASSIGN', value='=', line=159, column=14)
Token(type='NUMBER', value=0, line=159, column=16)
Token(type='END', value=';', line=159, column=17)
Token(type='ID', value='i', line=159, column=19)
Token(type='ARITOP', value='<', line=159, column=21)
Token(type='ID', value='msg', line=159, column=23)
Token(type='MEMBER', value='->', line=159, column=26)
Token(type='ID', value='data_length', line=159, column=28)
Token(type='END', value=';', line=159, column=39)
Token(type='ID', value='i', line=159, column=41)
Token(type='ARITOP', value='+', line=159, column=42)
Token(type='ARITOP', value='+', line=159, column=43)
Token(type='PARCLOSE', value=')', line=159, column=44)
Token(type='BRACEOPEN', value='{', line=159, column=46)
Token(type='ID', value='printf', line=160, column=4)
Token(type='PAROPEN', value='(', line=160, column=10)
Token(type='STRING', value='Data[%d] = %d\\n \\r', line=160, column=30)
Token(type='LISTSEP', value=',', line=160, column=31)
Token(type='ID', value='i', line=160, column=33)
Token(type='LISTSEP', value=',', line=160, column=34)
Token(type='ID', value='msg', line=160, column=36)
Token(type='MEMBER', value='->', line=160, column=39)
Token(type='ID', value='data', line=160, column=41)
Token(type='BRACKOPEN', value='[', line=160, column=45)
Token(type='ID', value='i', line=160, column=46)
Token(type='BRACKCLOSE', value=']', line=160, column=47)
Token(type='PARCLOSE', value=')', line=160, column=48)
Token(type='END', value=';', line=160, column=49)
Token(type='BRACECLOSE', value='}', line=161, column=3)
Token(type='ID', value='PI_update', line=163, column=3)
Token(type='PAROPEN', value='(', line=163, column=12)
Token(type='PAROPEN', value='(', line=163, column=13)
Token(type='ID', value='uint8_t', line=163, column=14)
Token(type='PARCLOSE', value=')', line=163, column=21)
Token(type='ID', value='msg', line=163, column=22)
Token(type='MEMBER', value='->', line=163, column=25)
Token(type='ID', value='data', line=163, column=27)
Token(type='BRACKOPEN', value='[', line=163, column=31)
Token(type='NUMBER', value=1, line=163, column=32)
Token(type='BRACKCLOSE', value=']', line=163, column=33)
Token(type='LISTSEP', value=',', line=163, column=34)
Token(type='ID', value='get_motor_position', line=163, column=36)
Token(type='PAROPEN', value='(', line=163, column=54)
Token(type='PARCLOSE', value=')', line=163, column=55)
Token(type='PARCLOSE', value=')', line=163, column=56)
Token(type='END', value=';', line=163, column=57)
Token(type='ID', value='joystick_to_servo', line=164, column=3)
Token(type='PAROPEN', value='(', line=164, column=20)
Token(type='PAROPEN', value='(', line=164, column=21)
Token(type='ID', value='uint8_t', line=164, column=22)
Token(type='PARCLOSE', value=')', line=164, column=29)
Token(type='ID', value='msg', line=164, column=30)
Token(type='MEMBER', value='->', line=164, column=33)
Token(type='ID', value='data', line=164, column=35)
Token(type='BRACKOPEN', value='[', line=164, column=39)
Token(type='NUMBER', value=0, line=164, column=40)
Token(type='BRACKCLOSE', value=']', line=164, column=41)
Token(type='PARCLOSE', value=')', line=164, column=42)
Token(type='END', value=';', line=164, column=43)
Token(type='ID', value='motor_joystick_to_encoder', line=165, column=3)
Token(type='PAROPEN', value='(', line=165, column=28)
Token(type='PAROPEN', value='(', line=165, column=29)
Token(type='ID', value='uint8_t', line=165, column=30)
Token(type='PARCLOSE', value=')', line=165, column=37)
Token(type='ID', value='msg', line=165, column=38)
Token(type='MEMBER', value='->', line=165, column=41)
Token(type='ID', value='data', line=165, column=43)
Token(type='BRACKOPEN', value='[', line=165, column=47)
Token(type='NUMBER', value=1, line=165, column=48)
Token(type='BRACKCLOSE', value=']', line=165, column=49)
Token(type='PARCLOSE', value=')', line=165, column=50)
Token(type='END', value=';', line=165, column=51)
Token(type='ID', value='printf', line=166, column=3)
Token(type='PAROPEN', value='(', line=166, column=9)
Token(type='STRING', value=' X: %d, Y: %d\\n\\r', line=166, column=28)
Token(type='LISTSEP', value=',', line=166, column=29)
Token(type='ID', value='msg', line=166, column=31)
Token(type='MEMBER', value='->', line=166, column=34)
Token(type='ID', value='data', line=166, column=36)
Token(type='BRACKOPEN', value='[', line=166, column=40)
Token(type='NUMBER', value=0, line=166, column=41)
Token(type='BRACKCLOSE', value=']', line=166, column=42)
Token(type='LISTSEP', value=',', line=166, column=43)
Token(type='ID', value='msg', line=166, column=45)
Token(type='MEMBER', value='->', line=166, column=48)
Token(type='ID', value='data', line=166, column=50)
Token(type='BRACKOPEN', value='[', line=166, column=54)
Token(type='NUMBER', value=1, line=166, column=55)
Token(type='BRACKCLOSE', value=']', line=166, column=56)
Token(type='PARCLOSE', value=')', line=166, column=57)
Token(type='END', value=';', line=166, column=58)
Token(type='ID', value='PI_update', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=12)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='uint8_t', line=167, column=14)
Token(type='PARCLOSE', value=')', line=167, column=21)
Token(type='ID', value='msg', line=167, column=22)
Token(type='MEMBER', value='->', line=167, column=25)
Token(type='ID', value='data', line=167, column=27)
Token(type='BRACKOPEN', value='[', line=167, column=31)
Token(type='NUMBER', value=1, line=167, column=32)
Token(type='BRACKCLOSE', value=']', line=167, column=33)
Token(type='LISTSEP', value=',', line=167, column=34)
Token(type='ID', value='get_motor_position', line=167, column=36)
Token(type='PAROPEN', value='(', line=167, column=54)
Token(type='PARCLOSE', value=')', line=167, column=55)
Token(type='PARCLOSE', value=')', line=167, column=56)
Token(type='END', value=';', line=167, column=57)
Token(type='BRACECLOSE', value='}', line=168, column=2)
Token(type='ID', value='printf', line=170, column=2)
Token(type='PAROPEN', value='(', line=170, column=8)
Token(type='STRING', value='Sum of encoder values: %d \\n\\r', line=170, column=40)
Token(type='LISTSEP', value=',', line=170, column=41)
Token(type='ID', value='get_motor_position', line=170, column=43)
Token(type='PAROPEN', value='(', line=170, column=61)
Token(type='PARCLOSE', value=')', line=170, column=62)
Token(type='PARCLOSE', value=')', line=170, column=63)
Token(type='END', value=';', line=170, column=64)
Token(type='ID', value='printf', line=171, column=2)
Token(type='PAROPEN', value='(', line=171, column=8)
Token(type='STRING', value='Encoder %d \\n\\r', line=171, column=25)
Token(type='LISTSEP', value=',', line=171, column=26)
Token(type='ID', value='motor_read_encoder', line=171, column=28)
Token(type='PAROPEN', value='(', line=171, column=46)
Token(type='PARCLOSE', value=')', line=171, column=47)
Token(type='PARCLOSE', value=')', line=171, column=48)
Token(type='END', value=';', line=171, column=49)
Token(type='BRACECLOSE', value='}', line=175, column=4)
Token(type='BRACECLOSE', value='}', line=177, column=0)
