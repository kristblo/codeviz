Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
Token(type='PREPROC', value='#include "CAN_driver.h"', line=3, column=0)
Token(type='PREPROC', value='#include "MCP2515_driver.h"', line=4, column=0)
Token(type='PREPROC', value='#include <avr/interrupt.h>', line=5, column=0)
Token(type='PREPROC', value='#include "mcp2515.h"', line=6, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=7, column=0)
Token(type='ID', value='volatile', line=9, column=0)
Token(type='ID', value='transmit_registers', line=9, column=9)
Token(type='ARITOP', value='*', line=9, column=27)
Token(type='ID', value='TXB0', line=9, column=29)
Token(type='END', value=';', line=9, column=33)
Token(type='ID', value='volatile', line=10, column=0)
Token(type='ID', value='transmit_registers', line=10, column=9)
Token(type='ARITOP', value='*', line=10, column=27)
Token(type='ID', value='RXB0', line=10, column=29)
Token(type='END', value=';', line=10, column=33)
Token(type='PREPROC', value='#define CNF1 0b00101010', line=12, column=0)
Token(type='PREPROC', value='#define CNF2 0b00101001', line=13, column=0)
Token(type='PREPROC', value='#define CNF3 0b00101000', line=14, column=0)
Token(type='ID', value='ISR', line=17, column=0)
Token(type='PAROPEN', value='(', line=17, column=3)
Token(type='ID', value='INT0_vect', line=17, column=4)
Token(type='PARCLOSE', value=')', line=17, column=13)
Token(type='BRACEOPEN', value='{', line=17, column=14)
Token(type='ID', value='cli', line=18, column=1)
Token(type='PAROPEN', value='(', line=18, column=4)
Token(type='PARCLOSE', value=')', line=18, column=5)
Token(type='END', value=';', line=18, column=6)
Token(type='ID', value='printf', line=19, column=4)
Token(type='PAROPEN', value='(', line=19, column=10)
Token(type='STRING', value='vektor kjores\\n', line=19, column=27)
Token(type='PARCLOSE', value=')', line=19, column=28)
Token(type='END', value=';', line=19, column=29)
Token(type='IF', value='if', line=20, column=4)
Token(type='PAROPEN', value='(', line=20, column=6)
Token(type='ID', value='read_mcp_status', line=20, column=7)
Token(type='PAROPEN', value='(', line=20, column=22)
Token(type='PARCLOSE', value=')', line=20, column=23)
Token(type='BITWOP', value='&', line=20, column=25)
Token(type='ID', value='MCP_RX0IF', line=20, column=27)
Token(type='PARCLOSE', value=')', line=20, column=36)
Token(type='BRACEOPEN', value='{', line=20, column=37)
Token(type='ID', value='write_mcp', line=21, column=8)
Token(type='PAROPEN', value='(', line=21, column=17)
Token(type='PREFIX', value='0x', line=21, column=18)
Token(type='NUMBER', value=0, line=21, column=20)
Token(type='LISTSEP', value=',', line=21, column=22)
Token(type='ID', value='CANINTF', line=21, column=23)
Token(type='PARCLOSE', value=')', line=21, column=30)
Token(type='END', value=';', line=21, column=31)
Token(type='ID', value='can_message', line=22, column=8)
Token(type='ID', value='msg', line=22, column=20)
Token(type='END', value=';', line=22, column=23)
Token(type='ID', value='CAN_recieve', line=23, column=8)
Token(type='PAROPEN', value='(', line=23, column=19)
Token(type='BITWOP', value='&', line=23, column=20)
Token(type='ID', value='msg', line=23, column=21)
Token(type='PARCLOSE', value=')', line=23, column=24)
Token(type='END', value=';', line=23, column=25)
Token(type='ID', value='print_can_message', line=24, column=8)
Token(type='PAROPEN', value='(', line=24, column=25)
Token(type='BITWOP', value='&', line=24, column=26)
Token(type='ID', value='msg', line=24, column=27)
Token(type='PARCLOSE', value=')', line=24, column=30)
Token(type='END', value=';', line=24, column=31)
Token(type='ID', value='free', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=12)
Token(type='BITWOP', value='&', line=25, column=13)
Token(type='ID', value='msg', line=25, column=14)
Token(type='PARCLOSE', value=')', line=25, column=17)
Token(type='END', value=';', line=25, column=18)
Token(type='BRACECLOSE', value='}', line=26, column=4)
Token(type='ID', value='sei', line=28, column=4)
Token(type='PAROPEN', value='(', line=28, column=7)
Token(type='PARCLOSE', value=')', line=28, column=8)
Token(type='END', value=';', line=28, column=9)
Token(type='BRACECLOSE', value='}', line=29, column=0)
Token(type='ID', value='void', line=31, column=0)
Token(type='ID', value='CAN_init', line=31, column=5)
Token(type='PAROPEN', value='(', line=31, column=13)
Token(type='PARCLOSE', value=')', line=31, column=14)
Token(type='BRACEOPEN', value='{', line=31, column=15)
Token(type='ID', value='mcp_reset', line=32, column=4)
Token(type='PAROPEN', value='(', line=32, column=13)
Token(type='PARCLOSE', value=')', line=32, column=14)
Token(type='END', value=';', line=32, column=15)
Token(type='ID', value='TXB0', line=33, column=4)
Token(type='ASSIGN', value='=', line=33, column=9)
Token(type='PAROPEN', value='(', line=33, column=11)
Token(type='ID', value='transmit_registers', line=33, column=12)
Token(type='ARITOP', value='*', line=33, column=30)
Token(type='PARCLOSE', value=')', line=33, column=31)
Token(type='PREFIX', value='0b', line=33, column=33)
Token(type='NUMBER', value=110000, line=33, column=35)
Token(type='END', value=';', line=33, column=43)
Token(type='ID', value='RXB0', line=34, column=4)
Token(type='ASSIGN', value='=', line=34, column=9)
Token(type='PAROPEN', value='(', line=34, column=11)
Token(type='ID', value='transmit_registers', line=34, column=12)
Token(type='ARITOP', value='*', line=34, column=30)
Token(type='PARCLOSE', value=')', line=34, column=31)
Token(type='PREFIX', value='0b', line=34, column=33)
Token(type='NUMBER', value=1100000, line=34, column=35)
Token(type='END', value=';', line=34, column=43)
Token(type='ID', value='write_mcp', line=35, column=4)
Token(type='PAROPEN', value='(', line=35, column=13)
Token(type='PREFIX', value='0x', line=35, column=14)
Token(type='NUMBER', value=3, line=35, column=16)
Token(type='LISTSEP', value=',', line=35, column=18)
Token(type='ID', value='CNF1', line=35, column=20)
Token(type='PARCLOSE', value=')', line=35, column=24)
Token(type='END', value=';', line=35, column=25)
Token(type='ID', value='write_mcp', line=36, column=4)
Token(type='PAROPEN', value='(', line=36, column=13)
Token(type='PREFIX', value='0b', line=36, column=14)
Token(type='NUMBER', value=10110001, line=36, column=16)
Token(type='LISTSEP', value=',', line=36, column=24)
Token(type='ID', value='CNF2', line=36, column=26)
Token(type='PARCLOSE', value=')', line=36, column=30)
Token(type='END', value=';', line=36, column=31)
Token(type='ID', value='write_mcp', line=37, column=4)
Token(type='PAROPEN', value='(', line=37, column=13)
Token(type='PREFIX', value='0x', line=37, column=14)
Token(type='NUMBER', value=5, line=37, column=16)
Token(type='LISTSEP', value=',', line=37, column=18)
Token(type='ID', value='CNF3', line=37, column=20)
Token(type='PARCLOSE', value=')', line=37, column=24)
Token(type='END', value=';', line=37, column=25)
Token(type='ID', value='cli', line=39, column=4)
Token(type='PAROPEN', value='(', line=39, column=7)
Token(type='PARCLOSE', value=')', line=39, column=8)
Token(type='END', value=';', line=39, column=9)
Token(type='ID', value='MCUCR', line=41, column=4)
Token(type='ASSIGN', value='|=', line=41, column=10)
Token(type='PAROPEN', value='(', line=41, column=13)
Token(type='NUMBER', value=1, line=41, column=14)
Token(type='BITWOP', value='<<', line=41, column=16)
Token(type='ID', value='ISC01', line=41, column=19)
Token(type='PARCLOSE', value=')', line=41, column=24)
Token(type='END', value=';', line=41, column=25)
Token(type='ID', value='GICR', line=44, column=4)
Token(type='ASSIGN', value='|=', line=44, column=9)
Token(type='PAROPEN', value='(', line=44, column=12)
Token(type='NUMBER', value=1, line=44, column=13)
Token(type='BITWOP', value='<<', line=44, column=15)
Token(type='ID', value='INT0', line=44, column=18)
Token(type='PARCLOSE', value=')', line=44, column=22)
Token(type='END', value=';', line=44, column=23)
Token(type='ID', value='write_mcp', line=47, column=4)
Token(type='PAROPEN', value='(', line=47, column=13)
Token(type='PREFIX', value='0x', line=47, column=14)
Token(type='NUMBER', value=1, line=47, column=16)
Token(type='LISTSEP', value=',', line=47, column=18)
Token(type='ID', value='MCP_CANINTE', line=47, column=19)
Token(type='PARCLOSE', value=')', line=47, column=30)
Token(type='END', value=';', line=47, column=31)
Token(type='ID', value='sei', line=49, column=4)
Token(type='PAROPEN', value='(', line=49, column=7)
Token(type='PARCLOSE', value=')', line=49, column=8)
Token(type='END', value=';', line=49, column=9)
Token(type='ID', value='write_mcp', line=53, column=4)
Token(type='PAROPEN', value='(', line=53, column=13)
Token(type='PREFIX', value='0b', line=53, column=14)
Token(type='NUMBER', value=1100000, line=53, column=16)
Token(type='LISTSEP', value=',', line=53, column=24)
Token(type='PAROPEN', value='(', line=53, column=26)
Token(type='ID', value='char', line=53, column=27)
Token(type='PARCLOSE', value=')', line=53, column=31)
Token(type='BITWOP', value='&', line=53, column=33)
Token(type='ID', value='RXB0', line=53, column=34)
Token(type='MEMBER', value='->', line=53, column=38)
Token(type='ID', value='CTRL', line=53, column=40)
Token(type='PARCLOSE', value=')', line=53, column=44)
Token(type='END', value=';', line=53, column=45)
Token(type='ID', value='mcp_bit_modify', line=54, column=4)
Token(type='PAROPEN', value='(', line=54, column=18)
Token(type='PAROPEN', value='(', line=54, column=19)
Token(type='ID', value='char', line=54, column=20)
Token(type='PARCLOSE', value=')', line=54, column=24)
Token(type='BITWOP', value='&', line=54, column=26)
Token(type='ID', value='TXB0', line=54, column=27)
Token(type='MEMBER', value='->', line=54, column=31)
Token(type='ID', value='CANCTRL', line=54, column=33)
Token(type='LISTSEP', value=',', line=54, column=40)
Token(type='PREFIX', value='0b', line=54, column=42)
Token(type='NUMBER', value=11100000, line=54, column=44)
Token(type='LISTSEP', value=',', line=54, column=52)
Token(type='PREFIX', value='0b', line=54, column=54)
Token(type='NUMBER', value=0, line=54, column=56)
Token(type='PARCLOSE', value=')', line=54, column=64)
Token(type='END', value=';', line=54, column=65)
Token(type='BRACECLOSE', value='}', line=57, column=0)
Token(type='ID', value='int', line=59, column=0)
Token(type='ID', value='CAN_transmit', line=59, column=4)
Token(type='PAROPEN', value='(', line=59, column=16)
Token(type='ID', value='can_message', line=59, column=17)
Token(type='ARITOP', value='*', line=59, column=29)
Token(type='ID', value='m', line=59, column=30)
Token(type='PARCLOSE', value=')', line=59, column=31)
Token(type='BRACEOPEN', value='{', line=59, column=32)
Token(type='IF', value='if', line=61, column=4)
Token(type='PAROPEN', value='(', line=61, column=6)
Token(type='ID', value='read_mcp', line=61, column=7)
Token(type='PAROPEN', value='(', line=61, column=15)
Token(type='PAROPEN', value='(', line=61, column=16)
Token(type='ID', value='char', line=61, column=17)
Token(type='PARCLOSE', value=')', line=61, column=21)
Token(type='BITWOP', value='&', line=61, column=23)
Token(type='ID', value='TXB0', line=61, column=24)
Token(type='MEMBER', value='->', line=61, column=28)
Token(type='ID', value='CTRL', line=61, column=30)
Token(type='PARCLOSE', value=')', line=61, column=34)
Token(type='BITWOP', value='&', line=61, column=36)
Token(type='PAROPEN', value='(', line=61, column=38)
Token(type='NUMBER', value=1, line=61, column=39)
Token(type='BITWOP', value='<<', line=61, column=41)
Token(type='NUMBER', value=3, line=61, column=44)
Token(type='PARCLOSE', value=')', line=61, column=45)
Token(type='PARCLOSE', value=')', line=61, column=46)
Token(type='BRACEOPEN', value='{', line=61, column=47)
Token(type='ID', value='return', line=62, column=8)
Token(type='ARITOP', value='-', line=62, column=15)
Token(type='NUMBER', value=1, line=62, column=16)
Token(type='END', value=';', line=62, column=17)
Token(type='BRACECLOSE', value='}', line=63, column=4)
Token(type='IF', value='if', line=64, column=4)
Token(type='PAROPEN', value='(', line=64, column=6)
Token(type='ID', value='m', line=64, column=7)
Token(type='MEMBER', value='->', line=64, column=8)
Token(type='ID', value='data_length', line=64, column=10)
Token(type='ARITOP', value='>', line=64, column=22)
Token(type='NUMBER', value=8, line=64, column=23)
Token(type='PARCLOSE', value=')', line=64, column=24)
Token(type='BRACEOPEN', value='{', line=64, column=25)
Token(type='ID', value='return', line=65, column=8)
Token(type='ARITOP', value='-', line=65, column=15)
Token(type='NUMBER', value=1, line=65, column=16)
Token(type='END', value=';', line=65, column=17)
Token(type='BRACECLOSE', value='}', line=66, column=4)
Token(type='ID', value='write_mcp', line=67, column=4)
Token(type='PAROPEN', value='(', line=67, column=13)
Token(type='PAROPEN', value='(', line=67, column=14)
Token(type='ID', value='uint8_t', line=67, column=15)
Token(type='PARCLOSE', value=')', line=67, column=22)
Token(type='PAROPEN', value='(', line=67, column=24)
Token(type='ID', value='m', line=67, column=25)
Token(type='MEMBER', value='->', line=67, column=26)
Token(type='ID', value='id', line=67, column=28)
Token(type='BITWOP', value='>>', line=67, column=31)
Token(type='NUMBER', value=3, line=67, column=34)
Token(type='PARCLOSE', value=')', line=67, column=35)
Token(type='LISTSEP', value=',', line=67, column=36)
Token(type='PAROPEN', value='(', line=67, column=38)
Token(type='ID', value='char', line=67, column=39)
Token(type='PARCLOSE', value=')', line=67, column=43)
Token(type='BITWOP', value='&', line=67, column=45)
Token(type='ID', value='TXB0', line=67, column=46)
Token(type='MEMBER', value='->', line=67, column=50)
Token(type='ID', value='SIDH', line=67, column=52)
Token(type='PARCLOSE', value=')', line=67, column=56)
Token(type='END', value=';', line=67, column=57)
Token(type='ID', value='write_mcp', line=68, column=4)
Token(type='PAROPEN', value='(', line=68, column=13)
Token(type='PAROPEN', value='(', line=68, column=14)
Token(type='ID', value='uint8_t', line=68, column=15)
Token(type='PARCLOSE', value=')', line=68, column=22)
Token(type='PAROPEN', value='(', line=68, column=24)
Token(type='PAROPEN', value='(', line=68, column=25)
Token(type='ID', value='m', line=68, column=26)
Token(type='MEMBER', value='->', line=68, column=27)
Token(type='ID', value='id', line=68, column=29)
Token(type='BITWOP', value='&', line=68, column=32)
Token(type='PREFIX', value='0x', line=68, column=34)
Token(type='NUMBER', value=7, line=68, column=36)
Token(type='PARCLOSE', value=')', line=68, column=37)
Token(type='BITWOP', value='<<', line=68, column=39)
Token(type='NUMBER', value=5, line=68, column=41)
Token(type='PARCLOSE', value=')', line=68, column=42)
Token(type='LISTSEP', value=',', line=68, column=44)
Token(type='PAROPEN', value='(', line=68, column=46)
Token(type='ID', value='char', line=68, column=47)
Token(type='PARCLOSE', value=')', line=68, column=51)
Token(type='BITWOP', value='&', line=68, column=53)
Token(type='ID', value='TXB0', line=68, column=54)
Token(type='MEMBER', value='->', line=68, column=58)
Token(type='ID', value='SIDL', line=68, column=60)
Token(type='PARCLOSE', value=')', line=68, column=64)
Token(type='END', value=';', line=68, column=65)
Token(type='ID', value='write_mcp', line=69, column=4)
Token(type='PAROPEN', value='(', line=69, column=13)
Token(type='ID', value='m', line=69, column=14)
Token(type='MEMBER', value='->', line=69, column=15)
Token(type='ID', value='data_length', line=69, column=17)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='PAROPEN', value='(', line=69, column=30)
Token(type='ID', value='char', line=69, column=31)
Token(type='PARCLOSE', value=')', line=69, column=35)
Token(type='BITWOP', value='&', line=69, column=37)
Token(type='ID', value='TXB0', line=69, column=38)
Token(type='MEMBER', value='->', line=69, column=42)
Token(type='ID', value='DLC', line=69, column=44)
Token(type='PARCLOSE', value=')', line=69, column=47)
Token(type='END', value=';', line=69, column=48)
Token(type='FOR', value='for', line=70, column=4)
Token(type='PAROPEN', value='(', line=70, column=8)
Token(type='ID', value='uint8_t', line=70, column=9)
Token(type='ID', value='i', line=70, column=17)
Token(type='ASSIGN', value='=', line=70, column=19)
Token(type='NUMBER', value=0, line=70, column=21)
Token(type='END', value=';', line=70, column=22)
Token(type='ID', value='i', line=70, column=24)
Token(type='ARITOP', value='<', line=70, column=26)
Token(type='ID', value='m', line=70, column=28)
Token(type='MEMBER', value='->', line=70, column=29)
Token(type='ID', value='data_length', line=70, column=31)
Token(type='END', value=';', line=70, column=42)
Token(type='ID', value='i', line=70, column=44)
Token(type='ARITOP', value='+', line=70, column=45)
Token(type='ARITOP', value='+', line=70, column=46)
Token(type='PARCLOSE', value=')', line=70, column=47)
Token(type='BRACEOPEN', value='{', line=70, column=48)
Token(type='ID', value='write_mcp', line=72, column=8)
Token(type='PAROPEN', value='(', line=72, column=17)
Token(type='ID', value='m', line=72, column=18)
Token(type='MEMBER', value='->', line=72, column=19)
Token(type='ID', value='data', line=72, column=21)
Token(type='BRACKOPEN', value='[', line=72, column=25)
Token(type='ID', value='i', line=72, column=26)
Token(type='BRACKCLOSE', value=']', line=72, column=27)
Token(type='LISTSEP', value=',', line=72, column=28)
Token(type='PAROPEN', value='(', line=72, column=30)
Token(type='ID', value='char', line=72, column=31)
Token(type='PARCLOSE', value=')', line=72, column=35)
Token(type='PREFIX', value='0b', line=72, column=37)
Token(type='NUMBER', value=110110, line=72, column=39)
Token(type='ARITOP', value='+', line=72, column=48)
Token(type='ID', value='i', line=72, column=49)
Token(type='PARCLOSE', value=')', line=72, column=50)
Token(type='END', value=';', line=72, column=51)
Token(type='BRACECLOSE', value='}', line=74, column=4)
Token(type='ID', value='RTS', line=75, column=4)
Token(type='PAROPEN', value='(', line=75, column=7)
Token(type='PREFIX', value='0x', line=75, column=8)
Token(type='NUMBER', value=1, line=75, column=10)
Token(type='PARCLOSE', value=')', line=75, column=12)
Token(type='END', value=';', line=75, column=13)
Token(type='ID', value='return', line=76, column=4)
Token(type='NUMBER', value=0, line=76, column=11)
Token(type='END', value=';', line=76, column=12)
Token(type='BRACECLOSE', value='}', line=77, column=0)
Token(type='ID', value='int', line=79, column=0)
Token(type='ID', value='CAN_recieve', line=79, column=4)
Token(type='PAROPEN', value='(', line=79, column=15)
Token(type='ID', value='can_message', line=79, column=16)
Token(type='ARITOP', value='*', line=79, column=28)
Token(type='ID', value='msg', line=79, column=29)
Token(type='PARCLOSE', value=')', line=79, column=32)
Token(type='BRACEOPEN', value='{', line=79, column=33)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=80, column=27)
Token(type='LISTSEP', value=',', line=80, column=28)
Token(type='ID', value='read_mcp', line=80, column=30)
Token(type='PAROPEN', value='(', line=80, column=38)
Token(type='ID', value='CANINTF', line=80, column=39)
Token(type='PARCLOSE', value=')', line=80, column=46)
Token(type='PARCLOSE', value=')', line=80, column=47)
Token(type='END', value=';', line=80, column=48)
Token(type='ID', value='uint16_t', line=88, column=4)
Token(type='ID', value='high', line=88, column=13)
Token(type='ASSIGN', value='=', line=88, column=18)
Token(type='ID', value='read_mcp', line=88, column=20)
Token(type='PAROPEN', value='(', line=88, column=28)
Token(type='PAROPEN', value='(', line=88, column=29)
Token(type='ID', value='char', line=88, column=30)
Token(type='PARCLOSE', value=')', line=88, column=34)
Token(type='BITWOP', value='&', line=88, column=36)
Token(type='ID', value='RXB0', line=88, column=37)
Token(type='MEMBER', value='->', line=88, column=41)
Token(type='ID', value='SIDH', line=88, column=43)
Token(type='PARCLOSE', value=')', line=88, column=47)
Token(type='END', value=';', line=88, column=48)
Token(type='ID', value='uint16_t', line=89, column=4)
Token(type='ID', value='low', line=89, column=13)
Token(type='ASSIGN', value='=', line=89, column=17)
Token(type='ID', value='read_mcp', line=89, column=19)
Token(type='PAROPEN', value='(', line=89, column=27)
Token(type='PAROPEN', value='(', line=89, column=28)
Token(type='ID', value='char', line=89, column=29)
Token(type='PARCLOSE', value=')', line=89, column=33)
Token(type='BITWOP', value='&', line=89, column=35)
Token(type='ID', value='RXB0', line=89, column=36)
Token(type='MEMBER', value='->', line=89, column=40)
Token(type='ID', value='SIDL', line=89, column=42)
Token(type='PARCLOSE', value=')', line=89, column=46)
Token(type='END', value=';', line=89, column=47)
Token(type='ID', value='msg', line=91, column=4)
Token(type='MEMBER', value='->', line=91, column=7)
Token(type='ID', value='id', line=91, column=9)
Token(type='ASSIGN', value='=', line=91, column=12)
Token(type='PAROPEN', value='(', line=91, column=14)
Token(type='ID', value='high', line=91, column=15)
Token(type='BITWOP', value='<<', line=91, column=20)
Token(type='NUMBER', value=3, line=91, column=23)
Token(type='PARCLOSE', value=')', line=91, column=24)
Token(type='BITWOP', value='|', line=91, column=26)
Token(type='PAROPEN', value='(', line=91, column=28)
Token(type='ID', value='low', line=91, column=29)
Token(type='BITWOP', value='>>', line=91, column=33)
Token(type='NUMBER', value=5, line=91, column=36)
Token(type='PARCLOSE', value=')', line=91, column=37)
Token(type='END', value=';', line=91, column=38)
Token(type='ID', value='msg', line=92, column=4)
Token(type='MEMBER', value='->', line=92, column=7)
Token(type='ID', value='data_length', line=92, column=9)
Token(type='ASSIGN', value='=', line=92, column=21)
Token(type='PAROPEN', value='(', line=92, column=23)
Token(type='PAROPEN', value='(', line=92, column=24)
Token(type='ID', value='read_mcp', line=92, column=25)
Token(type='PAROPEN', value='(', line=92, column=33)
Token(type='PAROPEN', value='(', line=92, column=34)
Token(type='ID', value='char', line=92, column=35)
Token(type='PARCLOSE', value=')', line=92, column=39)
Token(type='BITWOP', value='&', line=92, column=41)
Token(type='ID', value='RXB0', line=92, column=42)
Token(type='MEMBER', value='->', line=92, column=46)
Token(type='ID', value='DLC', line=92, column=48)
Token(type='PARCLOSE', value=')', line=92, column=51)
Token(type='PARCLOSE', value=')', line=92, column=52)
Token(type='BITWOP', value='&', line=92, column=54)
Token(type='PREFIX', value='0x', line=92, column=56)
Token(type='NUMBER', value=0, line=92, column=58)
Token(type='ID', value='F', line=92, column=59)
Token(type='PARCLOSE', value=')', line=92, column=60)
Token(type='ARITOP', value='+', line=92, column=61)
Token(type='NUMBER', value=1, line=92, column=62)
Token(type='END', value=';', line=92, column=63)
Token(type='FOR', value='for', line=93, column=4)
Token(type='PAROPEN', value='(', line=93, column=7)
Token(type='ID', value='int', line=93, column=8)
Token(type='ID', value='i', line=93, column=12)
Token(type='ASSIGN', value='=', line=93, column=14)
Token(type='NUMBER', value=0, line=93, column=16)
Token(type='END', value=';', line=93, column=17)
Token(type='ID', value='i', line=93, column=19)
Token(type='ARITOP', value='<', line=93, column=21)
Token(type='ID', value='msg', line=93, column=23)
Token(type='MEMBER', value='->', line=93, column=26)
Token(type='ID', value='data_length', line=93, column=28)
Token(type='END', value=';', line=93, column=39)
Token(type='ID', value='i', line=93, column=41)
Token(type='ARITOP', value='+', line=93, column=42)
Token(type='ARITOP', value='+', line=93, column=43)
Token(type='PARCLOSE', value=')', line=93, column=44)
Token(type='BRACEOPEN', value='{', line=93, column=45)
Token(type='ID', value='msg', line=94, column=8)
Token(type='MEMBER', value='->', line=94, column=11)
Token(type='ID', value='data', line=94, column=13)
Token(type='BRACKOPEN', value='[', line=94, column=17)
Token(type='ID', value='i', line=94, column=18)
Token(type='BRACKCLOSE', value=']', line=94, column=19)
Token(type='ASSIGN', value='=', line=94, column=21)
Token(type='ID', value='read_mcp', line=94, column=23)
Token(type='PAROPEN', value='(', line=94, column=31)
Token(type='PAROPEN', value='(', line=94, column=32)
Token(type='ID', value='char', line=94, column=33)
Token(type='PARCLOSE', value=')', line=94, column=37)
Token(type='PREFIX', value='0b', line=94, column=39)
Token(type='NUMBER', value=1100110, line=94, column=41)
Token(type='ARITOP', value='+', line=94, column=50)
Token(type='ID', value='i', line=94, column=51)
Token(type='PARCLOSE', value=')', line=94, column=52)
Token(type='END', value=';', line=94, column=53)
Token(type='BRACECLOSE', value='}', line=96, column=4)
Token(type='ID', value='write_mcp', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=13)
Token(type='PREFIX', value='0x', line=97, column=14)
Token(type='NUMBER', value=0, line=97, column=16)
Token(type='LISTSEP', value=',', line=97, column=18)
Token(type='ID', value='CANINTF', line=97, column=20)
Token(type='PARCLOSE', value=')', line=97, column=27)
Token(type='END', value=';', line=97, column=28)
Token(type='ID', value='printf', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=10)
Token(type='STRING', value='CANINTF : %x \\n', line=99, column=27)
Token(type='LISTSEP', value=',', line=99, column=28)
Token(type='ID', value='read_mcp', line=99, column=30)
Token(type='PAROPEN', value='(', line=99, column=38)
Token(type='ID', value='CANINTF', line=99, column=39)
Token(type='PARCLOSE', value=')', line=99, column=46)
Token(type='PARCLOSE', value=')', line=99, column=47)
Token(type='END', value=';', line=99, column=48)
Token(type='ID', value='return', line=100, column=4)
Token(type='NUMBER', value=0, line=100, column=11)
Token(type='END', value=';', line=100, column=12)
Token(type='BRACECLOSE', value='}', line=103, column=0)
Token(type='ID', value='ISR', line=105, column=0)
Token(type='PAROPEN', value='(', line=105, column=3)
Token(type='ID', value='BADISR_vect', line=105, column=4)
Token(type='PARCLOSE', value=')', line=105, column=15)
Token(type='BRACEOPEN', value='{', line=105, column=16)
Token(type='BRACECLOSE', value='}', line=105, column=17)
