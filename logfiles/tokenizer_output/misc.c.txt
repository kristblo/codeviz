Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
Token(type='PREPROC', value='#include "misc.h"', line=2, column=0)
Token(type='ID', value='void', line=5, column=0)
Token(type='ID', value='test_latch', line=5, column=5)
Token(type='PAROPEN', value='(', line=5, column=15)
Token(type='ID', value='void', line=5, column=16)
Token(type='PARCLOSE', value=')', line=5, column=20)
Token(type='BRACEOPEN', value='{', line=5, column=21)
Token(type='ID', value='double', line=6, column=4)
Token(type='ID', value='del', line=6, column=11)
Token(type='ASSIGN', value='=', line=6, column=15)
Token(type='NUMBER', value=250, line=6, column=17)
Token(type='END', value=';', line=6, column=20)
Token(type='ID', value='DDRA', line=7, column=4)
Token(type='ASSIGN', value='|=', line=7, column=9)
Token(type='PAROPEN', value='(', line=7, column=12)
Token(type='NUMBER', value=255, line=7, column=13)
Token(type='PARCLOSE', value=')', line=7, column=16)
Token(type='END', value=';', line=7, column=17)
Token(type='ID', value='_delay_ms', line=8, column=4)
Token(type='PAROPEN', value='(', line=8, column=13)
Token(type='ID', value='del', line=8, column=14)
Token(type='PARCLOSE', value=')', line=8, column=17)
Token(type='END', value=';', line=8, column=18)
Token(type='ID', value='DDRE', line=9, column=4)
Token(type='ASSIGN', value='|=', line=9, column=9)
Token(type='PAROPEN', value='(', line=9, column=12)
Token(type='NUMBER', value=1, line=9, column=14)
Token(type='BITWOP', value='<<', line=9, column=16)
Token(type='ID', value='PE1', line=9, column=19)
Token(type='PARCLOSE', value=')', line=9, column=22)
Token(type='END', value=';', line=9, column=23)
Token(type='ID', value='PORTE', line=10, column=4)
Token(type='ASSIGN', value='&=', line=10, column=10)
Token(type='BITWOP', value='~', line=10, column=13)
Token(type='PAROPEN', value='(', line=10, column=14)
Token(type='NUMBER', value=1, line=10, column=15)
Token(type='BITWOP', value='<<', line=10, column=17)
Token(type='ID', value='PE1', line=10, column=20)
Token(type='PARCLOSE', value=')', line=10, column=23)
Token(type='END', value=';', line=10, column=24)
Token(type='ID', value='PORTE', line=11, column=4)
Token(type='ASSIGN', value='|=', line=11, column=10)
Token(type='PAROPEN', value='(', line=11, column=13)
Token(type='NUMBER', value=1, line=11, column=14)
Token(type='BITWOP', value='<<', line=11, column=16)
Token(type='ID', value='PE1', line=11, column=19)
Token(type='PARCLOSE', value=')', line=11, column=22)
Token(type='END', value=';', line=11, column=23)
Token(type='ID', value='PORTA', line=12, column=4)
Token(type='ASSIGN', value='|=', line=12, column=10)
Token(type='PAROPEN', value='(', line=12, column=13)
Token(type='NUMBER', value=1, line=12, column=14)
Token(type='BITWOP', value='<<', line=12, column=16)
Token(type='ID', value='PA0', line=12, column=19)
Token(type='PARCLOSE', value=')', line=12, column=22)
Token(type='END', value=';', line=12, column=23)
Token(type='ID', value='_delay_ms', line=13, column=4)
Token(type='PAROPEN', value='(', line=13, column=13)
Token(type='ID', value='del', line=13, column=14)
Token(type='PARCLOSE', value=')', line=13, column=17)
Token(type='END', value=';', line=13, column=18)
Token(type='ID', value='_delay_ms', line=14, column=4)
Token(type='PAROPEN', value='(', line=14, column=13)
Token(type='ID', value='del', line=14, column=14)
Token(type='PARCLOSE', value=')', line=14, column=17)
Token(type='END', value=';', line=14, column=18)
Token(type='ID', value='PORTE', line=15, column=4)
Token(type='ASSIGN', value='&=', line=15, column=10)
Token(type='BITWOP', value='~', line=15, column=13)
Token(type='PAROPEN', value='(', line=15, column=14)
Token(type='NUMBER', value=1, line=15, column=15)
Token(type='BITWOP', value='<<', line=15, column=17)
Token(type='ID', value='PE1', line=15, column=20)
Token(type='PARCLOSE', value=')', line=15, column=23)
Token(type='END', value=';', line=15, column=24)
Token(type='ID', value='PORTA', line=16, column=4)
Token(type='ASSIGN', value='&=', line=16, column=10)
Token(type='NUMBER', value=0, line=16, column=13)
Token(type='END', value=';', line=16, column=14)
Token(type='ID', value='_delay_ms', line=17, column=4)
Token(type='PAROPEN', value='(', line=17, column=13)
Token(type='NUMBER', value=1000.0, line=17, column=14)
Token(type='PARCLOSE', value=')', line=17, column=20)
Token(type='END', value=';', line=17, column=21)
Token(type='BRACECLOSE', value='}', line=18, column=0)
Token(type='ID', value='void', line=20, column=0)
Token(type='ID', value='test_jtag', line=20, column=5)
Token(type='PAROPEN', value='(', line=20, column=14)
Token(type='PARCLOSE', value=')', line=20, column=15)
Token(type='BRACEOPEN', value='{', line=20, column=16)
Token(type='ID', value='double', line=21, column=4)
Token(type='ID', value='del', line=21, column=11)
Token(type='ASSIGN', value='=', line=21, column=15)
Token(type='NUMBER', value=250, line=21, column=17)
Token(type='END', value=';', line=21, column=20)
Token(type='ID', value='int', line=22, column=4)
Token(type='ID', value='i', line=22, column=8)
Token(type='ASSIGN', value='=', line=22, column=10)
Token(type='NUMBER', value=1, line=22, column=12)
Token(type='END', value=';', line=22, column=13)
Token(type='ID', value='DDRA', line=23, column=4)
Token(type='ASSIGN', value='|=', line=23, column=9)
Token(type='PAROPEN', value='(', line=23, column=12)
Token(type='NUMBER', value=1, line=23, column=13)
Token(type='BITWOP', value='<<', line=23, column=15)
Token(type='ID', value='PA0', line=23, column=18)
Token(type='PARCLOSE', value=')', line=23, column=21)
Token(type='END', value=';', line=23, column=22)
Token(type='ID', value='while', line=24, column=4)
Token(type='PAROPEN', value='(', line=24, column=9)
Token(type='ID', value='i', line=24, column=10)
Token(type='ARITOP', value='<', line=24, column=12)
Token(type='NUMBER', value=3, line=24, column=14)
Token(type='PARCLOSE', value=')', line=24, column=15)
Token(type='BRACEOPEN', value='{', line=24, column=16)
Token(type='IF', value='if', line=25, column=8)
Token(type='PAROPEN', value='(', line=25, column=10)
Token(type='ID', value='i', line=25, column=11)
Token(type='NUMBER', value=2, line=25, column=15)
Token(type='ASSIGN', value='=', line=25, column=17)
Token(type='ASSIGN', value='=', line=25, column=18)
Token(type='NUMBER', value=0, line=25, column=20)
Token(type='PARCLOSE', value=')', line=25, column=21)
Token(type='BRACEOPEN', value='{', line=25, column=22)
Token(type='ID', value='PORTA', line=26, column=12)
Token(type='ASSIGN', value='&=', line=26, column=18)
Token(type='BITWOP', value='~', line=26, column=21)
Token(type='PAROPEN', value='(', line=26, column=22)
Token(type='NUMBER', value=1, line=26, column=23)
Token(type='BITWOP', value='<<', line=26, column=25)
Token(type='ID', value='PA0', line=26, column=28)
Token(type='PARCLOSE', value=')', line=26, column=31)
Token(type='END', value=';', line=26, column=32)
Token(type='BRACECLOSE', value='}', line=27, column=8)
Token(type='ELSE', value='else', line=27, column=9)
Token(type='BRACEOPEN', value='{', line=27, column=13)
Token(type='ID', value='PORTA', line=28, column=12)
Token(type='ASSIGN', value='|=', line=28, column=18)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='NUMBER', value=1, line=28, column=22)
Token(type='BITWOP', value='<<', line=28, column=24)
Token(type='ID', value='PA0', line=28, column=27)
Token(type='PARCLOSE', value=')', line=28, column=30)
Token(type='END', value=';', line=28, column=31)
Token(type='BRACECLOSE', value='}', line=29, column=8)
Token(type='ID', value='_delay_ms', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=17)
Token(type='ID', value='del', line=30, column=18)
Token(type='PARCLOSE', value=')', line=30, column=21)
Token(type='END', value=';', line=30, column=22)
Token(type='ID', value='i', line=31, column=8)
Token(type='ARITOP', value='+', line=31, column=9)
Token(type='ARITOP', value='+', line=31, column=10)
Token(type='END', value=';', line=31, column=11)
Token(type='BRACECLOSE', value='}', line=32, column=4)
Token(type='BRACECLOSE', value='}', line=34, column=0)
Token(type='ID', value='void', line=37, column=0)
Token(type='ID', value='SRAM_test', line=37, column=5)
Token(type='PAROPEN', value='(', line=37, column=14)
Token(type='ID', value='void', line=37, column=15)
Token(type='PARCLOSE', value=')', line=37, column=19)
Token(type='BRACEOPEN', value='{', line=38, column=4)
Token(type='ID', value='volatile', line=39, column=2)
Token(type='ID', value='char', line=39, column=11)
Token(type='ARITOP', value='*', line=39, column=16)
Token(type='ID', value='ext_ram', line=39, column=17)
Token(type='ASSIGN', value='=', line=39, column=25)
Token(type='PAROPEN', value='(', line=39, column=27)
Token(type='ID', value='char', line=39, column=28)
Token(type='ARITOP', value='*', line=39, column=33)
Token(type='PARCLOSE', value=')', line=39, column=34)
Token(type='PREFIX', value='0x', line=39, column=36)
Token(type='NUMBER', value=1800, line=39, column=38)
Token(type='END', value=';', line=39, column=42)
Token(type='ID', value='uint16_t', line=40, column=8)
Token(type='ID', value='ext_ram_size', line=40, column=17)
Token(type='ASSIGN', value='=', line=40, column=30)
Token(type='PREFIX', value='0x', line=40, column=32)
Token(type='NUMBER', value=800, line=40, column=34)
Token(type='END', value=';', line=40, column=37)
Token(type='ID', value='uint16_t', line=41, column=8)
Token(type='ID', value='write_errors', line=41, column=17)
Token(type='ASSIGN', value='=', line=41, column=30)
Token(type='NUMBER', value=0, line=41, column=32)
Token(type='END', value=';', line=41, column=33)
Token(type='ID', value='uint16_t', line=42, column=8)
Token(type='ID', value='retrieval_errors', line=42, column=17)
Token(type='ASSIGN', value='=', line=42, column=34)
Token(type='NUMBER', value=0, line=42, column=36)
Token(type='END', value=';', line=42, column=37)
Token(type='ID', value='printf', line=43, column=8)
Token(type='PAROPEN', value='(', line=43, column=14)
Token(type='STRING', value='Starting SRAM test...\\n', line=43, column=39)
Token(type='PARCLOSE', value=')', line=43, column=40)
Token(type='END', value=';', line=43, column=41)
Token(type='ID', value='uint16_t', line=46, column=8)
Token(type='ID', value='seed', line=46, column=17)
Token(type='ASSIGN', value='=', line=46, column=22)
Token(type='ID', value='rand', line=46, column=24)
Token(type='PAROPEN', value='(', line=46, column=28)
Token(type='PARCLOSE', value=')', line=46, column=29)
Token(type='END', value=';', line=46, column=30)
Token(type='ID', value='srand', line=48, column=8)
Token(type='PAROPEN', value='(', line=48, column=13)
Token(type='ID', value='seed', line=48, column=14)
Token(type='PARCLOSE', value=')', line=48, column=18)
Token(type='END', value=';', line=48, column=19)
Token(type='FOR', value='for', line=49, column=8)
Token(type='PAROPEN', value='(', line=49, column=12)
Token(type='ID', value='uint16_t', line=49, column=13)
Token(type='ID', value='i', line=49, column=22)
Token(type='ASSIGN', value='=', line=49, column=24)
Token(type='NUMBER', value=0, line=49, column=26)
Token(type='END', value=';', line=49, column=27)
Token(type='ID', value='i', line=49, column=29)
Token(type='ARITOP', value='<', line=49, column=31)
Token(type='ID', value='ext_ram_size', line=49, column=33)
Token(type='END', value=';', line=49, column=45)
Token(type='ID', value='i', line=49, column=47)
Token(type='ARITOP', value='+', line=49, column=48)
Token(type='ARITOP', value='+', line=49, column=49)
Token(type='PARCLOSE', value=')', line=49, column=50)
Token(type='BRACEOPEN', value='{', line=49, column=52)
Token(type='ID', value='uint8_t', line=50, column=12)
Token(type='ID', value='some_value', line=50, column=20)
Token(type='ASSIGN', value='=', line=50, column=31)
Token(type='ID', value='i', line=50, column=33)
Token(type='END', value=';', line=50, column=34)
Token(type='ID', value='ext_ram', line=51, column=12)
Token(type='BRACKOPEN', value='[', line=51, column=19)
Token(type='ID', value='i', line=51, column=20)
Token(type='BRACKCLOSE', value=']', line=51, column=21)
Token(type='ASSIGN', value='=', line=51, column=23)
Token(type='ID', value='some_value', line=51, column=25)
Token(type='END', value=';', line=51, column=35)
Token(type='ID', value='uint8_t', line=53, column=12)
Token(type='ID', value='retreived_value', line=53, column=20)
Token(type='ASSIGN', value='=', line=53, column=36)
Token(type='ID', value='ext_ram', line=53, column=38)
Token(type='BRACKOPEN', value='[', line=53, column=45)
Token(type='ID', value='i', line=53, column=46)
Token(type='BRACKCLOSE', value=']', line=53, column=47)
Token(type='END', value=';', line=53, column=48)
Token(type='IF', value='if', line=55, column=12)
Token(type='PAROPEN', value='(', line=55, column=15)
Token(type='ID', value='retreived_value', line=55, column=16)
Token(type='ASSIGN', value='=', line=55, column=33)
Token(type='ID', value='some_value', line=55, column=35)
Token(type='PARCLOSE', value=')', line=55, column=45)
Token(type='BRACEOPEN', value='{', line=55, column=47)
Token(type='ID', value='printf', line=56, column=16)
Token(type='PAROPEN', value='(', line=56, column=22)
Token(type='STRING', value='Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n', line=56, column=81)
Token(type='LISTSEP', value=',', line=56, column=82)
Token(type='ID', value='i', line=56, column=84)
Token(type='LISTSEP', value=',', line=56, column=85)
Token(type='ID', value='retreived_value', line=56, column=87)
Token(type='LISTSEP', value=',', line=56, column=102)
Token(type='ID', value='some_value', line=56, column=104)
Token(type='PARCLOSE', value=')', line=56, column=114)
Token(type='END', value=';', line=56, column=115)
Token(type='ID', value='write_errors', line=57, column=16)
Token(type='ARITOP', value='+', line=57, column=28)
Token(type='ARITOP', value='+', line=57, column=29)
Token(type='END', value=';', line=57, column=30)
Token(type='BRACECLOSE', value='}', line=58, column=12)
Token(type='BRACECLOSE', value='}', line=59, column=8)
Token(type='ID', value='srand', line=61, column=8)
Token(type='PAROPEN', value='(', line=61, column=13)
Token(type='ID', value='seed', line=61, column=14)
Token(type='PARCLOSE', value=')', line=61, column=18)
Token(type='END', value=';', line=61, column=19)
Token(type='FOR', value='for', line=63, column=8)
Token(type='PAROPEN', value='(', line=63, column=12)
Token(type='ID', value='uint16_t', line=63, column=13)
Token(type='ID', value='i', line=63, column=22)
Token(type='ASSIGN', value='=', line=63, column=24)
Token(type='NUMBER', value=0, line=63, column=26)
Token(type='END', value=';', line=63, column=27)
Token(type='ID', value='i', line=63, column=29)
Token(type='ARITOP', value='<', line=63, column=31)
Token(type='ID', value='ext_ram_size', line=63, column=33)
Token(type='END', value=';', line=63, column=45)
Token(type='ID', value='i', line=63, column=47)
Token(type='ARITOP', value='+', line=63, column=48)
Token(type='ARITOP', value='+', line=63, column=49)
Token(type='PARCLOSE', value=')', line=63, column=50)
Token(type='BRACEOPEN', value='{', line=63, column=52)
Token(type='ID', value='uint8_t', line=64, column=12)
Token(type='ID', value='some_value', line=64, column=20)
Token(type='ASSIGN', value='=', line=64, column=31)
Token(type='ID', value='i', line=64, column=33)
Token(type='END', value=';', line=64, column=34)
Token(type='ID', value='uint8_t', line=66, column=12)
Token(type='ID', value='retreived_value', line=66, column=20)
Token(type='ASSIGN', value='=', line=66, column=36)
Token(type='ID', value='ext_ram', line=66, column=38)
Token(type='BRACKOPEN', value='[', line=66, column=45)
Token(type='ID', value='i', line=66, column=46)
Token(type='BRACKCLOSE', value=']', line=66, column=47)
Token(type='END', value=';', line=66, column=48)
Token(type='IF', value='if', line=68, column=12)
Token(type='PAROPEN', value='(', line=68, column=15)
Token(type='ID', value='retreived_value', line=68, column=16)
Token(type='ASSIGN', value='=', line=68, column=33)
Token(type='ID', value='some_value', line=68, column=35)
Token(type='PARCLOSE', value=')', line=68, column=45)
Token(type='BRACEOPEN', value='{', line=68, column=47)
Token(type='ID', value='printf', line=69, column=16)
Token(type='PAROPEN', value='(', line=69, column=22)
Token(type='STRING', value='Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n', line=69, column=85)
Token(type='LISTSEP', value=',', line=69, column=86)
Token(type='ID', value='i', line=69, column=88)
Token(type='LISTSEP', value=',', line=69, column=89)
Token(type='ID', value='retreived_value', line=69, column=91)
Token(type='LISTSEP', value=',', line=69, column=106)
Token(type='ID', value='some_value', line=69, column=108)
Token(type='PARCLOSE', value=')', line=69, column=118)
Token(type='END', value=';', line=69, column=119)
Token(type='ID', value='retrieval_errors', line=70, column=16)
Token(type='ARITOP', value='+', line=70, column=32)
Token(type='ARITOP', value='+', line=70, column=33)
Token(type='END', value=';', line=70, column=34)
Token(type='BRACECLOSE', value='}', line=71, column=12)
Token(type='BRACECLOSE', value='}', line=72, column=8)
Token(type='ID', value='printf', line=73, column=8)
Token(type='PAROPEN', value='(', line=73, column=14)
Token(type='STRING', value='SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n', line=73, column=108)
Token(type='LISTSEP', value=',', line=73, column=109)
Token(type='ID', value='write_errors', line=73, column=111)
Token(type='LISTSEP', value=',', line=73, column=123)
Token(type='ID', value='retrieval_errors', line=73, column=125)
Token(type='PARCLOSE', value=')', line=73, column=141)
Token(type='END', value=';', line=73, column=142)
Token(type='BRACECLOSE', value='}', line=74, column=0)
Token(type='ID', value='void', line=77, column=0)
Token(type='ID', value='test_slider', line=77, column=5)
Token(type='PAROPEN', value='(', line=77, column=16)
Token(type='ID', value='void', line=77, column=17)
Token(type='PARCLOSE', value=')', line=77, column=21)
Token(type='BRACEOPEN', value='{', line=77, column=22)
Token(type='ID', value='uint8_t', line=78, column=4)
Token(type='ID', value='right', line=78, column=12)
Token(type='ASSIGN', value='=', line=78, column=18)
Token(type='ID', value='read_right_slider', line=78, column=20)
Token(type='PAROPEN', value='(', line=78, column=37)
Token(type='PARCLOSE', value=')', line=78, column=38)
Token(type='END', value=';', line=78, column=39)
Token(type='ID', value='uint8_t', line=79, column=4)
Token(type='ID', value='left', line=79, column=12)
Token(type='ASSIGN', value='=', line=79, column=17)
Token(type='ID', value='read_left_slider', line=79, column=19)
Token(type='PAROPEN', value='(', line=79, column=35)
Token(type='PARCLOSE', value=')', line=79, column=36)
Token(type='END', value=';', line=79, column=37)
Token(type='ID', value='printf', line=80, column=4)
Token(type='PAROPEN', value='(', line=80, column=10)
Token(type='STRING', value='\\033\\143', line=80, column=20)
Token(type='PARCLOSE', value=')', line=80, column=21)
Token(type='END', value=';', line=80, column=22)
Token(type='ID', value='printf', line=81, column=4)
Token(type='PAROPEN', value='(', line=81, column=10)
Token(type='STRING', value='Right, left: %d %d', line=81, column=30)
Token(type='LISTSEP', value=',', line=81, column=31)
Token(type='ID', value='right', line=81, column=32)
Token(type='LISTSEP', value=',', line=81, column=37)
Token(type='ID', value='left', line=81, column=38)
Token(type='PARCLOSE', value=')', line=81, column=42)
Token(type='END', value=';', line=81, column=43)
Token(type='ID', value='_delay_ms', line=82, column=4)
Token(type='PAROPEN', value='(', line=82, column=13)
Token(type='NUMBER', value=20, line=82, column=14)
Token(type='PARCLOSE', value=')', line=82, column=16)
Token(type='END', value=';', line=82, column=17)
Token(type='BRACECLOSE', value='}', line=83, column=0)
Token(type='ID', value='void', line=85, column=0)
Token(type='ID', value='test_OLED_positioning', line=85, column=5)
Token(type='PAROPEN', value='(', line=85, column=26)
Token(type='PARCLOSE', value=')', line=85, column=27)
Token(type='BRACEOPEN', value='{', line=85, column=28)
Token(type='ID', value='char', line=86, column=4)
Token(type='ID', value='string', line=86, column=9)
Token(type='BRACKOPEN', value='[', line=86, column=15)
Token(type='BRACKCLOSE', value=']', line=86, column=16)
Token(type='ASSIGN', value='=', line=86, column=18)
Token(type='STRING', value=' Hei, verden', line=86, column=33)
Token(type='END', value=';', line=86, column=34)
Token(type='FOR', value='for', line=87, column=4)
Token(type='PAROPEN', value='(', line=87, column=7)
Token(type='ID', value='int', line=87, column=8)
Token(type='ID', value='i', line=87, column=12)
Token(type='ASSIGN', value='=', line=87, column=14)
Token(type='NUMBER', value=0, line=87, column=16)
Token(type='END', value=';', line=87, column=17)
Token(type='ID', value='i', line=87, column=19)
Token(type='ARITOP', value='<', line=87, column=21)
Token(type='NUMBER', value=8, line=87, column=23)
Token(type='END', value=';', line=87, column=24)
Token(type='ID', value='i', line=87, column=26)
Token(type='ARITOP', value='+', line=87, column=27)
Token(type='ARITOP', value='+', line=87, column=28)
Token(type='PARCLOSE', value=')', line=87, column=29)
Token(type='BRACEOPEN', value='{', line=87, column=30)
Token(type='ID', value='OLED_goto_line', line=88, column=8)
Token(type='PAROPEN', value='(', line=88, column=22)
Token(type='ID', value='i', line=88, column=23)
Token(type='PARCLOSE', value=')', line=88, column=24)
Token(type='END', value=';', line=88, column=25)
Token(type='ID', value='OLED_goto_column', line=89, column=8)
Token(type='PAROPEN', value='(', line=89, column=24)
Token(type='NUMBER', value=10, line=89, column=25)
Token(type='ARITOP', value='*', line=89, column=27)
Token(type='ID', value='i', line=89, column=28)
Token(type='PARCLOSE', value=')', line=89, column=29)
Token(type='END', value=';', line=89, column=30)
Token(type='ID', value='OLED_write_string', line=90, column=8)
Token(type='PAROPEN', value='(', line=90, column=25)
Token(type='ID', value='string', line=90, column=26)
Token(type='LISTSEP', value=',', line=90, column=32)
Token(type='NUMBER', value=5, line=90, column=33)
Token(type='LISTSEP', value=',', line=90, column=34)
Token(type='NUMBER', value=1, line=90, column=35)
Token(type='PARCLOSE', value=')', line=90, column=36)
Token(type='END', value=';', line=90, column=37)
Token(type='ID', value='_delay_ms', line=92, column=8)
Token(type='PAROPEN', value='(', line=92, column=17)
Token(type='NUMBER', value=250, line=92, column=18)
Token(type='PARCLOSE', value=')', line=92, column=21)
Token(type='END', value=';', line=92, column=22)
Token(type='BRACECLOSE', value='}', line=93, column=4)
Token(type='ID', value='OLED_home', line=94, column=4)
Token(type='PAROPEN', value='(', line=94, column=13)
Token(type='PARCLOSE', value=')', line=94, column=14)
Token(type='END', value=';', line=94, column=15)
Token(type='ID', value='OLED_clear_line', line=95, column=4)
Token(type='PAROPEN', value='(', line=95, column=19)
Token(type='NUMBER', value=0, line=95, column=20)
Token(type='PARCLOSE', value=')', line=95, column=21)
Token(type='END', value=';', line=95, column=22)
Token(type='ID', value='OLED_goto_line', line=96, column=4)
Token(type='PAROPEN', value='(', line=96, column=18)
Token(type='NUMBER', value=0, line=96, column=19)
Token(type='PARCLOSE', value=')', line=96, column=20)
Token(type='END', value=';', line=96, column=21)
Token(type='ID', value='OLED_write_string', line=97, column=4)
Token(type='PAROPEN', value='(', line=97, column=21)
Token(type='STRING', value='test1', line=97, column=28)
Token(type='LISTSEP', value=',', line=97, column=29)
Token(type='NUMBER', value=5, line=97, column=30)
Token(type='LISTSEP', value=',', line=97, column=31)
Token(type='NUMBER', value=1, line=97, column=32)
Token(type='PARCLOSE', value=')', line=97, column=33)
Token(type='END', value=';', line=97, column=34)
Token(type='ID', value='OLED_clear_line', line=98, column=4)
Token(type='PAROPEN', value='(', line=98, column=19)
Token(type='NUMBER', value=5, line=98, column=20)
Token(type='PARCLOSE', value=')', line=98, column=21)
Token(type='END', value=';', line=98, column=22)
Token(type='ID', value='OLED_pos', line=99, column=4)
Token(type='PAROPEN', value='(', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=13)
Token(type='ID', value='char', line=99, column=14)
Token(type='PARCLOSE', value=')', line=99, column=18)
Token(type='NUMBER', value=5, line=99, column=20)
Token(type='LISTSEP', value=',', line=99, column=21)
Token(type='PAROPEN', value='(', line=99, column=23)
Token(type='ID', value='char', line=99, column=24)
Token(type='PARCLOSE', value=')', line=99, column=28)
Token(type='NUMBER', value=60, line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='END', value=';', line=99, column=33)
Token(type='ID', value='OLED_write_string', line=100, column=4)
Token(type='PAROPEN', value='(', line=100, column=21)
Token(type='STRING', value='test2', line=100, column=28)
Token(type='LISTSEP', value=',', line=100, column=29)
Token(type='NUMBER', value=5, line=100, column=30)
Token(type='LISTSEP', value=',', line=100, column=31)
Token(type='NUMBER', value=1, line=100, column=32)
Token(type='PARCLOSE', value=')', line=100, column=33)
Token(type='END', value=';', line=100, column=34)
Token(type='BRACECLOSE', value='}', line=102, column=0)
Token(type='ID', value='void', line=105, column=0)
Token(type='ID', value='read_adc_output_test', line=105, column=5)
Token(type='PAROPEN', value='(', line=105, column=25)
Token(type='ID', value='void', line=105, column=26)
Token(type='PARCLOSE', value=')', line=105, column=30)
Token(type='BRACEOPEN', value='{', line=105, column=31)
Token(type='ID', value='uint8_t', line=106, column=3)
Token(type='ID', value='x_value', line=106, column=11)
Token(type='ASSIGN', value='=', line=106, column=19)
Token(type='ID', value='x_channel_adc_read', line=106, column=21)
Token(type='PAROPEN', value='(', line=106, column=39)
Token(type='PARCLOSE', value=')', line=106, column=40)
Token(type='END', value=';', line=106, column=41)
Token(type='ID', value='printf', line=107, column=4)
Token(type='PAROPEN', value='(', line=107, column=10)
Token(type='STRING', value='X channel value: %d \\n', line=107, column=34)
Token(type='LISTSEP', value=',', line=107, column=35)
Token(type='ID', value='x_value', line=107, column=37)
Token(type='PARCLOSE', value=')', line=107, column=44)
Token(type='END', value=';', line=107, column=45)
Token(type='ID', value='uint8_t', line=108, column=5)
Token(type='ID', value='y_value', line=108, column=13)
Token(type='ASSIGN', value='=', line=108, column=21)
Token(type='ID', value='y_channel_adc_read', line=108, column=23)
Token(type='PAROPEN', value='(', line=108, column=41)
Token(type='PARCLOSE', value=')', line=108, column=42)
Token(type='END', value=';', line=108, column=43)
Token(type='ID', value='printf', line=109, column=4)
Token(type='PAROPEN', value='(', line=109, column=10)
Token(type='STRING', value='Y channel value: %d \\n', line=109, column=34)
Token(type='LISTSEP', value=',', line=109, column=35)
Token(type='ID', value='y_value', line=109, column=37)
Token(type='PARCLOSE', value=')', line=109, column=44)
Token(type='END', value=';', line=109, column=45)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='void', line=112, column=0)
Token(type='ID', value='bitwise_print', line=112, column=5)
Token(type='PAROPEN', value='(', line=112, column=18)
Token(type='ID', value='char', line=112, column=19)
Token(type='ID', value='data', line=112, column=24)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='char', line=112, column=30)
Token(type='ARITOP', value='*', line=112, column=35)
Token(type='ID', value='p', line=112, column=36)
Token(type='PARCLOSE', value=')', line=112, column=37)
Token(type='BRACEOPEN', value='{', line=112, column=38)
Token(type='ID', value='char', line=113, column=4)
Token(type='ID', value='binary', line=113, column=9)
Token(type='END', value=';', line=113, column=15)
Token(type='FOR', value='for', line=114, column=4)
Token(type='PAROPEN', value='(', line=114, column=7)
Token(type='ID', value='int', line=114, column=8)
Token(type='ID', value='i', line=114, column=12)
Token(type='ASSIGN', value='=', line=114, column=14)
Token(type='NUMBER', value=0, line=114, column=16)
Token(type='END', value=';', line=114, column=17)
Token(type='ID', value='i', line=114, column=19)
Token(type='ARITOP', value='<', line=114, column=21)
Token(type='NUMBER', value=8, line=114, column=23)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='i', line=114, column=26)
Token(type='ARITOP', value='+', line=114, column=27)
Token(type='ARITOP', value='+', line=114, column=28)
Token(type='PARCLOSE', value=')', line=114, column=29)
Token(type='BRACEOPEN', value='{', line=114, column=30)
Token(type='ID', value='binary', line=115, column=8)
Token(type='ASSIGN', value='=', line=115, column=15)
Token(type='ID', value='data', line=115, column=17)
Token(type='BITWOP', value='&', line=115, column=22)
Token(type='PAROPEN', value='(', line=115, column=23)
Token(type='NUMBER', value=1, line=115, column=25)
Token(type='BITWOP', value='<<', line=115, column=27)
Token(type='ID', value='i', line=115, column=30)
Token(type='PARCLOSE', value=')', line=115, column=31)
Token(type='END', value=';', line=115, column=32)
Token(type='IF', value='if', line=116, column=8)
Token(type='PAROPEN', value='(', line=116, column=10)
Token(type='ID', value='binary', line=116, column=11)
Token(type='PARCLOSE', value=')', line=116, column=17)
Token(type='BRACEOPEN', value='{', line=116, column=18)
Token(type='ID', value='p', line=117, column=12)
Token(type='BRACKOPEN', value='[', line=117, column=13)
Token(type='ID', value='i', line=117, column=14)
Token(type='BRACKCLOSE', value=']', line=117, column=15)
Token(type='ASSIGN', value='=', line=117, column=17)
Token(type='NUMBER', value=61, line=117, column=19)
Token(type='END', value=';', line=117, column=21)
Token(type='BRACECLOSE', value='}', line=118, column=8)
Token(type='ELSE', value='else', line=118, column=9)
Token(type='BRACEOPEN', value='{', line=118, column=13)
Token(type='ID', value='p', line=119, column=12)
Token(type='BRACKOPEN', value='[', line=119, column=13)
Token(type='ID', value='i', line=119, column=14)
Token(type='BRACKCLOSE', value=']', line=119, column=15)
Token(type='ASSIGN', value='=', line=119, column=17)
Token(type='NUMBER', value=60, line=119, column=19)
Token(type='END', value=';', line=119, column=21)
Token(type='BRACECLOSE', value='}', line=120, column=8)
Token(type='BRACECLOSE', value='}', line=121, column=4)
Token(type='ID', value='p', line=122, column=4)
Token(type='BRACKOPEN', value='[', line=122, column=5)
Token(type='NUMBER', value=8, line=122, column=6)
Token(type='BRACKCLOSE', value=']', line=122, column=7)
Token(type='ASSIGN', value='=', line=122, column=8)
Token(type='CHAR', value='0', line=122, column=12)
Token(type='END', value=';', line=122, column=13)
Token(type='BRACECLOSE', value='}', line=123, column=0)
Token(type='ID', value='void', line=125, column=0)
Token(type='ID', value='print_can_message', line=125, column=5)
Token(type='PAROPEN', value='(', line=125, column=22)
Token(type='ID', value='can_message', line=125, column=23)
Token(type='ARITOP', value='*', line=125, column=35)
Token(type='ID', value='rec', line=125, column=36)
Token(type='PARCLOSE', value=')', line=125, column=39)
Token(type='BRACEOPEN', value='{', line=125, column=40)
Token(type='ID', value='printf', line=126, column=4)
Token(type='PAROPEN', value='(', line=126, column=10)
Token(type='STRING', value='ID =%x\\n', line=126, column=20)
Token(type='LISTSEP', value=',', line=126, column=21)
Token(type='ID', value='rec', line=126, column=23)
Token(type='MEMBER', value='->', line=126, column=26)
Token(type='ID', value='id', line=126, column=28)
Token(type='PARCLOSE', value=')', line=126, column=30)
Token(type='END', value=';', line=126, column=31)
Token(type='ID', value='printf', line=127, column=4)
Token(type='PAROPEN', value='(', line=127, column=10)
Token(type='STRING', value='Data length = %d \\n', line=127, column=31)
Token(type='LISTSEP', value=',', line=127, column=32)
Token(type='ID', value='rec', line=127, column=34)
Token(type='MEMBER', value='->', line=127, column=37)
Token(type='ID', value='data_length', line=127, column=39)
Token(type='PARCLOSE', value=')', line=127, column=50)
Token(type='END', value=';', line=127, column=51)
Token(type='FOR', value='for', line=128, column=4)
Token(type='PAROPEN', value='(', line=128, column=7)
Token(type='ID', value='int', line=128, column=8)
Token(type='ID', value='i', line=128, column=12)
Token(type='ASSIGN', value='=', line=128, column=14)
Token(type='NUMBER', value=0, line=128, column=16)
Token(type='END', value=';', line=128, column=17)
Token(type='ID', value='i', line=128, column=19)
Token(type='ARITOP', value='<', line=128, column=21)
Token(type='ID', value='rec', line=128, column=23)
Token(type='MEMBER', value='->', line=128, column=26)
Token(type='ID', value='data_length', line=128, column=28)
Token(type='LOGOP', value='&&', line=128, column=40)
Token(type='PAROPEN', value='(', line=128, column=43)
Token(type='ID', value='i', line=128, column=44)
Token(type='ARITOP', value='<', line=128, column=46)
Token(type='NUMBER', value=8, line=128, column=48)
Token(type='PARCLOSE', value=')', line=128, column=49)
Token(type='END', value=';', line=128, column=50)
Token(type='ID', value='i', line=128, column=52)
Token(type='ARITOP', value='+', line=128, column=53)
Token(type='ARITOP', value='+', line=128, column=54)
Token(type='PARCLOSE', value=')', line=128, column=55)
Token(type='BRACEOPEN', value='{', line=128, column=56)
Token(type='ID', value='printf', line=129, column=8)
Token(type='PAROPEN', value='(', line=129, column=14)
Token(type='STRING', value='d[%d] = %d\\n', line=129, column=28)
Token(type='LISTSEP', value=',', line=129, column=29)
Token(type='ID', value='i', line=129, column=31)
Token(type='LISTSEP', value=',', line=129, column=32)
Token(type='PAROPEN', value='(', line=129, column=34)
Token(type='ID', value='char', line=129, column=35)
Token(type='PARCLOSE', value=')', line=129, column=39)
Token(type='ID', value='rec', line=129, column=41)
Token(type='MEMBER', value='->', line=129, column=44)
Token(type='ID', value='data', line=129, column=46)
Token(type='BRACKOPEN', value='[', line=129, column=50)
Token(type='ID', value='i', line=129, column=51)
Token(type='BRACKCLOSE', value=']', line=129, column=52)
Token(type='PARCLOSE', value=')', line=129, column=53)
Token(type='END', value=';', line=129, column=54)
Token(type='BRACECLOSE', value='}', line=130, column=4)
Token(type='BRACECLOSE', value='}', line=131, column=0)
