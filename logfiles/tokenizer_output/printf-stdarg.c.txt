Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
Token(type='PREPROC', value='#include <stdarg.h>', line=23, column=0)
Token(type='PREPROC', value='#include "uart.h"', line=24, column=0)
Token(type='ID', value='static', line=28, column=0)
Token(type='ID', value='void', line=28, column=7)
Token(type='ID', value='printchar', line=28, column=12)
Token(type='PAROPEN', value='(', line=28, column=21)
Token(type='ID', value='char', line=28, column=22)
Token(type='ARITOP', value='*', line=28, column=27)
Token(type='ARITOP', value='*', line=28, column=28)
Token(type='ID', value='str', line=28, column=29)
Token(type='LISTSEP', value=',', line=28, column=32)
Token(type='ID', value='int', line=28, column=34)
Token(type='ID', value='c', line=28, column=38)
Token(type='PARCLOSE', value=')', line=28, column=39)
Token(type='BRACEOPEN', value='{', line=29, column=0)
Token(type='PAROPEN', value='(', line=30, column=1)
Token(type='ID', value='void', line=30, column=2)
Token(type='PARCLOSE', value=')', line=30, column=6)
Token(type='ID', value='uart_putchar', line=30, column=8)
Token(type='PAROPEN', value='(', line=30, column=20)
Token(type='ID', value='c', line=30, column=21)
Token(type='PARCLOSE', value=')', line=30, column=22)
Token(type='END', value=';', line=30, column=23)
Token(type='BRACECLOSE', value='}', line=31, column=0)
Token(type='PREPROC', value='#define PAD_RIGHT 1', line=33, column=0)
Token(type='PREPROC', value='#define PAD_ZERO 2', line=34, column=0)
Token(type='ID', value='static', line=36, column=0)
Token(type='ID', value='int', line=36, column=7)
Token(type='ID', value='prints', line=36, column=11)
Token(type='PAROPEN', value='(', line=36, column=17)
Token(type='ID', value='char', line=36, column=18)
Token(type='ARITOP', value='*', line=36, column=23)
Token(type='ARITOP', value='*', line=36, column=24)
Token(type='ID', value='out', line=36, column=25)
Token(type='LISTSEP', value=',', line=36, column=28)
Token(type='ID', value='const', line=36, column=30)
Token(type='ID', value='char', line=36, column=36)
Token(type='ARITOP', value='*', line=36, column=41)
Token(type='ID', value='string', line=36, column=42)
Token(type='LISTSEP', value=',', line=36, column=48)
Token(type='ID', value='int', line=36, column=50)
Token(type='ID', value='width', line=36, column=54)
Token(type='LISTSEP', value=',', line=36, column=59)
Token(type='ID', value='int', line=36, column=61)
Token(type='ID', value='pad', line=36, column=65)
Token(type='PARCLOSE', value=')', line=36, column=68)
Token(type='BRACEOPEN', value='{', line=37, column=0)
Token(type='ID', value='register', line=38, column=1)
Token(type='ID', value='int', line=38, column=10)
Token(type='ID', value='pc', line=38, column=14)
Token(type='ASSIGN', value='=', line=38, column=17)
Token(type='NUMBER', value=0, line=38, column=19)
Token(type='LISTSEP', value=',', line=38, column=20)
Token(type='ID', value='padchar', line=38, column=22)
Token(type='ASSIGN', value='=', line=38, column=30)
Token(type='CHAR', value=' ', line=38, column=34)
Token(type='END', value=';', line=38, column=35)
Token(type='IF', value='if', line=40, column=1)
Token(type='PAROPEN', value='(', line=40, column=4)
Token(type='ID', value='width', line=40, column=5)
Token(type='ARITOP', value='>', line=40, column=11)
Token(type='NUMBER', value=0, line=40, column=13)
Token(type='PARCLOSE', value=')', line=40, column=14)
Token(type='BRACEOPEN', value='{', line=40, column=16)
Token(type='ID', value='register', line=41, column=2)
Token(type='ID', value='int', line=41, column=11)
Token(type='ID', value='len', line=41, column=15)
Token(type='ASSIGN', value='=', line=41, column=19)
Token(type='NUMBER', value=0, line=41, column=21)
Token(type='END', value=';', line=41, column=22)
Token(type='ID', value='register', line=42, column=2)
Token(type='ID', value='const', line=42, column=11)
Token(type='ID', value='char', line=42, column=17)
Token(type='ARITOP', value='*', line=42, column=22)
Token(type='ID', value='ptr', line=42, column=23)
Token(type='END', value=';', line=42, column=26)
Token(type='FOR', value='for', line=43, column=2)
Token(type='PAROPEN', value='(', line=43, column=6)
Token(type='ID', value='ptr', line=43, column=7)
Token(type='ASSIGN', value='=', line=43, column=11)
Token(type='ID', value='string', line=43, column=13)
Token(type='END', value=';', line=43, column=19)
Token(type='ARITOP', value='*', line=43, column=21)
Token(type='ID', value='ptr', line=43, column=22)
Token(type='END', value=';', line=43, column=25)
Token(type='ARITOP', value='+', line=43, column=27)
Token(type='ARITOP', value='+', line=43, column=28)
Token(type='ID', value='ptr', line=43, column=29)
Token(type='PARCLOSE', value=')', line=43, column=32)
Token(type='ARITOP', value='+', line=43, column=34)
Token(type='ARITOP', value='+', line=43, column=35)
Token(type='ID', value='len', line=43, column=36)
Token(type='END', value=';', line=43, column=39)
Token(type='IF', value='if', line=44, column=2)
Token(type='PAROPEN', value='(', line=44, column=5)
Token(type='ID', value='len', line=44, column=6)
Token(type='LOGOP', value='>=', line=44, column=10)
Token(type='ID', value='width', line=44, column=13)
Token(type='PARCLOSE', value=')', line=44, column=18)
Token(type='ID', value='width', line=44, column=20)
Token(type='ASSIGN', value='=', line=44, column=26)
Token(type='NUMBER', value=0, line=44, column=28)
Token(type='END', value=';', line=44, column=29)
Token(type='ELSE', value='else', line=45, column=2)
Token(type='ID', value='width', line=45, column=7)
Token(type='ARITOP', value='-', line=45, column=13)
Token(type='ASSIGN', value='=', line=45, column=14)
Token(type='ID', value='len', line=45, column=16)
Token(type='END', value=';', line=45, column=19)
Token(type='IF', value='if', line=46, column=2)
Token(type='PAROPEN', value='(', line=46, column=5)
Token(type='ID', value='pad', line=46, column=6)
Token(type='BITWOP', value='&', line=46, column=10)
Token(type='ID', value='PAD_ZERO', line=46, column=12)
Token(type='PARCLOSE', value=')', line=46, column=20)
Token(type='ID', value='padchar', line=46, column=22)
Token(type='ASSIGN', value='=', line=46, column=30)
Token(type='CHAR', value='0', line=46, column=34)
Token(type='END', value=';', line=46, column=35)
Token(type='BRACECLOSE', value='}', line=47, column=1)
Token(type='IF', value='if', line=48, column=1)
Token(type='PAROPEN', value='(', line=48, column=4)
Token(type='PAROPEN', value='(', line=48, column=6)
Token(type='ID', value='pad', line=48, column=7)
Token(type='BITWOP', value='&', line=48, column=11)
Token(type='ID', value='PAD_RIGHT', line=48, column=13)
Token(type='PARCLOSE', value=')', line=48, column=22)
Token(type='PARCLOSE', value=')', line=48, column=23)
Token(type='BRACEOPEN', value='{', line=48, column=25)
Token(type='FOR', value='for', line=49, column=2)
Token(type='PAROPEN', value='(', line=49, column=6)
Token(type='END', value=';', line=49, column=8)
Token(type='ID', value='width', line=49, column=10)
Token(type='ARITOP', value='>', line=49, column=16)
Token(type='NUMBER', value=0, line=49, column=18)
Token(type='END', value=';', line=49, column=19)
Token(type='ARITOP', value='-', line=49, column=21)
Token(type='ARITOP', value='-', line=49, column=22)
Token(type='ID', value='width', line=49, column=23)
Token(type='PARCLOSE', value=')', line=49, column=28)
Token(type='BRACEOPEN', value='{', line=49, column=30)
Token(type='ID', value='printchar', line=50, column=3)
Token(type='PAROPEN', value='(', line=50, column=13)
Token(type='ID', value='out', line=50, column=14)
Token(type='LISTSEP', value=',', line=50, column=17)
Token(type='ID', value='padchar', line=50, column=19)
Token(type='PARCLOSE', value=')', line=50, column=26)
Token(type='END', value=';', line=50, column=27)
Token(type='ARITOP', value='+', line=51, column=3)
Token(type='ARITOP', value='+', line=51, column=4)
Token(type='ID', value='pc', line=51, column=5)
Token(type='END', value=';', line=51, column=7)
Token(type='BRACECLOSE', value='}', line=52, column=2)
Token(type='BRACECLOSE', value='}', line=53, column=1)
Token(type='FOR', value='for', line=54, column=1)
Token(type='PAROPEN', value='(', line=54, column=5)
Token(type='END', value=';', line=54, column=7)
Token(type='ARITOP', value='*', line=54, column=9)
Token(type='ID', value='string', line=54, column=10)
Token(type='END', value=';', line=54, column=17)
Token(type='ARITOP', value='+', line=54, column=19)
Token(type='ARITOP', value='+', line=54, column=20)
Token(type='ID', value='string', line=54, column=21)
Token(type='PARCLOSE', value=')', line=54, column=27)
Token(type='BRACEOPEN', value='{', line=54, column=29)
Token(type='ID', value='printchar', line=55, column=2)
Token(type='PAROPEN', value='(', line=55, column=12)
Token(type='ID', value='out', line=55, column=13)
Token(type='LISTSEP', value=',', line=55, column=16)
Token(type='ARITOP', value='*', line=55, column=18)
Token(type='ID', value='string', line=55, column=19)
Token(type='PARCLOSE', value=')', line=55, column=25)
Token(type='END', value=';', line=55, column=26)
Token(type='ARITOP', value='+', line=56, column=2)
Token(type='ARITOP', value='+', line=56, column=3)
Token(type='ID', value='pc', line=56, column=4)
Token(type='END', value=';', line=56, column=6)
Token(type='BRACECLOSE', value='}', line=57, column=1)
Token(type='FOR', value='for', line=58, column=1)
Token(type='PAROPEN', value='(', line=58, column=5)
Token(type='END', value=';', line=58, column=7)
Token(type='ID', value='width', line=58, column=9)
Token(type='ARITOP', value='>', line=58, column=15)
Token(type='NUMBER', value=0, line=58, column=17)
Token(type='END', value=';', line=58, column=18)
Token(type='ARITOP', value='-', line=58, column=20)
Token(type='ARITOP', value='-', line=58, column=21)
Token(type='ID', value='width', line=58, column=22)
Token(type='PARCLOSE', value=')', line=58, column=27)
Token(type='BRACEOPEN', value='{', line=58, column=29)
Token(type='ID', value='printchar', line=59, column=2)
Token(type='PAROPEN', value='(', line=59, column=12)
Token(type='ID', value='out', line=59, column=13)
Token(type='LISTSEP', value=',', line=59, column=16)
Token(type='ID', value='padchar', line=59, column=18)
Token(type='PARCLOSE', value=')', line=59, column=25)
Token(type='END', value=';', line=59, column=26)
Token(type='ARITOP', value='+', line=60, column=2)
Token(type='ARITOP', value='+', line=60, column=3)
Token(type='ID', value='pc', line=60, column=4)
Token(type='END', value=';', line=60, column=6)
Token(type='BRACECLOSE', value='}', line=61, column=1)
Token(type='ID', value='return', line=63, column=1)
Token(type='ID', value='pc', line=63, column=8)
Token(type='END', value=';', line=63, column=10)
Token(type='BRACECLOSE', value='}', line=64, column=0)
Token(type='PREPROC', value='#define PRINT_BUF_LEN 12', line=67, column=0)
Token(type='ID', value='static', line=69, column=0)
Token(type='ID', value='int', line=69, column=7)
Token(type='ID', value='printi', line=69, column=11)
Token(type='PAROPEN', value='(', line=69, column=17)
Token(type='ID', value='char', line=69, column=18)
Token(type='ARITOP', value='*', line=69, column=23)
Token(type='ARITOP', value='*', line=69, column=24)
Token(type='ID', value='out', line=69, column=25)
Token(type='LISTSEP', value=',', line=69, column=28)
Token(type='ID', value='int', line=69, column=30)
Token(type='ID', value='i', line=69, column=34)
Token(type='LISTSEP', value=',', line=69, column=35)
Token(type='ID', value='int', line=69, column=37)
Token(type='ID', value='b', line=69, column=41)
Token(type='LISTSEP', value=',', line=69, column=42)
Token(type='ID', value='int', line=69, column=44)
Token(type='ID', value='sg', line=69, column=48)
Token(type='LISTSEP', value=',', line=69, column=50)
Token(type='ID', value='int', line=69, column=52)
Token(type='ID', value='width', line=69, column=56)
Token(type='LISTSEP', value=',', line=69, column=61)
Token(type='ID', value='int', line=69, column=63)
Token(type='ID', value='pad', line=69, column=67)
Token(type='LISTSEP', value=',', line=69, column=70)
Token(type='ID', value='int', line=69, column=72)
Token(type='ID', value='letbase', line=69, column=76)
Token(type='PARCLOSE', value=')', line=69, column=83)
Token(type='BRACEOPEN', value='{', line=70, column=0)
Token(type='ID', value='char', line=71, column=1)
Token(type='ID', value='print_buf', line=71, column=6)
Token(type='BRACKOPEN', value='[', line=71, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=71, column=16)
Token(type='BRACKCLOSE', value=']', line=71, column=29)
Token(type='END', value=';', line=71, column=30)
Token(type='ID', value='register', line=72, column=1)
Token(type='ID', value='char', line=72, column=10)
Token(type='ARITOP', value='*', line=72, column=15)
Token(type='ID', value='s', line=72, column=16)
Token(type='END', value=';', line=72, column=17)
Token(type='ID', value='register', line=73, column=1)
Token(type='ID', value='int', line=73, column=10)
Token(type='ID', value='t', line=73, column=14)
Token(type='LISTSEP', value=',', line=73, column=15)
Token(type='ID', value='neg', line=73, column=17)
Token(type='ASSIGN', value='=', line=73, column=21)
Token(type='NUMBER', value=0, line=73, column=23)
Token(type='LISTSEP', value=',', line=73, column=24)
Token(type='ID', value='pc', line=73, column=26)
Token(type='ASSIGN', value='=', line=73, column=29)
Token(type='NUMBER', value=0, line=73, column=31)
Token(type='END', value=';', line=73, column=32)
Token(type='ID', value='register', line=74, column=1)
Token(type='ID', value='unsigned', line=74, column=10)
Token(type='ID', value='int', line=74, column=19)
Token(type='ID', value='u', line=74, column=23)
Token(type='ASSIGN', value='=', line=74, column=25)
Token(type='ID', value='i', line=74, column=27)
Token(type='END', value=';', line=74, column=28)
Token(type='IF', value='if', line=76, column=1)
Token(type='PAROPEN', value='(', line=76, column=4)
Token(type='ID', value='i', line=76, column=5)
Token(type='ASSIGN', value='=', line=76, column=7)
Token(type='ASSIGN', value='=', line=76, column=8)
Token(type='NUMBER', value=0, line=76, column=10)
Token(type='PARCLOSE', value=')', line=76, column=11)
Token(type='BRACEOPEN', value='{', line=76, column=13)
Token(type='ID', value='print_buf', line=77, column=2)
Token(type='BRACKOPEN', value='[', line=77, column=11)
Token(type='NUMBER', value=0, line=77, column=12)
Token(type='BRACKCLOSE', value=']', line=77, column=13)
Token(type='ASSIGN', value='=', line=77, column=15)
Token(type='CHAR', value='0', line=77, column=19)
Token(type='END', value=';', line=77, column=20)
Token(type='ID', value='print_buf', line=78, column=2)
Token(type='BRACKOPEN', value='[', line=78, column=11)
Token(type='NUMBER', value=1, line=78, column=12)
Token(type='BRACKCLOSE', value=']', line=78, column=13)
Token(type='ASSIGN', value='=', line=78, column=15)
Token(type='CHAR', value='0', line=78, column=20)
Token(type='END', value=';', line=78, column=21)
Token(type='ID', value='return', line=79, column=2)
Token(type='ID', value='prints', line=79, column=9)
Token(type='PAROPEN', value='(', line=79, column=16)
Token(type='ID', value='out', line=79, column=17)
Token(type='LISTSEP', value=',', line=79, column=20)
Token(type='ID', value='print_buf', line=79, column=22)
Token(type='LISTSEP', value=',', line=79, column=31)
Token(type='ID', value='width', line=79, column=33)
Token(type='LISTSEP', value=',', line=79, column=38)
Token(type='ID', value='pad', line=79, column=40)
Token(type='PARCLOSE', value=')', line=79, column=43)
Token(type='END', value=';', line=79, column=44)
Token(type='BRACECLOSE', value='}', line=80, column=1)
Token(type='IF', value='if', line=82, column=1)
Token(type='PAROPEN', value='(', line=82, column=4)
Token(type='ID', value='sg', line=82, column=5)
Token(type='LOGOP', value='&&', line=82, column=8)
Token(type='ID', value='b', line=82, column=11)
Token(type='ASSIGN', value='=', line=82, column=13)
Token(type='ASSIGN', value='=', line=82, column=14)
Token(type='NUMBER', value=10, line=82, column=16)
Token(type='LOGOP', value='&&', line=82, column=19)
Token(type='ID', value='i', line=82, column=22)
Token(type='ARITOP', value='<', line=82, column=24)
Token(type='NUMBER', value=0, line=82, column=26)
Token(type='PARCLOSE', value=')', line=82, column=27)
Token(type='BRACEOPEN', value='{', line=82, column=29)
Token(type='ID', value='neg', line=83, column=2)
Token(type='ASSIGN', value='=', line=83, column=6)
Token(type='NUMBER', value=1, line=83, column=8)
Token(type='END', value=';', line=83, column=9)
Token(type='ID', value='u', line=84, column=2)
Token(type='ASSIGN', value='=', line=84, column=4)
Token(type='ARITOP', value='-', line=84, column=6)
Token(type='ID', value='i', line=84, column=7)
Token(type='END', value=';', line=84, column=8)
Token(type='BRACECLOSE', value='}', line=85, column=1)
Token(type='ID', value='s', line=87, column=1)
Token(type='ASSIGN', value='=', line=87, column=3)
Token(type='ID', value='print_buf', line=87, column=5)
Token(type='ARITOP', value='+', line=87, column=15)
Token(type='ID', value='PRINT_BUF_LEN', line=87, column=17)
Token(type='ARITOP', value='-', line=87, column=30)
Token(type='NUMBER', value=1, line=87, column=31)
Token(type='END', value=';', line=87, column=32)
Token(type='ARITOP', value='*', line=88, column=1)
Token(type='ID', value='s', line=88, column=2)
Token(type='ASSIGN', value='=', line=88, column=4)
Token(type='CHAR', value='0', line=88, column=9)
Token(type='END', value=';', line=88, column=10)
Token(type='ID', value='while', line=90, column=1)
Token(type='PAROPEN', value='(', line=90, column=7)
Token(type='ID', value='u', line=90, column=8)
Token(type='PARCLOSE', value=')', line=90, column=9)
Token(type='BRACEOPEN', value='{', line=90, column=11)
Token(type='ID', value='t', line=91, column=2)
Token(type='ASSIGN', value='=', line=91, column=4)
Token(type='ID', value='u', line=91, column=6)
Token(type='ID', value='b', line=91, column=10)
Token(type='END', value=';', line=91, column=11)
Token(type='IF', value='if', line=92, column=2)
Token(type='PAROPEN', value='(', line=92, column=4)
Token(type='ID', value='t', line=92, column=6)
Token(type='LOGOP', value='>=', line=92, column=8)
Token(type='NUMBER', value=10, line=92, column=11)
Token(type='PARCLOSE', value=')', line=92, column=14)
Token(type='ID', value='t', line=93, column=3)
Token(type='ARITOP', value='+', line=93, column=5)
Token(type='ASSIGN', value='=', line=93, column=6)
Token(type='ID', value='letbase', line=93, column=8)
Token(type='ARITOP', value='-', line=93, column=16)
Token(type='CHAR', value='0', line=93, column=20)
Token(type='ARITOP', value='-', line=93, column=22)
Token(type='NUMBER', value=10, line=93, column=24)
Token(type='END', value=';', line=93, column=26)
Token(type='ARITOP', value='*', line=94, column=2)
Token(type='ARITOP', value='-', line=94, column=3)
Token(type='ARITOP', value='-', line=94, column=4)
Token(type='ID', value='s', line=94, column=5)
Token(type='ASSIGN', value='=', line=94, column=7)
Token(type='ID', value='t', line=94, column=9)
Token(type='ARITOP', value='+', line=94, column=11)
Token(type='CHAR', value='0', line=94, column=15)
Token(type='END', value=';', line=94, column=16)
Token(type='ID', value='u', line=95, column=2)
Token(type='ARITOP', value='/', line=95, column=4)
Token(type='ASSIGN', value='=', line=95, column=5)
Token(type='ID', value='b', line=95, column=7)
Token(type='END', value=';', line=95, column=8)
Token(type='BRACECLOSE', value='}', line=96, column=1)
Token(type='IF', value='if', line=98, column=1)
Token(type='PAROPEN', value='(', line=98, column=4)
Token(type='ID', value='neg', line=98, column=5)
Token(type='PARCLOSE', value=')', line=98, column=8)
Token(type='BRACEOPEN', value='{', line=98, column=10)
Token(type='IF', value='if', line=99, column=2)
Token(type='PAROPEN', value='(', line=99, column=4)
Token(type='ID', value='width', line=99, column=6)
Token(type='LOGOP', value='&&', line=99, column=12)
Token(type='PAROPEN', value='(', line=99, column=15)
Token(type='ID', value='pad', line=99, column=16)
Token(type='BITWOP', value='&', line=99, column=20)
Token(type='ID', value='PAD_ZERO', line=99, column=22)
Token(type='PARCLOSE', value=')', line=99, column=30)
Token(type='PARCLOSE', value=')', line=99, column=32)
Token(type='BRACEOPEN', value='{', line=99, column=34)
Token(type='ID', value='printchar', line=100, column=3)
Token(type='PAROPEN', value='(', line=100, column=13)
Token(type='ID', value='out', line=100, column=14)
Token(type='LISTSEP', value=',', line=100, column=17)
Token(type='CHAR', value='-', line=100, column=21)
Token(type='PARCLOSE', value=')', line=100, column=22)
Token(type='END', value=';', line=100, column=23)
Token(type='ARITOP', value='+', line=101, column=3)
Token(type='ARITOP', value='+', line=101, column=4)
Token(type='ID', value='pc', line=101, column=5)
Token(type='END', value=';', line=101, column=7)
Token(type='ARITOP', value='-', line=102, column=3)
Token(type='ARITOP', value='-', line=102, column=4)
Token(type='ID', value='width', line=102, column=5)
Token(type='END', value=';', line=102, column=10)
Token(type='BRACECLOSE', value='}', line=103, column=2)
Token(type='ELSE', value='else', line=104, column=2)
Token(type='BRACEOPEN', value='{', line=104, column=7)
Token(type='ARITOP', value='*', line=105, column=3)
Token(type='ARITOP', value='-', line=105, column=4)
Token(type='ARITOP', value='-', line=105, column=5)
Token(type='ID', value='s', line=105, column=6)
Token(type='ASSIGN', value='=', line=105, column=8)
Token(type='CHAR', value='-', line=105, column=12)
Token(type='END', value=';', line=105, column=13)
Token(type='BRACECLOSE', value='}', line=106, column=2)
Token(type='BRACECLOSE', value='}', line=107, column=1)
Token(type='ID', value='return', line=109, column=1)
Token(type='ID', value='pc', line=109, column=8)
Token(type='ARITOP', value='+', line=109, column=11)
Token(type='ID', value='prints', line=109, column=13)
Token(type='PAROPEN', value='(', line=109, column=20)
Token(type='ID', value='out', line=109, column=21)
Token(type='LISTSEP', value=',', line=109, column=24)
Token(type='ID', value='s', line=109, column=26)
Token(type='LISTSEP', value=',', line=109, column=27)
Token(type='ID', value='width', line=109, column=29)
Token(type='LISTSEP', value=',', line=109, column=34)
Token(type='ID', value='pad', line=109, column=36)
Token(type='PARCLOSE', value=')', line=109, column=39)
Token(type='END', value=';', line=109, column=40)
Token(type='BRACECLOSE', value='}', line=110, column=0)
Token(type='ID', value='static', line=112, column=0)
Token(type='ID', value='int', line=112, column=7)
Token(type='ID', value='print', line=112, column=11)
Token(type='PAROPEN', value='(', line=112, column=16)
Token(type='ID', value='char', line=112, column=18)
Token(type='ARITOP', value='*', line=112, column=23)
Token(type='ARITOP', value='*', line=112, column=24)
Token(type='ID', value='out', line=112, column=25)
Token(type='LISTSEP', value=',', line=112, column=28)
Token(type='ID', value='const', line=112, column=30)
Token(type='ID', value='char', line=112, column=36)
Token(type='ARITOP', value='*', line=112, column=41)
Token(type='ID', value='format', line=112, column=42)
Token(type='LISTSEP', value=',', line=112, column=48)
Token(type='ID', value='va_list', line=112, column=50)
Token(type='ID', value='args', line=112, column=58)
Token(type='PARCLOSE', value=')', line=112, column=63)
Token(type='BRACEOPEN', value='{', line=113, column=0)
Token(type='ID', value='register', line=114, column=1)
Token(type='ID', value='int', line=114, column=10)
Token(type='ID', value='width', line=114, column=14)
Token(type='LISTSEP', value=',', line=114, column=19)
Token(type='ID', value='pad', line=114, column=21)
Token(type='END', value=';', line=114, column=24)
Token(type='ID', value='register', line=115, column=1)
Token(type='ID', value='int', line=115, column=10)
Token(type='ID', value='pc', line=115, column=14)
Token(type='ASSIGN', value='=', line=115, column=17)
Token(type='NUMBER', value=0, line=115, column=19)
Token(type='END', value=';', line=115, column=20)
Token(type='ID', value='char', line=116, column=1)
Token(type='ID', value='scr', line=116, column=6)
Token(type='BRACKOPEN', value='[', line=116, column=9)
Token(type='NUMBER', value=2, line=116, column=10)
Token(type='BRACKCLOSE', value=']', line=116, column=11)
Token(type='END', value=';', line=116, column=12)
Token(type='FOR', value='for', line=118, column=1)
Token(type='PAROPEN', value='(', line=118, column=5)
Token(type='END', value=';', line=118, column=6)
Token(type='ARITOP', value='*', line=118, column=8)
Token(type='ID', value='format', line=118, column=9)
Token(type='ASSIGN', value='=', line=118, column=17)
Token(type='NUMBER', value=0, line=118, column=19)
Token(type='END', value=';', line=118, column=20)
Token(type='ARITOP', value='+', line=118, column=22)
Token(type='ARITOP', value='+', line=118, column=23)
Token(type='ID', value='format', line=118, column=24)
Token(type='PARCLOSE', value=')', line=118, column=30)
Token(type='BRACEOPEN', value='{', line=118, column=32)
Token(type='IF', value='if', line=119, column=2)
Token(type='PAROPEN', value='(', line=119, column=5)
Token(type='ARITOP', value='*', line=119, column=6)
Token(type='ID', value='format', line=119, column=7)
Token(type='ASSIGN', value='=', line=119, column=14)
Token(type='ASSIGN', value='=', line=119, column=15)
Token(type='CHAR', value='%', line=119, column=19)
Token(type='PARCLOSE', value=')', line=119, column=20)
Token(type='BRACEOPEN', value='{', line=119, column=22)
Token(type='ARITOP', value='+', line=120, column=3)
Token(type='ARITOP', value='+', line=120, column=4)
Token(type='ID', value='format', line=120, column=5)
Token(type='END', value=';', line=120, column=11)
Token(type='ID', value='width', line=121, column=3)
Token(type='ASSIGN', value='=', line=121, column=9)
Token(type='ID', value='pad', line=121, column=11)
Token(type='ASSIGN', value='=', line=121, column=15)
Token(type='NUMBER', value=0, line=121, column=17)
Token(type='END', value=';', line=121, column=18)
Token(type='IF', value='if', line=122, column=3)
Token(type='PAROPEN', value='(', line=122, column=6)
Token(type='ARITOP', value='*', line=122, column=7)
Token(type='ID', value='format', line=122, column=8)
Token(type='ASSIGN', value='=', line=122, column=15)
Token(type='ASSIGN', value='=', line=122, column=16)
Token(type='CHAR', value='0', line=122, column=21)
Token(type='PARCLOSE', value=')', line=122, column=22)
Token(type='ID', value='break', line=122, column=24)
Token(type='END', value=';', line=122, column=29)
Token(type='IF', value='if', line=123, column=3)
Token(type='PAROPEN', value='(', line=123, column=6)
Token(type='ARITOP', value='*', line=123, column=7)
Token(type='ID', value='format', line=123, column=8)
Token(type='ASSIGN', value='=', line=123, column=15)
Token(type='ASSIGN', value='=', line=123, column=16)
Token(type='CHAR', value='%', line=123, column=20)
Token(type='PARCLOSE', value=')', line=123, column=21)
Token(type='ID', value='goto', line=123, column=23)
Token(type='ID', value='out', line=123, column=28)
Token(type='END', value=';', line=123, column=31)
Token(type='IF', value='if', line=124, column=3)
Token(type='PAROPEN', value='(', line=124, column=6)
Token(type='ARITOP', value='*', line=124, column=7)
Token(type='ID', value='format', line=124, column=8)
Token(type='ASSIGN', value='=', line=124, column=15)
Token(type='ASSIGN', value='=', line=124, column=16)
Token(type='CHAR', value='-', line=124, column=20)
Token(type='PARCLOSE', value=')', line=124, column=21)
Token(type='BRACEOPEN', value='{', line=124, column=23)
Token(type='ARITOP', value='+', line=125, column=4)
Token(type='ARITOP', value='+', line=125, column=5)
Token(type='ID', value='format', line=125, column=6)
Token(type='END', value=';', line=125, column=12)
Token(type='ID', value='pad', line=126, column=4)
Token(type='ASSIGN', value='=', line=126, column=8)
Token(type='ID', value='PAD_RIGHT', line=126, column=10)
Token(type='END', value=';', line=126, column=19)
Token(type='BRACECLOSE', value='}', line=127, column=3)
Token(type='ID', value='while', line=128, column=3)
Token(type='PAROPEN', value='(', line=128, column=9)
Token(type='ARITOP', value='*', line=128, column=10)
Token(type='ID', value='format', line=128, column=11)
Token(type='ASSIGN', value='=', line=128, column=18)
Token(type='ASSIGN', value='=', line=128, column=19)
Token(type='CHAR', value='0', line=128, column=23)
Token(type='PARCLOSE', value=')', line=128, column=24)
Token(type='BRACEOPEN', value='{', line=128, column=26)
Token(type='ARITOP', value='+', line=129, column=4)
Token(type='ARITOP', value='+', line=129, column=5)
Token(type='ID', value='format', line=129, column=6)
Token(type='END', value=';', line=129, column=12)
Token(type='ID', value='pad', line=130, column=4)
Token(type='ASSIGN', value='|=', line=130, column=8)
Token(type='ID', value='PAD_ZERO', line=130, column=11)
Token(type='END', value=';', line=130, column=19)
Token(type='BRACECLOSE', value='}', line=131, column=3)
Token(type='FOR', value='for', line=132, column=3)
Token(type='PAROPEN', value='(', line=132, column=7)
Token(type='END', value=';', line=132, column=9)
Token(type='ARITOP', value='*', line=132, column=11)
Token(type='ID', value='format', line=132, column=12)
Token(type='LOGOP', value='>=', line=132, column=19)
Token(type='CHAR', value='0', line=132, column=24)
Token(type='LOGOP', value='&&', line=132, column=26)
Token(type='ARITOP', value='*', line=132, column=29)
Token(type='ID', value='format', line=132, column=30)
Token(type='LOGOP', value='<=', line=132, column=37)
Token(type='CHAR', value='9', line=132, column=42)
Token(type='END', value=';', line=132, column=43)
Token(type='ARITOP', value='+', line=132, column=45)
Token(type='ARITOP', value='+', line=132, column=46)
Token(type='ID', value='format', line=132, column=47)
Token(type='PARCLOSE', value=')', line=132, column=53)
Token(type='BRACEOPEN', value='{', line=132, column=55)
Token(type='ID', value='width', line=133, column=4)
Token(type='ARITOP', value='*', line=133, column=10)
Token(type='ASSIGN', value='=', line=133, column=11)
Token(type='NUMBER', value=10, line=133, column=13)
Token(type='END', value=';', line=133, column=15)
Token(type='ID', value='width', line=134, column=4)
Token(type='ARITOP', value='+', line=134, column=10)
Token(type='ASSIGN', value='=', line=134, column=11)
Token(type='ARITOP', value='*', line=134, column=13)
Token(type='ID', value='format', line=134, column=14)
Token(type='ARITOP', value='-', line=134, column=21)
Token(type='CHAR', value='0', line=134, column=25)
Token(type='END', value=';', line=134, column=26)
Token(type='BRACECLOSE', value='}', line=135, column=3)
Token(type='IF', value='if', line=136, column=3)
Token(type='PAROPEN', value='(', line=136, column=5)
Token(type='ARITOP', value='*', line=136, column=7)
Token(type='ID', value='format', line=136, column=8)
Token(type='ASSIGN', value='=', line=136, column=15)
Token(type='ASSIGN', value='=', line=136, column=16)
Token(type='CHAR', value='s', line=136, column=20)
Token(type='PARCLOSE', value=')', line=136, column=22)
Token(type='BRACEOPEN', value='{', line=136, column=24)
Token(type='ID', value='register', line=137, column=4)
Token(type='ID', value='char', line=137, column=13)
Token(type='ARITOP', value='*', line=137, column=18)
Token(type='ID', value='s', line=137, column=19)
Token(type='ASSIGN', value='=', line=137, column=21)
Token(type='PAROPEN', value='(', line=137, column=23)
Token(type='ID', value='char', line=137, column=24)
Token(type='ARITOP', value='*', line=137, column=29)
Token(type='PARCLOSE', value=')', line=137, column=30)
Token(type='ID', value='va_arg', line=137, column=31)
Token(type='PAROPEN', value='(', line=137, column=37)
Token(type='ID', value='args', line=137, column=39)
Token(type='LISTSEP', value=',', line=137, column=43)
Token(type='ID', value='int', line=137, column=45)
Token(type='PARCLOSE', value=')', line=137, column=49)
Token(type='END', value=';', line=137, column=50)
Token(type='ID', value='pc', line=138, column=4)
Token(type='ARITOP', value='+', line=138, column=7)
Token(type='ASSIGN', value='=', line=138, column=8)
Token(type='ID', value='prints', line=138, column=10)
Token(type='PAROPEN', value='(', line=138, column=17)
Token(type='ID', value='out', line=138, column=18)
Token(type='LISTSEP', value=',', line=138, column=21)
Token(type='ID', value='s', line=138, column=23)
Token(type='ID', value='s', line=138, column=25)
Token(type='ARITOP', value=':', line=138, column=26)
Token(type='STRING', value='(null)', line=138, column=34)
Token(type='LISTSEP', value=',', line=138, column=35)
Token(type='ID', value='width', line=138, column=37)
Token(type='LISTSEP', value=',', line=138, column=42)
Token(type='ID', value='pad', line=138, column=44)
Token(type='PARCLOSE', value=')', line=138, column=47)
Token(type='END', value=';', line=138, column=48)
Token(type='ID', value='continue', line=139, column=4)
Token(type='END', value=';', line=139, column=12)
Token(type='BRACECLOSE', value='}', line=140, column=3)
Token(type='IF', value='if', line=141, column=3)
Token(type='PAROPEN', value='(', line=141, column=5)
Token(type='ARITOP', value='*', line=141, column=7)
Token(type='ID', value='format', line=141, column=8)
Token(type='ASSIGN', value='=', line=141, column=15)
Token(type='ASSIGN', value='=', line=141, column=16)
Token(type='CHAR', value='d', line=141, column=20)
Token(type='PARCLOSE', value=')', line=141, column=22)
Token(type='BRACEOPEN', value='{', line=141, column=24)
Token(type='ID', value='pc', line=142, column=4)
Token(type='ARITOP', value='+', line=142, column=7)
Token(type='ASSIGN', value='=', line=142, column=8)
Token(type='ID', value='printi', line=142, column=10)
Token(type='PAROPEN', value='(', line=142, column=17)
Token(type='ID', value='out', line=142, column=18)
Token(type='LISTSEP', value=',', line=142, column=21)
Token(type='ID', value='va_arg', line=142, column=23)
Token(type='PAROPEN', value='(', line=142, column=29)
Token(type='ID', value='args', line=142, column=31)
Token(type='LISTSEP', value=',', line=142, column=35)
Token(type='ID', value='int', line=142, column=37)
Token(type='PARCLOSE', value=')', line=142, column=41)
Token(type='LISTSEP', value=',', line=142, column=42)
Token(type='NUMBER', value=10, line=142, column=44)
Token(type='LISTSEP', value=',', line=142, column=46)
Token(type='NUMBER', value=1, line=142, column=48)
Token(type='LISTSEP', value=',', line=142, column=49)
Token(type='ID', value='width', line=142, column=51)
Token(type='LISTSEP', value=',', line=142, column=56)
Token(type='ID', value='pad', line=142, column=58)
Token(type='LISTSEP', value=',', line=142, column=61)
Token(type='CHAR', value='a', line=142, column=65)
Token(type='PARCLOSE', value=')', line=142, column=66)
Token(type='END', value=';', line=142, column=67)
Token(type='ID', value='continue', line=143, column=4)
Token(type='END', value=';', line=143, column=12)
Token(type='BRACECLOSE', value='}', line=144, column=3)
Token(type='IF', value='if', line=145, column=3)
Token(type='PAROPEN', value='(', line=145, column=5)
Token(type='ARITOP', value='*', line=145, column=7)
Token(type='ID', value='format', line=145, column=8)
Token(type='ASSIGN', value='=', line=145, column=15)
Token(type='ASSIGN', value='=', line=145, column=16)
Token(type='CHAR', value='x', line=145, column=20)
Token(type='PARCLOSE', value=')', line=145, column=22)
Token(type='BRACEOPEN', value='{', line=145, column=24)
Token(type='ID', value='pc', line=146, column=4)
Token(type='ARITOP', value='+', line=146, column=7)
Token(type='ASSIGN', value='=', line=146, column=8)
Token(type='ID', value='printi', line=146, column=10)
Token(type='PAROPEN', value='(', line=146, column=17)
Token(type='ID', value='out', line=146, column=18)
Token(type='LISTSEP', value=',', line=146, column=21)
Token(type='ID', value='va_arg', line=146, column=23)
Token(type='PAROPEN', value='(', line=146, column=29)
Token(type='ID', value='args', line=146, column=31)
Token(type='LISTSEP', value=',', line=146, column=35)
Token(type='ID', value='int', line=146, column=37)
Token(type='PARCLOSE', value=')', line=146, column=41)
Token(type='LISTSEP', value=',', line=146, column=42)
Token(type='NUMBER', value=16, line=146, column=44)
Token(type='LISTSEP', value=',', line=146, column=46)
Token(type='NUMBER', value=0, line=146, column=48)
Token(type='LISTSEP', value=',', line=146, column=49)
Token(type='ID', value='width', line=146, column=51)
Token(type='LISTSEP', value=',', line=146, column=56)
Token(type='ID', value='pad', line=146, column=58)
Token(type='LISTSEP', value=',', line=146, column=61)
Token(type='CHAR', value='a', line=146, column=65)
Token(type='PARCLOSE', value=')', line=146, column=66)
Token(type='END', value=';', line=146, column=67)
Token(type='ID', value='continue', line=147, column=4)
Token(type='END', value=';', line=147, column=12)
Token(type='BRACECLOSE', value='}', line=148, column=3)
Token(type='IF', value='if', line=149, column=3)
Token(type='PAROPEN', value='(', line=149, column=5)
Token(type='ARITOP', value='*', line=149, column=7)
Token(type='ID', value='format', line=149, column=8)
Token(type='ASSIGN', value='=', line=149, column=15)
Token(type='ASSIGN', value='=', line=149, column=16)
Token(type='CHAR', value='X', line=149, column=20)
Token(type='PARCLOSE', value=')', line=149, column=22)
Token(type='BRACEOPEN', value='{', line=149, column=24)
Token(type='ID', value='pc', line=150, column=4)
Token(type='ARITOP', value='+', line=150, column=7)
Token(type='ASSIGN', value='=', line=150, column=8)
Token(type='ID', value='printi', line=150, column=10)
Token(type='PAROPEN', value='(', line=150, column=17)
Token(type='ID', value='out', line=150, column=18)
Token(type='LISTSEP', value=',', line=150, column=21)
Token(type='ID', value='va_arg', line=150, column=23)
Token(type='PAROPEN', value='(', line=150, column=29)
Token(type='ID', value='args', line=150, column=31)
Token(type='LISTSEP', value=',', line=150, column=35)
Token(type='ID', value='int', line=150, column=37)
Token(type='PARCLOSE', value=')', line=150, column=41)
Token(type='LISTSEP', value=',', line=150, column=42)
Token(type='NUMBER', value=16, line=150, column=44)
Token(type='LISTSEP', value=',', line=150, column=46)
Token(type='NUMBER', value=0, line=150, column=48)
Token(type='LISTSEP', value=',', line=150, column=49)
Token(type='ID', value='width', line=150, column=51)
Token(type='LISTSEP', value=',', line=150, column=56)
Token(type='ID', value='pad', line=150, column=58)
Token(type='LISTSEP', value=',', line=150, column=61)
Token(type='CHAR', value='A', line=150, column=65)
Token(type='PARCLOSE', value=')', line=150, column=66)
Token(type='END', value=';', line=150, column=67)
Token(type='ID', value='continue', line=151, column=4)
Token(type='END', value=';', line=151, column=12)
Token(type='BRACECLOSE', value='}', line=152, column=3)
Token(type='IF', value='if', line=153, column=3)
Token(type='PAROPEN', value='(', line=153, column=5)
Token(type='ARITOP', value='*', line=153, column=7)
Token(type='ID', value='format', line=153, column=8)
Token(type='ASSIGN', value='=', line=153, column=15)
Token(type='ASSIGN', value='=', line=153, column=16)
Token(type='CHAR', value='u', line=153, column=20)
Token(type='PARCLOSE', value=')', line=153, column=22)
Token(type='BRACEOPEN', value='{', line=153, column=24)
Token(type='ID', value='pc', line=154, column=4)
Token(type='ARITOP', value='+', line=154, column=7)
Token(type='ASSIGN', value='=', line=154, column=8)
Token(type='ID', value='printi', line=154, column=10)
Token(type='PAROPEN', value='(', line=154, column=17)
Token(type='ID', value='out', line=154, column=18)
Token(type='LISTSEP', value=',', line=154, column=21)
Token(type='ID', value='va_arg', line=154, column=23)
Token(type='PAROPEN', value='(', line=154, column=29)
Token(type='ID', value='args', line=154, column=31)
Token(type='LISTSEP', value=',', line=154, column=35)
Token(type='ID', value='int', line=154, column=37)
Token(type='PARCLOSE', value=')', line=154, column=41)
Token(type='LISTSEP', value=',', line=154, column=42)
Token(type='NUMBER', value=10, line=154, column=44)
Token(type='LISTSEP', value=',', line=154, column=46)
Token(type='NUMBER', value=0, line=154, column=48)
Token(type='LISTSEP', value=',', line=154, column=49)
Token(type='ID', value='width', line=154, column=51)
Token(type='LISTSEP', value=',', line=154, column=56)
Token(type='ID', value='pad', line=154, column=58)
Token(type='LISTSEP', value=',', line=154, column=61)
Token(type='CHAR', value='a', line=154, column=65)
Token(type='PARCLOSE', value=')', line=154, column=66)
Token(type='END', value=';', line=154, column=67)
Token(type='ID', value='continue', line=155, column=4)
Token(type='END', value=';', line=155, column=12)
Token(type='BRACECLOSE', value='}', line=156, column=3)
Token(type='IF', value='if', line=157, column=3)
Token(type='PAROPEN', value='(', line=157, column=5)
Token(type='ARITOP', value='*', line=157, column=7)
Token(type='ID', value='format', line=157, column=8)
Token(type='ASSIGN', value='=', line=157, column=15)
Token(type='ASSIGN', value='=', line=157, column=16)
Token(type='CHAR', value='c', line=157, column=20)
Token(type='PARCLOSE', value=')', line=157, column=22)
Token(type='BRACEOPEN', value='{', line=157, column=24)
Token(type='ID', value='scr', line=159, column=4)
Token(type='BRACKOPEN', value='[', line=159, column=7)
Token(type='NUMBER', value=0, line=159, column=8)
Token(type='BRACKCLOSE', value=']', line=159, column=9)
Token(type='ASSIGN', value='=', line=159, column=11)
Token(type='PAROPEN', value='(', line=159, column=13)
Token(type='ID', value='char', line=159, column=14)
Token(type='PARCLOSE', value=')', line=159, column=18)
Token(type='ID', value='va_arg', line=159, column=19)
Token(type='PAROPEN', value='(', line=159, column=25)
Token(type='ID', value='args', line=159, column=27)
Token(type='LISTSEP', value=',', line=159, column=31)
Token(type='ID', value='int', line=159, column=33)
Token(type='PARCLOSE', value=')', line=159, column=37)
Token(type='END', value=';', line=159, column=38)
Token(type='ID', value='scr', line=160, column=4)
Token(type='BRACKOPEN', value='[', line=160, column=7)
Token(type='NUMBER', value=1, line=160, column=8)
Token(type='BRACKCLOSE', value=']', line=160, column=9)
Token(type='ASSIGN', value='=', line=160, column=11)
Token(type='CHAR', value='0', line=160, column=16)
Token(type='END', value=';', line=160, column=17)
Token(type='ID', value='pc', line=161, column=4)
Token(type='ARITOP', value='+', line=161, column=7)
Token(type='ASSIGN', value='=', line=161, column=8)
Token(type='ID', value='prints', line=161, column=10)
Token(type='PAROPEN', value='(', line=161, column=17)
Token(type='ID', value='out', line=161, column=18)
Token(type='LISTSEP', value=',', line=161, column=21)
Token(type='ID', value='scr', line=161, column=23)
Token(type='LISTSEP', value=',', line=161, column=26)
Token(type='ID', value='width', line=161, column=28)
Token(type='LISTSEP', value=',', line=161, column=33)
Token(type='ID', value='pad', line=161, column=35)
Token(type='PARCLOSE', value=')', line=161, column=38)
Token(type='END', value=';', line=161, column=39)
Token(type='ID', value='continue', line=162, column=4)
Token(type='END', value=';', line=162, column=12)
Token(type='BRACECLOSE', value='}', line=163, column=3)
Token(type='BRACECLOSE', value='}', line=164, column=2)
Token(type='ELSE', value='else', line=165, column=2)
Token(type='BRACEOPEN', value='{', line=165, column=7)
Token(type='ID', value='out', line=166, column=2)
Token(type='ARITOP', value=':', line=166, column=5)
Token(type='ID', value='printchar', line=167, column=3)
Token(type='PAROPEN', value='(', line=167, column=13)
Token(type='ID', value='out', line=167, column=14)
Token(type='LISTSEP', value=',', line=167, column=17)
Token(type='ARITOP', value='*', line=167, column=19)
Token(type='ID', value='format', line=167, column=20)
Token(type='PARCLOSE', value=')', line=167, column=26)
Token(type='END', value=';', line=167, column=27)
Token(type='ARITOP', value='+', line=168, column=3)
Token(type='ARITOP', value='+', line=168, column=4)
Token(type='ID', value='pc', line=168, column=5)
Token(type='END', value=';', line=168, column=7)
Token(type='BRACECLOSE', value='}', line=169, column=2)
Token(type='BRACECLOSE', value='}', line=170, column=1)
Token(type='IF', value='if', line=171, column=1)
Token(type='PAROPEN', value='(', line=171, column=4)
Token(type='ID', value='out', line=171, column=5)
Token(type='PARCLOSE', value=')', line=171, column=8)
Token(type='ARITOP', value='*', line=171, column=10)
Token(type='ARITOP', value='*', line=171, column=11)
Token(type='ID', value='out', line=171, column=12)
Token(type='ASSIGN', value='=', line=171, column=16)
Token(type='CHAR', value='0', line=171, column=21)
Token(type='END', value=';', line=171, column=22)
Token(type='ID', value='va_end', line=172, column=1)
Token(type='PAROPEN', value='(', line=172, column=7)
Token(type='ID', value='args', line=172, column=9)
Token(type='PARCLOSE', value=')', line=172, column=14)
Token(type='END', value=';', line=172, column=15)
Token(type='ID', value='return', line=173, column=1)
Token(type='ID', value='pc', line=173, column=8)
Token(type='END', value=';', line=173, column=10)
Token(type='BRACECLOSE', value='}', line=174, column=0)
Token(type='ID', value='int', line=176, column=0)
Token(type='ID', value='printf', line=176, column=4)
Token(type='PAROPEN', value='(', line=176, column=10)
Token(type='ID', value='const', line=176, column=11)
Token(type='ID', value='char', line=176, column=17)
Token(type='ARITOP', value='*', line=176, column=22)
Token(type='ID', value='format', line=176, column=23)
Token(type='LISTSEP', value=',', line=176, column=29)
Token(type='VARARG', value='...', line=176, column=31)
Token(type='PARCLOSE', value=')', line=176, column=34)
Token(type='BRACEOPEN', value='{', line=177, column=0)
Token(type='ID', value='va_list', line=178, column=8)
Token(type='ID', value='args', line=178, column=16)
Token(type='END', value=';', line=178, column=20)
Token(type='ID', value='va_start', line=180, column=8)
Token(type='PAROPEN', value='(', line=180, column=16)
Token(type='ID', value='args', line=180, column=18)
Token(type='LISTSEP', value=',', line=180, column=22)
Token(type='ID', value='format', line=180, column=24)
Token(type='PARCLOSE', value=')', line=180, column=31)
Token(type='END', value=';', line=180, column=32)
Token(type='ID', value='return', line=181, column=8)
Token(type='ID', value='print', line=181, column=15)
Token(type='PAROPEN', value='(', line=181, column=20)
Token(type='NUMBER', value=0, line=181, column=22)
Token(type='LISTSEP', value=',', line=181, column=23)
Token(type='ID', value='format', line=181, column=25)
Token(type='LISTSEP', value=',', line=181, column=31)
Token(type='ID', value='args', line=181, column=33)
Token(type='PARCLOSE', value=')', line=181, column=38)
Token(type='END', value=';', line=181, column=39)
Token(type='BRACECLOSE', value='}', line=182, column=0)
Token(type='ID', value='int', line=184, column=0)
Token(type='ID', value='sprintf', line=184, column=4)
Token(type='PAROPEN', value='(', line=184, column=11)
Token(type='ID', value='char', line=184, column=12)
Token(type='ARITOP', value='*', line=184, column=17)
Token(type='ID', value='out', line=184, column=18)
Token(type='LISTSEP', value=',', line=184, column=21)
Token(type='ID', value='const', line=184, column=23)
Token(type='ID', value='char', line=184, column=29)
Token(type='ARITOP', value='*', line=184, column=34)
Token(type='ID', value='format', line=184, column=35)
Token(type='LISTSEP', value=',', line=184, column=41)
Token(type='VARARG', value='...', line=184, column=43)
Token(type='PARCLOSE', value=')', line=184, column=46)
Token(type='BRACEOPEN', value='{', line=185, column=0)
Token(type='ID', value='va_list', line=186, column=8)
Token(type='ID', value='args', line=186, column=16)
Token(type='END', value=';', line=186, column=20)
Token(type='ID', value='va_start', line=188, column=8)
Token(type='PAROPEN', value='(', line=188, column=16)
Token(type='ID', value='args', line=188, column=18)
Token(type='LISTSEP', value=',', line=188, column=22)
Token(type='ID', value='format', line=188, column=24)
Token(type='PARCLOSE', value=')', line=188, column=31)
Token(type='END', value=';', line=188, column=32)
Token(type='ID', value='return', line=189, column=8)
Token(type='ID', value='print', line=189, column=15)
Token(type='PAROPEN', value='(', line=189, column=20)
Token(type='BITWOP', value='&', line=189, column=22)
Token(type='ID', value='out', line=189, column=23)
Token(type='LISTSEP', value=',', line=189, column=26)
Token(type='ID', value='format', line=189, column=28)
Token(type='LISTSEP', value=',', line=189, column=34)
Token(type='ID', value='args', line=189, column=36)
Token(type='PARCLOSE', value=')', line=189, column=41)
Token(type='END', value=';', line=189, column=42)
Token(type='BRACECLOSE', value='}', line=190, column=0)
Token(type='ID', value='int', line=193, column=0)
Token(type='ID', value='snprintf', line=193, column=4)
Token(type='PAROPEN', value='(', line=193, column=12)
Token(type='ID', value='char', line=193, column=14)
Token(type='ARITOP', value='*', line=193, column=19)
Token(type='ID', value='buf', line=193, column=20)
Token(type='LISTSEP', value=',', line=193, column=23)
Token(type='ID', value='unsigned', line=193, column=25)
Token(type='ID', value='int', line=193, column=34)
Token(type='ID', value='count', line=193, column=38)
Token(type='LISTSEP', value=',', line=193, column=43)
Token(type='ID', value='const', line=193, column=45)
Token(type='ID', value='char', line=193, column=51)
Token(type='ARITOP', value='*', line=193, column=56)
Token(type='ID', value='format', line=193, column=57)
Token(type='LISTSEP', value=',', line=193, column=63)
Token(type='VARARG', value='...', line=193, column=65)
Token(type='PARCLOSE', value=')', line=193, column=69)
Token(type='BRACEOPEN', value='{', line=194, column=0)
Token(type='ID', value='va_list', line=195, column=8)
Token(type='ID', value='args', line=195, column=16)
Token(type='END', value=';', line=195, column=20)
Token(type='PAROPEN', value='(', line=197, column=8)
Token(type='ID', value='void', line=197, column=10)
Token(type='PARCLOSE', value=')', line=197, column=15)
Token(type='ID', value='count', line=197, column=17)
Token(type='END', value=';', line=197, column=22)
Token(type='ID', value='va_start', line=199, column=8)
Token(type='PAROPEN', value='(', line=199, column=16)
Token(type='ID', value='args', line=199, column=18)
Token(type='LISTSEP', value=',', line=199, column=22)
Token(type='ID', value='format', line=199, column=24)
Token(type='PARCLOSE', value=')', line=199, column=31)
Token(type='END', value=';', line=199, column=32)
Token(type='ID', value='return', line=200, column=8)
Token(type='ID', value='print', line=200, column=15)
Token(type='PAROPEN', value='(', line=200, column=20)
Token(type='BITWOP', value='&', line=200, column=22)
Token(type='ID', value='buf', line=200, column=23)
Token(type='LISTSEP', value=',', line=200, column=26)
Token(type='ID', value='format', line=200, column=28)
Token(type='LISTSEP', value=',', line=200, column=34)
Token(type='ID', value='args', line=200, column=36)
Token(type='PARCLOSE', value=')', line=200, column=41)
Token(type='END', value=';', line=200, column=42)
Token(type='BRACECLOSE', value='}', line=201, column=0)
