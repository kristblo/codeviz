/home/kristian/byggern-nicer_code/misc.c
FunctionDef(name='test_latch', args=[['void']], rettype='void', signature=['void', 'test_latch', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[[1000.0]])])
FunctionDef(name='test_jtag', args=[[]], rettype='void', signature=['void', 'test_jtag', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']])])
FunctionDef(name='SRAM_test', args=[['void']], rettype='void', signature=['void', 'SRAM_test', 'void'], callees=[FunctionCall(name='printf', args=[['Starting SRAM test...\\n']]), FunctionCall(name='rand', args=[[]]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='printf', args=[['SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n'], ['write_errors'], ['retrieval_errors']])])
FunctionDef(name='test_slider', args=[['void']], rettype='void', signature=['void', 'test_slider', 'void'], callees=[FunctionCall(name='read_right_slider', args=[[]]), FunctionCall(name='read_left_slider', args=[[]]), FunctionCall(name='printf', args=[['\\033\\143']]), FunctionCall(name='printf', args=[['Right, left: %d %d'], ['right'], ['left']]), FunctionCall(name='_delay_ms', args=[[20]])])
FunctionDef(name='test_OLED_positioning', args=[[]], rettype='void', signature=['void', 'test_OLED_positioning', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[['i']]), FunctionCall(name='OLED_goto_column', args=[[10, '*', 'i']]), FunctionCall(name='OLED_write_string', args=[['string'], [5], [1]]), FunctionCall(name='_delay_ms', args=[[250]]), FunctionCall(name='OLED_home', args=[[]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_write_string', args=[['test1'], [5], [1]]), FunctionCall(name='OLED_clear_line', args=[[5]]), FunctionCall(name='OLED_pos', args=[['(', 'char', ')', 5], ['(', 'char', ')', 60]]), FunctionCall(name='OLED_write_string', args=[['test2'], [5], [1]])])
FunctionDef(name='read_adc_output_test', args=[['void']], rettype='void', signature=['void', 'read_adc_output_test', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['X channel value: %d \\n'], ['x_value']]), FunctionCall(name='y_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['Y channel value: %d \\n'], ['y_value']])])
FunctionDef(name='bitwise_print', args=[['char', 'data'], ['char', '*', 'p']], rettype='void', signature=['void', 'bitwise_print', 'char', 'char*'], callees=[])
FunctionDef(name='print_can_message', args=[['can_message', '*', 'rec']], rettype='void', signature=['void', 'print_can_message', 'can_message*'], callees=[FunctionCall(name='printf', args=[['ID =%x\\n'], ['rec', '->', 'id']]), FunctionCall(name='printf', args=[['Data length = %d \\n'], ['rec', '->', 'data_length']]), FunctionCall(name='printf', args=[['d[%d] = %d\\n'], ['i'], ['(', 'char', ')', 'rec', '->', 'data', '[', 'i', ']']])])
/home/kristian/byggern-nicer_code/main.c
FunctionDef(name='main', args=[['void']], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='UART_init', args=[['MYUBRR']]), FunctionCall(name='ADC_init', args=[[]]), FunctionCall(name='OLED_init', args=[[]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_print_start_screen', args=[[]]), FunctionCall(name='init_menu', args=[[]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='SPI_init', args=[[]]), FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='CAN_init', args=[[]])])
/home/kristian/byggern-nicer_code/UART_driver.h
/home/kristian/byggern-nicer_code/fonts.h
/home/kristian/byggern-nicer_code/includes.h
/home/kristian/byggern-nicer_code/OLED_driver.h
/home/kristian/byggern-nicer_code/adc_driver.c
FunctionDef(name='ADC_init', args=[['void']], rettype='void', signature=['void', 'ADC_init', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='x_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'x_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='y_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'y_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='get_joystick_positions', args=[['void']], rettype='joystick_positions_t', signature=['joystick_positions_t', 'get_joystick_positions', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='get_direction', args=[['void']], rettype='direction_t', signature=['direction_t', 'get_direction', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]])])
FunctionDef(name='read_left_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_left_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='read_right_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_right_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='direction_to_string', args=[['direction_t', 'dir']], rettype='char_p', signature=['char_p', 'direction_to_string', 'direction_t'], callees=[])
FunctionDef(name='get_right_button', args=[['void']], rettype='char', signature=['char', 'get_right_button', 'void'], callees=[])
FunctionDef(name='get_left_button', args=[['void']], rettype='char', signature=['char', 'get_left_button', 'void'], callees=[])
/home/kristian/byggern-nicer_code/UART_driver.c
FunctionDef(name='UART_init', args=[['unsigned', 'int', 'ubrr']], rettype='void', signature=['void', 'UART_init', 'unsignedint'], callees=[FunctionCall(name='fdevopen', args=[['put_char'], ['get_char']])])
FunctionDef(name='UART_transmit', args=[['unsigned', 'char', 'data']], rettype='void', signature=['void', 'UART_transmit', 'unsignedchar'], callees=[])
FunctionDef(name='UART_receive', args=[['void']], rettype='char', signature=['char', 'UART_receive', 'void'], callees=[])
FunctionDef(name='put_char', args=[['char', 'data'], ['FILE', '*', 'file']], rettype='int', signature=['int', 'put_char', 'char', 'FILE*'], callees=[FunctionCall(name='UART_transmit', args=[['r']]), FunctionCall(name='UART_transmit', args=[['data']])])
FunctionDef(name='get_char', args=[['FILE', '*', 'file']], rettype='int', signature=['int', 'get_char', 'FILE*'], callees=[])
/home/kristian/byggern-nicer_code/joystick_can.h
/home/kristian/byggern-nicer_code/CAN_driver.c
FunctionDef(name='ISR', args=[['INT0_vect']], rettype='#define CNF3 0b00101000', signature=['#define CNF3 0b00101000', 'ISR', 'void'], callees=[FunctionCall(name='cli', args=[[]]), FunctionCall(name='printf', args=[['vektor kjores\\n']]), FunctionCall(name='read_mcp_status', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='CAN_recieve', args=[['&', 'msg']]), FunctionCall(name='print_can_message', args=[['&', 'msg']]), FunctionCall(name='free', args=[['&', 'msg']]), FunctionCall(name='sei', args=[[]])])
FunctionDef(name='CAN_init', args=[[]], rettype='void', signature=['void', 'CAN_init', 'void'], callees=[FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 3], ['CNF1']]), FunctionCall(name='write_mcp', args=[['0b', 10110001], ['CNF2']]), FunctionCall(name='write_mcp', args=[['0x', 5], ['CNF3']]), FunctionCall(name='cli', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 1], ['MCP_CANINTE']]), FunctionCall(name='sei', args=[[]]), FunctionCall(name='write_mcp', args=[['0b', 1100000], ['(', 'char', ')', '&', 'RXB0', '->', 'CTRL']]), FunctionCall(name='mcp_bit_modify', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CANCTRL'], ['0b', 11100000], ['0b', 0]])])
FunctionDef(name='CAN_transmit', args=[['can_message', '*', 'm']], rettype='int', signature=['int', 'CAN_transmit', 'can_message*'], callees=[FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CTRL']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', 'm', '->', 'id', '>>', 3, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDH']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', '(', 'm', '->', 'id', '&', '0x', 7, ')', '<<', 5, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDL']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data_length'], ['(', 'char', ')', '&', 'TXB0', '->', 'DLC']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data', '[', 'i', ']'], ['(', 'char', ')', '0b', 110110, '+', 'i']]), FunctionCall(name='RTS', args=[['0x', 1]])])
FunctionDef(name='CAN_recieve', args=[['can_message', '*', 'msg']], rettype='int', signature=['int', 'CAN_recieve', 'can_message*'], callees=[FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDH']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDL']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'DLC']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '0b', 1100110, '+', 'i']]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']])])
FunctionDef(name='ISR', args=[['BADISR_vect']], rettype='}', signature=['}', 'ISR', 'void'], callees=[])
/home/kristian/byggern-nicer_code/mcp2515.h
/home/kristian/byggern-nicer_code/misc.h
/home/kristian/byggern-nicer_code/MCP2515_driver.c
FunctionDef(name='read_mcp', args=[['char', 'address']], rettype='char', signature=['char', 'read_mcp', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 3]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='write_mcp', args=[['char', 'data'], ['char', 'address']], rettype='char', signature=['char', 'write_mcp', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 2]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='RTS', args=[['unsigned', 'char', 'buffer_number']], rettype='void', signature=['void', 'RTS', 'unsignedchar'], callees=[FunctionCall(name='printf', args=[['Invalid format']]), FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['command']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='read_mcp_status', args=[[]], rettype='char', signature=['char', 'read_mcp_status', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'A0']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_reset', args=[[]], rettype='void', signature=['void', 'mcp_reset', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'C0']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_bit_modify', args=[['char', 'address'], ['char', 'mask'], ['char', 'data']], rettype='void', signature=['void', 'mcp_bit_modify', 'char', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 5]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['mask']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
/home/kristian/byggern-nicer_code/OLED_driver.c
FunctionDef(name='write_command_OLED', args=[['char', 'command']], rettype='void', signature=['void', 'write_command_OLED', 'char'], callees=[])
FunctionDef(name='OLED_clear', args=[['void']], rettype='void', signature=['void', 'OLED_clear', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='write_d', args=[['0x', 0]])])
FunctionDef(name='OLED_init', args=[['void']], rettype='void', signature=['void', 'OLED_init', 'void'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 'ae']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a1']]), FunctionCall(name='write_command_OLED', args=[['0x', 'da']]), FunctionCall(name='write_command_OLED', args=[['0x', 12]]), FunctionCall(name='write_command_OLED', args=[['0x', 'c8']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a8']]), FunctionCall(name='write_command_OLED', args=[['0x', 3, 'f']]), FunctionCall(name='write_command_OLED', args=[['0x', 'd5']]), FunctionCall(name='write_command_OLED', args=[['0x', 80]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['0x', 50]]), FunctionCall(name='write_command_OLED', args=[['0x', 'd9']]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 2]]), FunctionCall(name='write_command_OLED', args=[['0x', 'db']]), FunctionCall(name='write_command_OLED', args=[['0x', 30]]), FunctionCall(name='write_command_OLED', args=[['0x', 'ad']]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 'a4']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a6']]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']]), FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']])])
FunctionDef(name='OLED_print_start_screen', args=[[]], rettype='void', signature=['void', 'OLED_print_start_screen', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[3]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['CYBERPUNK 2077'], [8], [1]]), FunctionCall(name='OLED_goto_line', args=[[5]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['Press any button to start...'], [4], [1]]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[[250, '-', 'i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']])])
FunctionDef(name='write_d', args=[['char', 'data']], rettype='void', signature=['void', 'write_d', 'char'], callees=[])
FunctionDef(name='OLED_write_char', args=[['unsigned', 'char', 'karakter'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_char', 'unsignedchar', 'char', 'char'], callees=[FunctionCall(name='pgm_read_byte', args=[['&', 'font8', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font4', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font5', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']])])
FunctionDef(name='OLED_write_string', args=[['char', 'string', '[', ']'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_string', 'charstring[', 'char', 'char'], callees=[FunctionCall(name='OLED_write_char', args=[['string', '[', 'i', ']'], ['size'], ['invert']])])
FunctionDef(name='OLED_goto_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_goto_line', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['line']]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='OLED_goto_column', args=[[0]])])
FunctionDef(name='OLED_goto_column', args=[['char', 'column']], rettype='void', signature=['void', 'OLED_goto_column', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['column']]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']])])
FunctionDef(name='OLED_clear_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_clear_line', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='write_d', args=[['0x', 0]]), FunctionCall(name='OLED_goto_line', args=[['line']])])
FunctionDef(name='OLED_home', args=[[]], rettype='void', signature=['void', 'OLED_home', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]])])
FunctionDef(name='OLED_pos', args=[['char', 'row'], ['char', 'column']], rettype='void', signature=['void', 'OLED_pos', 'char', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['row']]), FunctionCall(name='OLED_goto_column', args=[['column']])])
/home/kristian/byggern-nicer_code/MCP2515_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.h
/home/kristian/byggern-nicer_code/menu.h
/home/kristian/byggern-nicer_code/joystick_can.c
FunctionDef(name='get_and_send_joystick_pos', args=[[]], rettype='void', signature=['void', 'get_and_send_joystick_pos', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['pos', '.', 'x'], ['pos', '.', 'y']]), FunctionCall(name='CAN_transmit', args=[['&', 'msg']])])
/home/kristian/byggern-nicer_code/menu.c
FunctionDef(name='init_menu', args=[['void']], rettype='void', signature=['void', 'init_menu', 'void'], callees=[FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']])])
FunctionDef(name='print_menu', args=[[]], rettype='void', signature=['void', 'print_menu', 'void'], callees=[FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [0]]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [1]])])
FunctionDef(name='menu_down', args=[[]], rettype='void', signature=['void', 'menu_down', 'void'], callees=[])
FunctionDef(name='menu_up', args=[[]], rettype='void', signature=['void', 'menu_up', 'void'], callees=[])
FunctionDef(name='menu_pos', args=[[]], rettype='Node_p', signature=['Node_p', 'menu_pos', 'void'], callees=[])
FunctionDef(name='menu_sub', args=[[]], rettype='void', signature=['void', 'menu_sub', 'void'], callees=[])
FunctionDef(name='menu_super', args=[[]], rettype='void', signature=['void', 'menu_super', 'void'], callees=[FunctionCall(name='get_head', args=[[]])])
FunctionDef(name='get_head', args=[[]], rettype='Node_p', signature=['Node_p', 'get_head', 'void'], callees=[])
/home/kristian/byggern-nicer_code/adc_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.c
FunctionDef(name='SPI_init', args=[['void']], rettype='void', signature=['void', 'SPI_init', 'void'], callees=[])
FunctionDef(name='SPI_send_and_rec', args=[['char', 'data']], rettype='char', signature=['char', 'SPI_send_and_rec', 'char'], callees=[])
FunctionDef(name='set_SS_low', args=[[]], rettype='void', signature=['void', 'set_SS_low', 'void'], callees=[])
FunctionDef(name='set_SS_high', args=[[]], rettype='void', signature=['void', 'set_SS_high', 'void'], callees=[])
/home/kristian/byggern-nicer_code/CAN_driver.h
/home/kristian/byggern-nicer_code/node2/main.c
FunctionDef(name='delay', args=[['int', 'd']], rettype='void', signature=['void', 'delay', 'int'], callees=[])
FunctionDef(name='main', args=[[]], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='configure_uart', args=[[]]), FunctionCall(name='SystemInit', args=[[]]), FunctionCall(name='printf', args=[['Hello World\\n\\r']]), FunctionCall(name='printf', args=[['Klokkestatus er: %x \\n'], ['clokk']]), FunctionCall(name='printf', args=[['Klokkehastighet er: %d \\n'], ['clfq']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='pwm_init', args=[[]]), FunctionCall(name='adc_init', args=[[]]), FunctionCall(name='tc_init', args=[[]]), FunctionCall(name='dacc_init', args=[[]]), FunctionCall(name='motor_init', args=[[]]), FunctionCall(name='PI_init', args=[['kp'], ['ki'], ['t']]), FunctionCall(name='dacc_write', args=[['0x', 0]]), FunctionCall(name='can_receive', args=[['msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='can_send', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Sending\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 1\\n \\r']]), FunctionCall(name='printf', args=[['One loop\\n\\r']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='printf', args=[['couldnt send\\n\\r']]), FunctionCall(name='printf', args=[['hei']]), FunctionCall(name='delay', args=[[1]]), FunctionCall(name='pwm_update_dc', args=[[2650, '+', 200, '*', 'i']]), FunctionCall(name='delay', args=[[100]]), FunctionCall(name='adc_read', args=[[]]), FunctionCall(name='dacc_write', args=[['0x', 0, 'FFF']]), FunctionCall(name='motor_joystick_to_encoder', args=[[255]]), FunctionCall(name='motor_read_encoder', args=[[]]), FunctionCall(name='can_receive', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='joystick_to_servo', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 0, ']']]), FunctionCall(name='motor_joystick_to_encoder', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['msg', '->', 'data', '[', 0, ']'], ['msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Sum of encoder values: %d \\n\\r'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Encoder %d \\n\\r'], ['motor_read_encoder', '(', ')']]), FunctionCall(name='motor_read_encoder', args=[[]])])
/home/kristian/byggern-nicer_code/node2/dacc_driver.h
/home/kristian/byggern-nicer_code/node2/can_controller.c
FunctionDef(name='can_init_def_tx_rx_mb', args=[['uint32_t', 'can_br']], rettype='uint8_t', signature=['uint8_t', 'can_init_def_tx_rx_mb', 'uint32_t'], callees=[])
FunctionDef(name='can_init', args=[['uint32_t', 'can_br'], ['uint8_t', 'num_tx_mb'], ['uint8_t', 'num_rx_mb']], rettype='uint8_t', signature=['uint8_t', 'can_init', 'uint32_t', 'uint8_t', 'uint8_t'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['ID_CAN0']])])
FunctionDef(name='can_send', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'tx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_send', 'CAN_MESSAGE*', 'uint8_t'], callees=[FunctionCall(name='CAN_MID_MIDvA', args=[['can_msg', '->', 'id']]), FunctionCall(name='printf', args=[['d[7] = %d\\n\\r'], ['can_msg', '->', 'data', '[', 7, ']']])])
FunctionDef(name='can_receive', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'rx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_receive', 'CAN_MESSAGE*', 'uint8_t'], callees=[])
/home/kristian/byggern-nicer_code/node2/tc_driver.h
/home/kristian/byggern-nicer_code/node2/can_interrupt.c
FunctionDef(name='CAN0_Handler', args=[['void']], rettype='void', signature=['void', 'CAN0_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['CAN0 interrupt\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'message'], [1]]), FunctionCall(name='can_receive', args=[['&', 'message'], [2]]), FunctionCall(name='printf', args=[['CAN0 message arrived in non-used mailbox\\n\\r']]), FunctionCall(name='printf', args=[['message id: %d\\n\\r'], ['message', '.', 'id']]), FunctionCall(name='printf', args=[['message data length: %d\\n\\r'], ['message', '.', 'data_length']]), FunctionCall(name='printf', args=[['%d '], ['message', '.', 'data', '[', 'i', ']']]), FunctionCall(name='printf', args=[['\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 MB0 ready to send \\n\\r']]), FunctionCall(name='printf', args=[['CAN0 ERRP error\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 timer overflow\\n\\r']]), FunctionCall(name='NVIC_ClearPendingIRQ', args=[['ID_CAN0']])])
/home/kristian/byggern-nicer_code/node2/can_interrupt.h
/home/kristian/byggern-nicer_code/node2/adc_driver.c
FunctionDef(name='adc_init', args=[[]], rettype='int', signature=['int', 'adc_init', 'void'], callees=[])
FunctionDef(name='adc_read', args=[[]], rettype='uint16_t', signature=['uint16_t', 'adc_read', 'void'], callees=[FunctionCall(name='printf', args=[['New goals! Total goals: %d\\n\\r'], ['goals']])])
FunctionDef(name='get_goals', args=[[]], rettype='uint8_t', signature=['uint8_t', 'get_goals', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/can_controller.h
/home/kristian/byggern-nicer_code/node2/motor_controller.c
FunctionDef(name='delay_micro', args=[['int', 'd']], rettype='void', signature=['void', 'delay_micro', 'int'], callees=[])
FunctionDef(name='motor_init', args=[['void']], rettype='void', signature=['void', 'motor_init', 'void'], callees=[])
FunctionDef(name='motor_read_encoder', args=[['void']], rettype='int16_t', signature=['int16_t', 'motor_read_encoder', 'void'], callees=[FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]])])
FunctionDef(name='PI_to_dacc', args=[['int16_t', 'padrag']], rettype='void', signature=['void', 'PI_to_dacc', 'int16_t'], callees=[FunctionCall(name='printf', args=[['Padrag: %x\\n\\r'], ['padrag', '/', 13107200.0]]), FunctionCall(name='dacc_write', args=[['(', 'int16_t', ')', 'padrag', '/', 13107200.0]])])
FunctionDef(name='motor_joystick_to_encoder', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'motor_joystick_to_encoder', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
FunctionDef(name='read_byte_encoder', args=[['void']], rettype='int8_t', signature=['int8_t', 'read_byte_encoder', 'void'], callees=[])
FunctionDef(name='get_motor_position', args=[['void']], rettype='int16_t', signature=['int16_t', 'get_motor_position', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pid.h
/home/kristian/byggern-nicer_code/node2/tc_driver.c
FunctionDef(name='tc_init', args=[[]], rettype='void', signature=['void', 'tc_init', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pwm_driver.h
/home/kristian/byggern-nicer_code/node2/motor_controller.h
/home/kristian/byggern-nicer_code/node2/dacc_driver.c
FunctionDef(name='dacc_init', args=[['void']], rettype='void', signature=['void', 'dacc_init', 'void'], callees=[FunctionCall(name='DACC_WPMR_WPKEY', args=[[0]]), FunctionCall(name='DACC_MR_REFRESH', args=[[24]])])
FunctionDef(name='dacc_write', args=[['uint16_t', 'word']], rettype='void', signature=['void', 'dacc_write', 'uint16_t'], callees=[])
FunctionDef(name='dacc_joystick_to_converter', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'dacc_joystick_to_converter', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
/home/kristian/byggern-nicer_code/node2/pid.c
FunctionDef(name='PI_init', args=[['int', 'kp'], ['int', 'ki'], ['int', 'T']], rettype='void', signature=['void', 'PI_init', 'int', 'int', 'int'], callees=[FunctionCall(name='printf', args=[['pos: %d'], ['PI_values', '.', 'pos']])])
FunctionDef(name='PI_update', args=[['uint8_t', 'pos_ref'], ['int16_t', 'encoder_value']], rettype='void', signature=['void', 'PI_update', 'uint8_t', 'int16_t'], callees=[FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='PI_to_dacc', args=[['padrag']])])
/home/kristian/byggern-nicer_code/node2/pwm_driver.c
FunctionDef(name='pwm_init', args=[[]], rettype='void', signature=['void', 'pwm_init', 'void'], callees=[FunctionCall(name='PWM_CLK_PREA', args=[[0]]), FunctionCall(name='PWM_CLK_DIVA', args=[[42]])])
FunctionDef(name='pwm_update_dc', args=[['uint32_t', 'dc']], rettype='int', signature=['int', 'pwm_update_dc', 'uint32_t'], callees=[FunctionCall(name='abs', args=[['delta']]), FunctionCall(name='printf', args=[['Writing %d into pwm , delta : %d \\n\\r'], ['dc'], ['delta']])])
FunctionDef(name='joystick_to_servo', args=[['uint8_t', 'x']], rettype='void', signature=['void', 'joystick_to_servo', 'uint8_t'], callees=[FunctionCall(name='pwm_update_dc', args=[[2650, '+', 10, '*', 'x']])])
/home/kristian/byggern-nicer_code/node2/adc_driver.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.c
FunctionDef(name='configure_uart', args=[['void']], rettype='void', signature=['void', 'configure_uart', 'void'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['(', 'IRQn_Type', ')', 'ID_UART']])])
FunctionDef(name='uart_getchar', args=[['uint8_t', '*', 'c']], rettype='int', signature=['int', 'uart_getchar', 'uint8_t*'], callees=[])
FunctionDef(name='uart_putchar', args=[['const', 'uint8_t', 'c']], rettype='int', signature=['int', 'uart_putchar', 'constuint8_t'], callees=[])
FunctionDef(name='UART_Handler', args=[['void']], rettype='void', signature=['void', 'UART_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['ERR: UART RX buffer is full\\n\\r']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.c
FunctionDef(name='printchar', args=[['char', '*', '*', 'str'], ['int', 'c']], rettype='void', signature=['void', 'printchar', 'char**', 'int'], callees=[FunctionCall(name='uart_putchar', args=[['c']])])
FunctionDef(name='prints', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'string'], ['int', 'width'], ['int', 'pad']], rettype='int', signature=['int', 'prints', 'char**', 'constchar*', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['padchar']]), FunctionCall(name='printchar', args=[['out'], ['*', 'string']]), FunctionCall(name='printchar', args=[['out'], ['padchar']])])
FunctionDef(name='printi', args=[['char', '*', '*', 'out'], ['int', 'i'], ['int', 'b'], ['int', 'sg'], ['int', 'width'], ['int', 'pad'], ['int', 'letbase']], rettype='int', signature=['int', 'printi', 'char**', 'int', 'int', 'int', 'int', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['-']]), FunctionCall(name='prints', args=[['out'], ['s'], ['width'], ['pad']])])
FunctionDef(name='print', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'format'], ['va_list', 'args']], rettype='int', signature=['int', 'print', 'char**', 'constchar*', 'va_list'], callees=[FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['s', 's', ':', '(null)'], ['width'], ['pad']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [1], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['A']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['scr'], ['width'], ['pad']]), FunctionCall(name='printchar', args=[['out'], ['*', 'format']]), FunctionCall(name='va_end', args=[['args']])])
FunctionDef(name='printf', args=[['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'printf', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='sprintf', args=[['char', '*', 'out'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'sprintf', 'char*', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='snprintf', args=[['char', '*', 'buf'], ['unsigned', 'int', 'count'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'snprintf', 'char*', 'unsignedint', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.h
/home/kristian/byggern-nicer_code/misc.c
FunctionDef(name='test_latch', args=[['void']], rettype='void', signature=['void', 'test_latch', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[[1000.0]])])
FunctionDef(name='test_jtag', args=[[]], rettype='void', signature=['void', 'test_jtag', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']])])
FunctionDef(name='SRAM_test', args=[['void']], rettype='void', signature=['void', 'SRAM_test', 'void'], callees=[FunctionCall(name='printf', args=[['Starting SRAM test...\\n']]), FunctionCall(name='rand', args=[[]]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='printf', args=[['SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n'], ['write_errors'], ['retrieval_errors']])])
FunctionDef(name='test_slider', args=[['void']], rettype='void', signature=['void', 'test_slider', 'void'], callees=[FunctionCall(name='read_right_slider', args=[[]]), FunctionCall(name='read_left_slider', args=[[]]), FunctionCall(name='printf', args=[['\\033\\143']]), FunctionCall(name='printf', args=[['Right, left: %d %d'], ['right'], ['left']]), FunctionCall(name='_delay_ms', args=[[20]])])
FunctionDef(name='test_OLED_positioning', args=[[]], rettype='void', signature=['void', 'test_OLED_positioning', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[['i']]), FunctionCall(name='OLED_goto_column', args=[[10, '*', 'i']]), FunctionCall(name='OLED_write_string', args=[['string'], [5], [1]]), FunctionCall(name='_delay_ms', args=[[250]]), FunctionCall(name='OLED_home', args=[[]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_write_string', args=[['test1'], [5], [1]]), FunctionCall(name='OLED_clear_line', args=[[5]]), FunctionCall(name='OLED_pos', args=[['(', 'char', ')', 5], ['(', 'char', ')', 60]]), FunctionCall(name='OLED_write_string', args=[['test2'], [5], [1]])])
FunctionDef(name='read_adc_output_test', args=[['void']], rettype='void', signature=['void', 'read_adc_output_test', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['X channel value: %d \\n'], ['x_value']]), FunctionCall(name='y_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['Y channel value: %d \\n'], ['y_value']])])
FunctionDef(name='bitwise_print', args=[['char', 'data'], ['char', '*', 'p']], rettype='void', signature=['void', 'bitwise_print', 'char', 'char*'], callees=[])
FunctionDef(name='print_can_message', args=[['can_message', '*', 'rec']], rettype='void', signature=['void', 'print_can_message', 'can_message*'], callees=[FunctionCall(name='printf', args=[['ID =%x\\n'], ['rec', '->', 'id']]), FunctionCall(name='printf', args=[['Data length = %d \\n'], ['rec', '->', 'data_length']]), FunctionCall(name='printf', args=[['d[%d] = %d\\n'], ['i'], ['(', 'char', ')', 'rec', '->', 'data', '[', 'i', ']']])])
/home/kristian/byggern-nicer_code/main.c
FunctionDef(name='main', args=[['void']], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='UART_init', args=[['MYUBRR']]), FunctionCall(name='ADC_init', args=[[]]), FunctionCall(name='OLED_init', args=[[]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_print_start_screen', args=[[]]), FunctionCall(name='init_menu', args=[[]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='SPI_init', args=[[]]), FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='CAN_init', args=[[]])])
/home/kristian/byggern-nicer_code/UART_driver.h
/home/kristian/byggern-nicer_code/fonts.h
/home/kristian/byggern-nicer_code/includes.h
/home/kristian/byggern-nicer_code/OLED_driver.h
/home/kristian/byggern-nicer_code/adc_driver.c
FunctionDef(name='ADC_init', args=[['void']], rettype='void', signature=['void', 'ADC_init', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='x_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'x_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='y_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'y_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='get_joystick_positions', args=[['void']], rettype='joystick_positions_t', signature=['joystick_positions_t', 'get_joystick_positions', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='get_direction', args=[['void']], rettype='direction_t', signature=['direction_t', 'get_direction', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]])])
FunctionDef(name='read_left_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_left_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='read_right_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_right_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='direction_to_string', args=[['direction_t', 'dir']], rettype='char_p', signature=['char_p', 'direction_to_string', 'direction_t'], callees=[])
FunctionDef(name='get_right_button', args=[['void']], rettype='char', signature=['char', 'get_right_button', 'void'], callees=[])
FunctionDef(name='get_left_button', args=[['void']], rettype='char', signature=['char', 'get_left_button', 'void'], callees=[])
/home/kristian/byggern-nicer_code/UART_driver.c
FunctionDef(name='UART_init', args=[['unsigned', 'int', 'ubrr']], rettype='void', signature=['void', 'UART_init', 'unsignedint'], callees=[FunctionCall(name='fdevopen', args=[['put_char'], ['get_char']])])
FunctionDef(name='UART_transmit', args=[['unsigned', 'char', 'data']], rettype='void', signature=['void', 'UART_transmit', 'unsignedchar'], callees=[])
FunctionDef(name='UART_receive', args=[['void']], rettype='char', signature=['char', 'UART_receive', 'void'], callees=[])
FunctionDef(name='put_char', args=[['char', 'data'], ['FILE', '*', 'file']], rettype='int', signature=['int', 'put_char', 'char', 'FILE*'], callees=[FunctionCall(name='UART_transmit', args=[['r']]), FunctionCall(name='UART_transmit', args=[['data']])])
FunctionDef(name='get_char', args=[['FILE', '*', 'file']], rettype='int', signature=['int', 'get_char', 'FILE*'], callees=[])
/home/kristian/byggern-nicer_code/joystick_can.h
/home/kristian/byggern-nicer_code/CAN_driver.c
FunctionDef(name='ISR', args=[['INT0_vect']], rettype='#define CNF3 0b00101000', signature=['#define CNF3 0b00101000', 'ISR', 'void'], callees=[FunctionCall(name='cli', args=[[]]), FunctionCall(name='printf', args=[['vektor kjores\\n']]), FunctionCall(name='read_mcp_status', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='CAN_recieve', args=[['&', 'msg']]), FunctionCall(name='print_can_message', args=[['&', 'msg']]), FunctionCall(name='free', args=[['&', 'msg']]), FunctionCall(name='sei', args=[[]])])
FunctionDef(name='CAN_init', args=[[]], rettype='void', signature=['void', 'CAN_init', 'void'], callees=[FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 3], ['CNF1']]), FunctionCall(name='write_mcp', args=[['0b', 10110001], ['CNF2']]), FunctionCall(name='write_mcp', args=[['0x', 5], ['CNF3']]), FunctionCall(name='cli', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 1], ['MCP_CANINTE']]), FunctionCall(name='sei', args=[[]]), FunctionCall(name='write_mcp', args=[['0b', 1100000], ['(', 'char', ')', '&', 'RXB0', '->', 'CTRL']]), FunctionCall(name='mcp_bit_modify', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CANCTRL'], ['0b', 11100000], ['0b', 0]])])
FunctionDef(name='CAN_transmit', args=[['can_message', '*', 'm']], rettype='int', signature=['int', 'CAN_transmit', 'can_message*'], callees=[FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CTRL']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', 'm', '->', 'id', '>>', 3, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDH']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', '(', 'm', '->', 'id', '&', '0x', 7, ')', '<<', 5, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDL']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data_length'], ['(', 'char', ')', '&', 'TXB0', '->', 'DLC']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data', '[', 'i', ']'], ['(', 'char', ')', '0b', 110110, '+', 'i']]), FunctionCall(name='RTS', args=[['0x', 1]])])
FunctionDef(name='CAN_recieve', args=[['can_message', '*', 'msg']], rettype='int', signature=['int', 'CAN_recieve', 'can_message*'], callees=[FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDH']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDL']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'DLC']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '0b', 1100110, '+', 'i']]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']])])
FunctionDef(name='ISR', args=[['BADISR_vect']], rettype='}', signature=['}', 'ISR', 'void'], callees=[])
/home/kristian/byggern-nicer_code/mcp2515.h
/home/kristian/byggern-nicer_code/misc.h
/home/kristian/byggern-nicer_code/MCP2515_driver.c
FunctionDef(name='read_mcp', args=[['char', 'address']], rettype='char', signature=['char', 'read_mcp', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 3]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='write_mcp', args=[['char', 'data'], ['char', 'address']], rettype='char', signature=['char', 'write_mcp', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 2]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='RTS', args=[['unsigned', 'char', 'buffer_number']], rettype='void', signature=['void', 'RTS', 'unsignedchar'], callees=[FunctionCall(name='printf', args=[['Invalid format']]), FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['command']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='read_mcp_status', args=[[]], rettype='char', signature=['char', 'read_mcp_status', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'A0']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_reset', args=[[]], rettype='void', signature=['void', 'mcp_reset', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'C0']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_bit_modify', args=[['char', 'address'], ['char', 'mask'], ['char', 'data']], rettype='void', signature=['void', 'mcp_bit_modify', 'char', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 5]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['mask']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
/home/kristian/byggern-nicer_code/OLED_driver.c
FunctionDef(name='write_command_OLED', args=[['char', 'command']], rettype='void', signature=['void', 'write_command_OLED', 'char'], callees=[])
FunctionDef(name='OLED_clear', args=[['void']], rettype='void', signature=['void', 'OLED_clear', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='write_d', args=[['0x', 0]])])
FunctionDef(name='OLED_init', args=[['void']], rettype='void', signature=['void', 'OLED_init', 'void'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 'ae']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a1']]), FunctionCall(name='write_command_OLED', args=[['0x', 'da']]), FunctionCall(name='write_command_OLED', args=[['0x', 12]]), FunctionCall(name='write_command_OLED', args=[['0x', 'c8']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a8']]), FunctionCall(name='write_command_OLED', args=[['0x', 3, 'f']]), FunctionCall(name='write_command_OLED', args=[['0x', 'd5']]), FunctionCall(name='write_command_OLED', args=[['0x', 80]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['0x', 50]]), FunctionCall(name='write_command_OLED', args=[['0x', 'd9']]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 2]]), FunctionCall(name='write_command_OLED', args=[['0x', 'db']]), FunctionCall(name='write_command_OLED', args=[['0x', 30]]), FunctionCall(name='write_command_OLED', args=[['0x', 'ad']]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 'a4']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a6']]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']]), FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']])])
FunctionDef(name='OLED_print_start_screen', args=[[]], rettype='void', signature=['void', 'OLED_print_start_screen', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[3]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['CYBERPUNK 2077'], [8], [1]]), FunctionCall(name='OLED_goto_line', args=[[5]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['Press any button to start...'], [4], [1]]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[[250, '-', 'i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']])])
FunctionDef(name='write_d', args=[['char', 'data']], rettype='void', signature=['void', 'write_d', 'char'], callees=[])
FunctionDef(name='OLED_write_char', args=[['unsigned', 'char', 'karakter'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_char', 'unsignedchar', 'char', 'char'], callees=[FunctionCall(name='pgm_read_byte', args=[['&', 'font8', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font4', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font5', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']])])
FunctionDef(name='OLED_write_string', args=[['char', 'string', '[', ']'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_string', 'charstring[', 'char', 'char'], callees=[FunctionCall(name='OLED_write_char', args=[['string', '[', 'i', ']'], ['size'], ['invert']])])
FunctionDef(name='OLED_goto_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_goto_line', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['line']]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='OLED_goto_column', args=[[0]])])
FunctionDef(name='OLED_goto_column', args=[['char', 'column']], rettype='void', signature=['void', 'OLED_goto_column', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['column']]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']])])
FunctionDef(name='OLED_clear_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_clear_line', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='write_d', args=[['0x', 0]]), FunctionCall(name='OLED_goto_line', args=[['line']])])
FunctionDef(name='OLED_home', args=[[]], rettype='void', signature=['void', 'OLED_home', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]])])
FunctionDef(name='OLED_pos', args=[['char', 'row'], ['char', 'column']], rettype='void', signature=['void', 'OLED_pos', 'char', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['row']]), FunctionCall(name='OLED_goto_column', args=[['column']])])
/home/kristian/byggern-nicer_code/MCP2515_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.h
/home/kristian/byggern-nicer_code/menu.h
/home/kristian/byggern-nicer_code/joystick_can.c
FunctionDef(name='get_and_send_joystick_pos', args=[[]], rettype='void', signature=['void', 'get_and_send_joystick_pos', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['pos', '.', 'x'], ['pos', '.', 'y']]), FunctionCall(name='CAN_transmit', args=[['&', 'msg']])])
/home/kristian/byggern-nicer_code/menu.c
FunctionDef(name='init_menu', args=[['void']], rettype='void', signature=['void', 'init_menu', 'void'], callees=[FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']])])
FunctionDef(name='print_menu', args=[[]], rettype='void', signature=['void', 'print_menu', 'void'], callees=[FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [0]]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [1]])])
FunctionDef(name='menu_down', args=[[]], rettype='void', signature=['void', 'menu_down', 'void'], callees=[])
FunctionDef(name='menu_up', args=[[]], rettype='void', signature=['void', 'menu_up', 'void'], callees=[])
FunctionDef(name='menu_pos', args=[[]], rettype='Node_p', signature=['Node_p', 'menu_pos', 'void'], callees=[])
FunctionDef(name='menu_sub', args=[[]], rettype='void', signature=['void', 'menu_sub', 'void'], callees=[])
FunctionDef(name='menu_super', args=[[]], rettype='void', signature=['void', 'menu_super', 'void'], callees=[FunctionCall(name='get_head', args=[[]])])
FunctionDef(name='get_head', args=[[]], rettype='Node_p', signature=['Node_p', 'get_head', 'void'], callees=[])
/home/kristian/byggern-nicer_code/adc_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.c
FunctionDef(name='SPI_init', args=[['void']], rettype='void', signature=['void', 'SPI_init', 'void'], callees=[])
FunctionDef(name='SPI_send_and_rec', args=[['char', 'data']], rettype='char', signature=['char', 'SPI_send_and_rec', 'char'], callees=[])
FunctionDef(name='set_SS_low', args=[[]], rettype='void', signature=['void', 'set_SS_low', 'void'], callees=[])
FunctionDef(name='set_SS_high', args=[[]], rettype='void', signature=['void', 'set_SS_high', 'void'], callees=[])
/home/kristian/byggern-nicer_code/CAN_driver.h
/home/kristian/byggern-nicer_code/node2/main.c
FunctionDef(name='delay', args=[['int', 'd']], rettype='void', signature=['void', 'delay', 'int'], callees=[])
FunctionDef(name='main', args=[[]], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='configure_uart', args=[[]]), FunctionCall(name='SystemInit', args=[[]]), FunctionCall(name='printf', args=[['Hello World\\n\\r']]), FunctionCall(name='printf', args=[['Klokkestatus er: %x \\n'], ['clokk']]), FunctionCall(name='printf', args=[['Klokkehastighet er: %d \\n'], ['clfq']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='pwm_init', args=[[]]), FunctionCall(name='adc_init', args=[[]]), FunctionCall(name='tc_init', args=[[]]), FunctionCall(name='dacc_init', args=[[]]), FunctionCall(name='motor_init', args=[[]]), FunctionCall(name='PI_init', args=[['kp'], ['ki'], ['t']]), FunctionCall(name='dacc_write', args=[['0x', 0]]), FunctionCall(name='can_receive', args=[['msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='can_send', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Sending\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 1\\n \\r']]), FunctionCall(name='printf', args=[['One loop\\n\\r']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='printf', args=[['couldnt send\\n\\r']]), FunctionCall(name='printf', args=[['hei']]), FunctionCall(name='delay', args=[[1]]), FunctionCall(name='pwm_update_dc', args=[[2650, '+', 200, '*', 'i']]), FunctionCall(name='delay', args=[[100]]), FunctionCall(name='adc_read', args=[[]]), FunctionCall(name='dacc_write', args=[['0x', 0, 'FFF']]), FunctionCall(name='motor_joystick_to_encoder', args=[[255]]), FunctionCall(name='motor_read_encoder', args=[[]]), FunctionCall(name='can_receive', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='joystick_to_servo', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 0, ']']]), FunctionCall(name='motor_joystick_to_encoder', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['msg', '->', 'data', '[', 0, ']'], ['msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Sum of encoder values: %d \\n\\r'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Encoder %d \\n\\r'], ['motor_read_encoder', '(', ')']]), FunctionCall(name='motor_read_encoder', args=[[]])])
/home/kristian/byggern-nicer_code/node2/dacc_driver.h
/home/kristian/byggern-nicer_code/node2/can_controller.c
FunctionDef(name='can_init_def_tx_rx_mb', args=[['uint32_t', 'can_br']], rettype='uint8_t', signature=['uint8_t', 'can_init_def_tx_rx_mb', 'uint32_t'], callees=[])
FunctionDef(name='can_init', args=[['uint32_t', 'can_br'], ['uint8_t', 'num_tx_mb'], ['uint8_t', 'num_rx_mb']], rettype='uint8_t', signature=['uint8_t', 'can_init', 'uint32_t', 'uint8_t', 'uint8_t'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['ID_CAN0']])])
FunctionDef(name='can_send', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'tx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_send', 'CAN_MESSAGE*', 'uint8_t'], callees=[FunctionCall(name='CAN_MID_MIDvA', args=[['can_msg', '->', 'id']]), FunctionCall(name='printf', args=[['d[7] = %d\\n\\r'], ['can_msg', '->', 'data', '[', 7, ']']])])
FunctionDef(name='can_receive', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'rx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_receive', 'CAN_MESSAGE*', 'uint8_t'], callees=[])
/home/kristian/byggern-nicer_code/node2/tc_driver.h
/home/kristian/byggern-nicer_code/node2/can_interrupt.c
FunctionDef(name='CAN0_Handler', args=[['void']], rettype='void', signature=['void', 'CAN0_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['CAN0 interrupt\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'message'], [1]]), FunctionCall(name='can_receive', args=[['&', 'message'], [2]]), FunctionCall(name='printf', args=[['CAN0 message arrived in non-used mailbox\\n\\r']]), FunctionCall(name='printf', args=[['message id: %d\\n\\r'], ['message', '.', 'id']]), FunctionCall(name='printf', args=[['message data length: %d\\n\\r'], ['message', '.', 'data_length']]), FunctionCall(name='printf', args=[['%d '], ['message', '.', 'data', '[', 'i', ']']]), FunctionCall(name='printf', args=[['\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 MB0 ready to send \\n\\r']]), FunctionCall(name='printf', args=[['CAN0 ERRP error\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 timer overflow\\n\\r']]), FunctionCall(name='NVIC_ClearPendingIRQ', args=[['ID_CAN0']])])
/home/kristian/byggern-nicer_code/node2/can_interrupt.h
/home/kristian/byggern-nicer_code/node2/adc_driver.c
FunctionDef(name='adc_init', args=[[]], rettype='int', signature=['int', 'adc_init', 'void'], callees=[])
FunctionDef(name='adc_read', args=[[]], rettype='uint16_t', signature=['uint16_t', 'adc_read', 'void'], callees=[FunctionCall(name='printf', args=[['New goals! Total goals: %d\\n\\r'], ['goals']])])
FunctionDef(name='get_goals', args=[[]], rettype='uint8_t', signature=['uint8_t', 'get_goals', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/can_controller.h
/home/kristian/byggern-nicer_code/node2/motor_controller.c
FunctionDef(name='delay_micro', args=[['int', 'd']], rettype='void', signature=['void', 'delay_micro', 'int'], callees=[])
FunctionDef(name='motor_init', args=[['void']], rettype='void', signature=['void', 'motor_init', 'void'], callees=[])
FunctionDef(name='motor_read_encoder', args=[['void']], rettype='int16_t', signature=['int16_t', 'motor_read_encoder', 'void'], callees=[FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]])])
FunctionDef(name='PI_to_dacc', args=[['int16_t', 'padrag']], rettype='void', signature=['void', 'PI_to_dacc', 'int16_t'], callees=[FunctionCall(name='printf', args=[['Padrag: %x\\n\\r'], ['padrag', '/', 13107200.0]]), FunctionCall(name='dacc_write', args=[['(', 'int16_t', ')', 'padrag', '/', 13107200.0]])])
FunctionDef(name='motor_joystick_to_encoder', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'motor_joystick_to_encoder', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
FunctionDef(name='read_byte_encoder', args=[['void']], rettype='int8_t', signature=['int8_t', 'read_byte_encoder', 'void'], callees=[])
FunctionDef(name='get_motor_position', args=[['void']], rettype='int16_t', signature=['int16_t', 'get_motor_position', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pid.h
/home/kristian/byggern-nicer_code/node2/tc_driver.c
FunctionDef(name='tc_init', args=[[]], rettype='void', signature=['void', 'tc_init', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pwm_driver.h
/home/kristian/byggern-nicer_code/node2/motor_controller.h
/home/kristian/byggern-nicer_code/node2/dacc_driver.c
FunctionDef(name='dacc_init', args=[['void']], rettype='void', signature=['void', 'dacc_init', 'void'], callees=[FunctionCall(name='DACC_WPMR_WPKEY', args=[[0]]), FunctionCall(name='DACC_MR_REFRESH', args=[[24]])])
FunctionDef(name='dacc_write', args=[['uint16_t', 'word']], rettype='void', signature=['void', 'dacc_write', 'uint16_t'], callees=[])
FunctionDef(name='dacc_joystick_to_converter', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'dacc_joystick_to_converter', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
/home/kristian/byggern-nicer_code/node2/pid.c
FunctionDef(name='PI_init', args=[['int', 'kp'], ['int', 'ki'], ['int', 'T']], rettype='void', signature=['void', 'PI_init', 'int', 'int', 'int'], callees=[FunctionCall(name='printf', args=[['pos: %d'], ['PI_values', '.', 'pos']])])
FunctionDef(name='PI_update', args=[['uint8_t', 'pos_ref'], ['int16_t', 'encoder_value']], rettype='void', signature=['void', 'PI_update', 'uint8_t', 'int16_t'], callees=[FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='PI_to_dacc', args=[['padrag']])])
/home/kristian/byggern-nicer_code/node2/pwm_driver.c
FunctionDef(name='pwm_init', args=[[]], rettype='void', signature=['void', 'pwm_init', 'void'], callees=[FunctionCall(name='PWM_CLK_PREA', args=[[0]]), FunctionCall(name='PWM_CLK_DIVA', args=[[42]])])
FunctionDef(name='pwm_update_dc', args=[['uint32_t', 'dc']], rettype='int', signature=['int', 'pwm_update_dc', 'uint32_t'], callees=[FunctionCall(name='abs', args=[['delta']]), FunctionCall(name='printf', args=[['Writing %d into pwm , delta : %d \\n\\r'], ['dc'], ['delta']])])
FunctionDef(name='joystick_to_servo', args=[['uint8_t', 'x']], rettype='void', signature=['void', 'joystick_to_servo', 'uint8_t'], callees=[FunctionCall(name='pwm_update_dc', args=[[2650, '+', 10, '*', 'x']])])
/home/kristian/byggern-nicer_code/node2/adc_driver.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.c
FunctionDef(name='configure_uart', args=[['void']], rettype='void', signature=['void', 'configure_uart', 'void'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['(', 'IRQn_Type', ')', 'ID_UART']])])
FunctionDef(name='uart_getchar', args=[['uint8_t', '*', 'c']], rettype='int', signature=['int', 'uart_getchar', 'uint8_t*'], callees=[])
FunctionDef(name='uart_putchar', args=[['const', 'uint8_t', 'c']], rettype='int', signature=['int', 'uart_putchar', 'constuint8_t'], callees=[])
FunctionDef(name='UART_Handler', args=[['void']], rettype='void', signature=['void', 'UART_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['ERR: UART RX buffer is full\\n\\r']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.c
FunctionDef(name='printchar', args=[['char', '*', '*', 'str'], ['int', 'c']], rettype='void', signature=['void', 'printchar', 'char**', 'int'], callees=[FunctionCall(name='uart_putchar', args=[['c']])])
FunctionDef(name='prints', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'string'], ['int', 'width'], ['int', 'pad']], rettype='int', signature=['int', 'prints', 'char**', 'constchar*', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['padchar']]), FunctionCall(name='printchar', args=[['out'], ['*', 'string']]), FunctionCall(name='printchar', args=[['out'], ['padchar']])])
FunctionDef(name='printi', args=[['char', '*', '*', 'out'], ['int', 'i'], ['int', 'b'], ['int', 'sg'], ['int', 'width'], ['int', 'pad'], ['int', 'letbase']], rettype='int', signature=['int', 'printi', 'char**', 'int', 'int', 'int', 'int', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['-']]), FunctionCall(name='prints', args=[['out'], ['s'], ['width'], ['pad']])])
FunctionDef(name='print', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'format'], ['va_list', 'args']], rettype='int', signature=['int', 'print', 'char**', 'constchar*', 'va_list'], callees=[FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['s', 's', ':', '(null)'], ['width'], ['pad']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [1], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['A']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['scr'], ['width'], ['pad']]), FunctionCall(name='printchar', args=[['out'], ['*', 'format']]), FunctionCall(name='va_end', args=[['args']])])
FunctionDef(name='printf', args=[['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'printf', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='sprintf', args=[['char', '*', 'out'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'sprintf', 'char*', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='snprintf', args=[['char', '*', 'buf'], ['unsigned', 'int', 'count'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'snprintf', 'char*', 'unsignedint', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.h
/home/kristian/byggern-nicer_code/misc.c
FunctionDef(name='test_latch', args=[['void']], rettype='void', signature=['void', 'test_latch', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[[1000.0]])])
FunctionDef(name='test_jtag', args=[[]], rettype='void', signature=['void', 'test_jtag', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']])])
FunctionDef(name='SRAM_test', args=[['void']], rettype='void', signature=['void', 'SRAM_test', 'void'], callees=[FunctionCall(name='printf', args=[['Starting SRAM test...\\n']]), FunctionCall(name='rand', args=[[]]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='printf', args=[['SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n'], ['write_errors'], ['retrieval_errors']])])
FunctionDef(name='test_slider', args=[['void']], rettype='void', signature=['void', 'test_slider', 'void'], callees=[FunctionCall(name='read_right_slider', args=[[]]), FunctionCall(name='read_left_slider', args=[[]]), FunctionCall(name='printf', args=[['\\033\\143']]), FunctionCall(name='printf', args=[['Right, left: %d %d'], ['right'], ['left']]), FunctionCall(name='_delay_ms', args=[[20]])])
FunctionDef(name='test_OLED_positioning', args=[[]], rettype='void', signature=['void', 'test_OLED_positioning', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[['i']]), FunctionCall(name='OLED_goto_column', args=[[10, '*', 'i']]), FunctionCall(name='OLED_write_string', args=[['string'], [5], [1]]), FunctionCall(name='_delay_ms', args=[[250]]), FunctionCall(name='OLED_home', args=[[]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_write_string', args=[['test1'], [5], [1]]), FunctionCall(name='OLED_clear_line', args=[[5]]), FunctionCall(name='OLED_pos', args=[['(', 'char', ')', 5], ['(', 'char', ')', 60]]), FunctionCall(name='OLED_write_string', args=[['test2'], [5], [1]])])
FunctionDef(name='read_adc_output_test', args=[['void']], rettype='void', signature=['void', 'read_adc_output_test', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['X channel value: %d \\n'], ['x_value']]), FunctionCall(name='y_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['Y channel value: %d \\n'], ['y_value']])])
FunctionDef(name='bitwise_print', args=[['char', 'data'], ['char', '*', 'p']], rettype='void', signature=['void', 'bitwise_print', 'char', 'char*'], callees=[])
FunctionDef(name='print_can_message', args=[['can_message', '*', 'rec']], rettype='void', signature=['void', 'print_can_message', 'can_message*'], callees=[FunctionCall(name='printf', args=[['ID =%x\\n'], ['rec', '->', 'id']]), FunctionCall(name='printf', args=[['Data length = %d \\n'], ['rec', '->', 'data_length']]), FunctionCall(name='printf', args=[['d[%d] = %d\\n'], ['i'], ['(', 'char', ')', 'rec', '->', 'data', '[', 'i', ']']])])
/home/kristian/byggern-nicer_code/main.c
FunctionDef(name='main', args=[['void']], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='UART_init', args=[['MYUBRR']]), FunctionCall(name='ADC_init', args=[[]]), FunctionCall(name='OLED_init', args=[[]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_print_start_screen', args=[[]]), FunctionCall(name='init_menu', args=[[]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='SPI_init', args=[[]]), FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='CAN_init', args=[[]])])
/home/kristian/byggern-nicer_code/UART_driver.h
/home/kristian/byggern-nicer_code/fonts.h
/home/kristian/byggern-nicer_code/includes.h
/home/kristian/byggern-nicer_code/OLED_driver.h
/home/kristian/byggern-nicer_code/adc_driver.c
FunctionDef(name='ADC_init', args=[['void']], rettype='void', signature=['void', 'ADC_init', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='x_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'x_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='y_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'y_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='get_joystick_positions', args=[['void']], rettype='joystick_positions_t', signature=['joystick_positions_t', 'get_joystick_positions', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='get_direction', args=[['void']], rettype='direction_t', signature=['direction_t', 'get_direction', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]])])
FunctionDef(name='read_left_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_left_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='read_right_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_right_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='direction_to_string', args=[['direction_t', 'dir']], rettype='char_p', signature=['char_p', 'direction_to_string', 'direction_t'], callees=[])
FunctionDef(name='get_right_button', args=[['void']], rettype='char', signature=['char', 'get_right_button', 'void'], callees=[])
FunctionDef(name='get_left_button', args=[['void']], rettype='char', signature=['char', 'get_left_button', 'void'], callees=[])
/home/kristian/byggern-nicer_code/UART_driver.c
FunctionDef(name='UART_init', args=[['unsigned', 'int', 'ubrr']], rettype='void', signature=['void', 'UART_init', 'unsignedint'], callees=[FunctionCall(name='fdevopen', args=[['put_char'], ['get_char']])])
FunctionDef(name='UART_transmit', args=[['unsigned', 'char', 'data']], rettype='void', signature=['void', 'UART_transmit', 'unsignedchar'], callees=[])
FunctionDef(name='UART_receive', args=[['void']], rettype='char', signature=['char', 'UART_receive', 'void'], callees=[])
FunctionDef(name='put_char', args=[['char', 'data'], ['FILE', '*', 'file']], rettype='int', signature=['int', 'put_char', 'char', 'FILE*'], callees=[FunctionCall(name='UART_transmit', args=[['r']]), FunctionCall(name='UART_transmit', args=[['data']])])
FunctionDef(name='get_char', args=[['FILE', '*', 'file']], rettype='int', signature=['int', 'get_char', 'FILE*'], callees=[])
/home/kristian/byggern-nicer_code/joystick_can.h
/home/kristian/byggern-nicer_code/CAN_driver.c
FunctionDef(name='ISR', args=[['INT0_vect']], rettype='#define CNF3 0b00101000', signature=['#define CNF3 0b00101000', 'ISR', 'void'], callees=[FunctionCall(name='cli', args=[[]]), FunctionCall(name='printf', args=[['vektor kjores\\n']]), FunctionCall(name='read_mcp_status', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='CAN_recieve', args=[['&', 'msg']]), FunctionCall(name='print_can_message', args=[['&', 'msg']]), FunctionCall(name='free', args=[['&', 'msg']]), FunctionCall(name='sei', args=[[]])])
FunctionDef(name='CAN_init', args=[[]], rettype='void', signature=['void', 'CAN_init', 'void'], callees=[FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 3], ['CNF1']]), FunctionCall(name='write_mcp', args=[['0b', 10110001], ['CNF2']]), FunctionCall(name='write_mcp', args=[['0x', 5], ['CNF3']]), FunctionCall(name='cli', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 1], ['MCP_CANINTE']]), FunctionCall(name='sei', args=[[]]), FunctionCall(name='write_mcp', args=[['0b', 1100000], ['(', 'char', ')', '&', 'RXB0', '->', 'CTRL']]), FunctionCall(name='mcp_bit_modify', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CANCTRL'], ['0b', 11100000], ['0b', 0]])])
FunctionDef(name='CAN_transmit', args=[['can_message', '*', 'm']], rettype='int', signature=['int', 'CAN_transmit', 'can_message*'], callees=[FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CTRL']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', 'm', '->', 'id', '>>', 3, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDH']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', '(', 'm', '->', 'id', '&', '0x', 7, ')', '<<', 5, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDL']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data_length'], ['(', 'char', ')', '&', 'TXB0', '->', 'DLC']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data', '[', 'i', ']'], ['(', 'char', ')', '0b', 110110, '+', 'i']]), FunctionCall(name='RTS', args=[['0x', 1]])])
FunctionDef(name='CAN_recieve', args=[['can_message', '*', 'msg']], rettype='int', signature=['int', 'CAN_recieve', 'can_message*'], callees=[FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDH']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDL']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'DLC']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '0b', 1100110, '+', 'i']]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']])])
FunctionDef(name='ISR', args=[['BADISR_vect']], rettype='}', signature=['}', 'ISR', 'void'], callees=[])
/home/kristian/byggern-nicer_code/mcp2515.h
/home/kristian/byggern-nicer_code/misc.h
/home/kristian/byggern-nicer_code/MCP2515_driver.c
FunctionDef(name='read_mcp', args=[['char', 'address']], rettype='char', signature=['char', 'read_mcp', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 3]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='write_mcp', args=[['char', 'data'], ['char', 'address']], rettype='char', signature=['char', 'write_mcp', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 2]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='RTS', args=[['unsigned', 'char', 'buffer_number']], rettype='void', signature=['void', 'RTS', 'unsignedchar'], callees=[FunctionCall(name='printf', args=[['Invalid format']]), FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['command']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='read_mcp_status', args=[[]], rettype='char', signature=['char', 'read_mcp_status', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'A0']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_reset', args=[[]], rettype='void', signature=['void', 'mcp_reset', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'C0']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_bit_modify', args=[['char', 'address'], ['char', 'mask'], ['char', 'data']], rettype='void', signature=['void', 'mcp_bit_modify', 'char', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 5]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['mask']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
/home/kristian/byggern-nicer_code/OLED_driver.c
FunctionDef(name='write_command_OLED', args=[['char', 'command']], rettype='void', signature=['void', 'write_command_OLED', 'char'], callees=[])
FunctionDef(name='OLED_clear', args=[['void']], rettype='void', signature=['void', 'OLED_clear', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='write_d', args=[['0x', 0]])])
FunctionDef(name='OLED_init', args=[['void']], rettype='void', signature=['void', 'OLED_init', 'void'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 'ae']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a1']]), FunctionCall(name='write_command_OLED', args=[['0x', 'da']]), FunctionCall(name='write_command_OLED', args=[['0x', 12]]), FunctionCall(name='write_command_OLED', args=[['0x', 'c8']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a8']]), FunctionCall(name='write_command_OLED', args=[['0x', 3, 'f']]), FunctionCall(name='write_command_OLED', args=[['0x', 'd5']]), FunctionCall(name='write_command_OLED', args=[['0x', 80]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['0x', 50]]), FunctionCall(name='write_command_OLED', args=[['0x', 'd9']]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 2]]), FunctionCall(name='write_command_OLED', args=[['0x', 'db']]), FunctionCall(name='write_command_OLED', args=[['0x', 30]]), FunctionCall(name='write_command_OLED', args=[['0x', 'ad']]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 'a4']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a6']]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']]), FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']])])
FunctionDef(name='OLED_print_start_screen', args=[[]], rettype='void', signature=['void', 'OLED_print_start_screen', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[3]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['CYBERPUNK 2077'], [8], [1]]), FunctionCall(name='OLED_goto_line', args=[[5]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['Press any button to start...'], [4], [1]]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[[250, '-', 'i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']])])
FunctionDef(name='write_d', args=[['char', 'data']], rettype='void', signature=['void', 'write_d', 'char'], callees=[])
FunctionDef(name='OLED_write_char', args=[['unsigned', 'char', 'karakter'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_char', 'unsignedchar', 'char', 'char'], callees=[FunctionCall(name='pgm_read_byte', args=[['&', 'font8', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font4', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font5', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']])])
FunctionDef(name='OLED_write_string', args=[['char', 'string', '[', ']'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_string', 'charstring[', 'char', 'char'], callees=[FunctionCall(name='OLED_write_char', args=[['string', '[', 'i', ']'], ['size'], ['invert']])])
FunctionDef(name='OLED_goto_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_goto_line', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['line']]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='OLED_goto_column', args=[[0]])])
FunctionDef(name='OLED_goto_column', args=[['char', 'column']], rettype='void', signature=['void', 'OLED_goto_column', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['column']]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']])])
FunctionDef(name='OLED_clear_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_clear_line', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='write_d', args=[['0x', 0]]), FunctionCall(name='OLED_goto_line', args=[['line']])])
FunctionDef(name='OLED_home', args=[[]], rettype='void', signature=['void', 'OLED_home', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]])])
FunctionDef(name='OLED_pos', args=[['char', 'row'], ['char', 'column']], rettype='void', signature=['void', 'OLED_pos', 'char', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['row']]), FunctionCall(name='OLED_goto_column', args=[['column']])])
/home/kristian/byggern-nicer_code/MCP2515_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.h
/home/kristian/byggern-nicer_code/menu.h
/home/kristian/byggern-nicer_code/joystick_can.c
FunctionDef(name='get_and_send_joystick_pos', args=[[]], rettype='void', signature=['void', 'get_and_send_joystick_pos', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['pos', '.', 'x'], ['pos', '.', 'y']]), FunctionCall(name='CAN_transmit', args=[['&', 'msg']])])
/home/kristian/byggern-nicer_code/menu.c
FunctionDef(name='init_menu', args=[['void']], rettype='void', signature=['void', 'init_menu', 'void'], callees=[FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']])])
FunctionDef(name='print_menu', args=[[]], rettype='void', signature=['void', 'print_menu', 'void'], callees=[FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [0]]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [1]])])
FunctionDef(name='menu_down', args=[[]], rettype='void', signature=['void', 'menu_down', 'void'], callees=[])
FunctionDef(name='menu_up', args=[[]], rettype='void', signature=['void', 'menu_up', 'void'], callees=[])
FunctionDef(name='menu_pos', args=[[]], rettype='Node_p', signature=['Node_p', 'menu_pos', 'void'], callees=[])
FunctionDef(name='menu_sub', args=[[]], rettype='void', signature=['void', 'menu_sub', 'void'], callees=[])
FunctionDef(name='menu_super', args=[[]], rettype='void', signature=['void', 'menu_super', 'void'], callees=[FunctionCall(name='get_head', args=[[]])])
FunctionDef(name='get_head', args=[[]], rettype='Node_p', signature=['Node_p', 'get_head', 'void'], callees=[])
/home/kristian/byggern-nicer_code/adc_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.c
FunctionDef(name='SPI_init', args=[['void']], rettype='void', signature=['void', 'SPI_init', 'void'], callees=[])
FunctionDef(name='SPI_send_and_rec', args=[['char', 'data']], rettype='char', signature=['char', 'SPI_send_and_rec', 'char'], callees=[])
FunctionDef(name='set_SS_low', args=[[]], rettype='void', signature=['void', 'set_SS_low', 'void'], callees=[])
FunctionDef(name='set_SS_high', args=[[]], rettype='void', signature=['void', 'set_SS_high', 'void'], callees=[])
/home/kristian/byggern-nicer_code/CAN_driver.h
/home/kristian/byggern-nicer_code/node2/main.c
FunctionDef(name='delay', args=[['int', 'd']], rettype='void', signature=['void', 'delay', 'int'], callees=[])
FunctionDef(name='main', args=[[]], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='configure_uart', args=[[]]), FunctionCall(name='SystemInit', args=[[]]), FunctionCall(name='printf', args=[['Hello World\\n\\r']]), FunctionCall(name='printf', args=[['Klokkestatus er: %x \\n'], ['clokk']]), FunctionCall(name='printf', args=[['Klokkehastighet er: %d \\n'], ['clfq']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='pwm_init', args=[[]]), FunctionCall(name='adc_init', args=[[]]), FunctionCall(name='tc_init', args=[[]]), FunctionCall(name='dacc_init', args=[[]]), FunctionCall(name='motor_init', args=[[]]), FunctionCall(name='PI_init', args=[['kp'], ['ki'], ['t']]), FunctionCall(name='dacc_write', args=[['0x', 0]]), FunctionCall(name='can_receive', args=[['msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='can_send', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Sending\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 1\\n \\r']]), FunctionCall(name='printf', args=[['One loop\\n\\r']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='printf', args=[['couldnt send\\n\\r']]), FunctionCall(name='printf', args=[['hei']]), FunctionCall(name='delay', args=[[1]]), FunctionCall(name='pwm_update_dc', args=[[2650, '+', 200, '*', 'i']]), FunctionCall(name='delay', args=[[100]]), FunctionCall(name='adc_read', args=[[]]), FunctionCall(name='dacc_write', args=[['0x', 0, 'FFF']]), FunctionCall(name='motor_joystick_to_encoder', args=[[255]]), FunctionCall(name='motor_read_encoder', args=[[]]), FunctionCall(name='can_receive', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='joystick_to_servo', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 0, ']']]), FunctionCall(name='motor_joystick_to_encoder', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['msg', '->', 'data', '[', 0, ']'], ['msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Sum of encoder values: %d \\n\\r'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Encoder %d \\n\\r'], ['motor_read_encoder', '(', ')']]), FunctionCall(name='motor_read_encoder', args=[[]])])
/home/kristian/byggern-nicer_code/node2/dacc_driver.h
/home/kristian/byggern-nicer_code/node2/can_controller.c
FunctionDef(name='can_init_def_tx_rx_mb', args=[['uint32_t', 'can_br']], rettype='uint8_t', signature=['uint8_t', 'can_init_def_tx_rx_mb', 'uint32_t'], callees=[])
FunctionDef(name='can_init', args=[['uint32_t', 'can_br'], ['uint8_t', 'num_tx_mb'], ['uint8_t', 'num_rx_mb']], rettype='uint8_t', signature=['uint8_t', 'can_init', 'uint32_t', 'uint8_t', 'uint8_t'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['ID_CAN0']])])
FunctionDef(name='can_send', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'tx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_send', 'CAN_MESSAGE*', 'uint8_t'], callees=[FunctionCall(name='CAN_MID_MIDvA', args=[['can_msg', '->', 'id']]), FunctionCall(name='printf', args=[['d[7] = %d\\n\\r'], ['can_msg', '->', 'data', '[', 7, ']']])])
FunctionDef(name='can_receive', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'rx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_receive', 'CAN_MESSAGE*', 'uint8_t'], callees=[])
/home/kristian/byggern-nicer_code/node2/tc_driver.h
/home/kristian/byggern-nicer_code/node2/can_interrupt.c
FunctionDef(name='CAN0_Handler', args=[['void']], rettype='void', signature=['void', 'CAN0_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['CAN0 interrupt\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'message'], [1]]), FunctionCall(name='can_receive', args=[['&', 'message'], [2]]), FunctionCall(name='printf', args=[['CAN0 message arrived in non-used mailbox\\n\\r']]), FunctionCall(name='printf', args=[['message id: %d\\n\\r'], ['message', '.', 'id']]), FunctionCall(name='printf', args=[['message data length: %d\\n\\r'], ['message', '.', 'data_length']]), FunctionCall(name='printf', args=[['%d '], ['message', '.', 'data', '[', 'i', ']']]), FunctionCall(name='printf', args=[['\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 MB0 ready to send \\n\\r']]), FunctionCall(name='printf', args=[['CAN0 ERRP error\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 timer overflow\\n\\r']]), FunctionCall(name='NVIC_ClearPendingIRQ', args=[['ID_CAN0']])])
/home/kristian/byggern-nicer_code/node2/can_interrupt.h
/home/kristian/byggern-nicer_code/node2/adc_driver.c
FunctionDef(name='adc_init', args=[[]], rettype='int', signature=['int', 'adc_init', 'void'], callees=[])
FunctionDef(name='adc_read', args=[[]], rettype='uint16_t', signature=['uint16_t', 'adc_read', 'void'], callees=[FunctionCall(name='printf', args=[['New goals! Total goals: %d\\n\\r'], ['goals']])])
FunctionDef(name='get_goals', args=[[]], rettype='uint8_t', signature=['uint8_t', 'get_goals', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/can_controller.h
/home/kristian/byggern-nicer_code/node2/motor_controller.c
FunctionDef(name='delay_micro', args=[['int', 'd']], rettype='void', signature=['void', 'delay_micro', 'int'], callees=[])
FunctionDef(name='motor_init', args=[['void']], rettype='void', signature=['void', 'motor_init', 'void'], callees=[])
FunctionDef(name='motor_read_encoder', args=[['void']], rettype='int16_t', signature=['int16_t', 'motor_read_encoder', 'void'], callees=[FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]])])
FunctionDef(name='PI_to_dacc', args=[['int16_t', 'padrag']], rettype='void', signature=['void', 'PI_to_dacc', 'int16_t'], callees=[FunctionCall(name='printf', args=[['Padrag: %x\\n\\r'], ['padrag', '/', 13107200.0]]), FunctionCall(name='dacc_write', args=[['(', 'int16_t', ')', 'padrag', '/', 13107200.0]])])
FunctionDef(name='motor_joystick_to_encoder', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'motor_joystick_to_encoder', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
FunctionDef(name='read_byte_encoder', args=[['void']], rettype='int8_t', signature=['int8_t', 'read_byte_encoder', 'void'], callees=[])
FunctionDef(name='get_motor_position', args=[['void']], rettype='int16_t', signature=['int16_t', 'get_motor_position', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pid.h
/home/kristian/byggern-nicer_code/node2/tc_driver.c
FunctionDef(name='tc_init', args=[[]], rettype='void', signature=['void', 'tc_init', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pwm_driver.h
/home/kristian/byggern-nicer_code/node2/motor_controller.h
/home/kristian/byggern-nicer_code/node2/dacc_driver.c
FunctionDef(name='dacc_init', args=[['void']], rettype='void', signature=['void', 'dacc_init', 'void'], callees=[FunctionCall(name='DACC_WPMR_WPKEY', args=[[0]]), FunctionCall(name='DACC_MR_REFRESH', args=[[24]])])
FunctionDef(name='dacc_write', args=[['uint16_t', 'word']], rettype='void', signature=['void', 'dacc_write', 'uint16_t'], callees=[])
FunctionDef(name='dacc_joystick_to_converter', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'dacc_joystick_to_converter', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
/home/kristian/byggern-nicer_code/node2/pid.c
FunctionDef(name='PI_init', args=[['int', 'kp'], ['int', 'ki'], ['int', 'T']], rettype='void', signature=['void', 'PI_init', 'int', 'int', 'int'], callees=[FunctionCall(name='printf', args=[['pos: %d'], ['PI_values', '.', 'pos']])])
FunctionDef(name='PI_update', args=[['uint8_t', 'pos_ref'], ['int16_t', 'encoder_value']], rettype='void', signature=['void', 'PI_update', 'uint8_t', 'int16_t'], callees=[FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='PI_to_dacc', args=[['padrag']])])
/home/kristian/byggern-nicer_code/node2/pwm_driver.c
FunctionDef(name='pwm_init', args=[[]], rettype='void', signature=['void', 'pwm_init', 'void'], callees=[FunctionCall(name='PWM_CLK_PREA', args=[[0]]), FunctionCall(name='PWM_CLK_DIVA', args=[[42]])])
FunctionDef(name='pwm_update_dc', args=[['uint32_t', 'dc']], rettype='int', signature=['int', 'pwm_update_dc', 'uint32_t'], callees=[FunctionCall(name='abs', args=[['delta']]), FunctionCall(name='printf', args=[['Writing %d into pwm , delta : %d \\n\\r'], ['dc'], ['delta']])])
FunctionDef(name='joystick_to_servo', args=[['uint8_t', 'x']], rettype='void', signature=['void', 'joystick_to_servo', 'uint8_t'], callees=[FunctionCall(name='pwm_update_dc', args=[[2650, '+', 10, '*', 'x']])])
/home/kristian/byggern-nicer_code/node2/adc_driver.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.c
FunctionDef(name='configure_uart', args=[['void']], rettype='void', signature=['void', 'configure_uart', 'void'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['(', 'IRQn_Type', ')', 'ID_UART']])])
FunctionDef(name='uart_getchar', args=[['uint8_t', '*', 'c']], rettype='int', signature=['int', 'uart_getchar', 'uint8_t*'], callees=[])
FunctionDef(name='uart_putchar', args=[['const', 'uint8_t', 'c']], rettype='int', signature=['int', 'uart_putchar', 'constuint8_t'], callees=[])
FunctionDef(name='UART_Handler', args=[['void']], rettype='void', signature=['void', 'UART_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['ERR: UART RX buffer is full\\n\\r']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.c
FunctionDef(name='printchar', args=[['char', '*', '*', 'str'], ['int', 'c']], rettype='void', signature=['void', 'printchar', 'char**', 'int'], callees=[FunctionCall(name='uart_putchar', args=[['c']])])
FunctionDef(name='prints', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'string'], ['int', 'width'], ['int', 'pad']], rettype='int', signature=['int', 'prints', 'char**', 'constchar*', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['padchar']]), FunctionCall(name='printchar', args=[['out'], ['*', 'string']]), FunctionCall(name='printchar', args=[['out'], ['padchar']])])
FunctionDef(name='printi', args=[['char', '*', '*', 'out'], ['int', 'i'], ['int', 'b'], ['int', 'sg'], ['int', 'width'], ['int', 'pad'], ['int', 'letbase']], rettype='int', signature=['int', 'printi', 'char**', 'int', 'int', 'int', 'int', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['-']]), FunctionCall(name='prints', args=[['out'], ['s'], ['width'], ['pad']])])
FunctionDef(name='print', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'format'], ['va_list', 'args']], rettype='int', signature=['int', 'print', 'char**', 'constchar*', 'va_list'], callees=[FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['s', 's', ':', '(null)'], ['width'], ['pad']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [1], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['A']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['scr'], ['width'], ['pad']]), FunctionCall(name='printchar', args=[['out'], ['*', 'format']]), FunctionCall(name='va_end', args=[['args']])])
FunctionDef(name='printf', args=[['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'printf', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='sprintf', args=[['char', '*', 'out'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'sprintf', 'char*', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='snprintf', args=[['char', '*', 'buf'], ['unsigned', 'int', 'count'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'snprintf', 'char*', 'unsignedint', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.h
/home/kristian/byggern-nicer_code/misc.c
FunctionDef(name='test_latch', args=[['void']], rettype='void', signature=['void', 'test_latch', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[['del']]), FunctionCall(name='_delay_ms', args=[[1000.0]])])
FunctionDef(name='test_jtag', args=[[]], rettype='void', signature=['void', 'test_jtag', 'void'], callees=[FunctionCall(name='_delay_ms', args=[['del']])])
FunctionDef(name='SRAM_test', args=[['void']], rettype='void', signature=['void', 'SRAM_test', 'void'], callees=[FunctionCall(name='printf', args=[['Starting SRAM test...\\n']]), FunctionCall(name='rand', args=[[]]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Write phase error: ext_ram[%4X] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='srand', args=[['seed']]), FunctionCall(name='printf', args=[['Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\\n'], ['i'], ['retreived_value'], ['some_value']]), FunctionCall(name='printf', args=[['SRAM test completed with \\n%4d errors in write phase and \\n%4d errors in retrieval phase\\n\\n'], ['write_errors'], ['retrieval_errors']])])
FunctionDef(name='test_slider', args=[['void']], rettype='void', signature=['void', 'test_slider', 'void'], callees=[FunctionCall(name='read_right_slider', args=[[]]), FunctionCall(name='read_left_slider', args=[[]]), FunctionCall(name='printf', args=[['\\033\\143']]), FunctionCall(name='printf', args=[['Right, left: %d %d'], ['right'], ['left']]), FunctionCall(name='_delay_ms', args=[[20]])])
FunctionDef(name='test_OLED_positioning', args=[[]], rettype='void', signature=['void', 'test_OLED_positioning', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[['i']]), FunctionCall(name='OLED_goto_column', args=[[10, '*', 'i']]), FunctionCall(name='OLED_write_string', args=[['string'], [5], [1]]), FunctionCall(name='_delay_ms', args=[[250]]), FunctionCall(name='OLED_home', args=[[]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_write_string', args=[['test1'], [5], [1]]), FunctionCall(name='OLED_clear_line', args=[[5]]), FunctionCall(name='OLED_pos', args=[['(', 'char', ')', 5], ['(', 'char', ')', 60]]), FunctionCall(name='OLED_write_string', args=[['test2'], [5], [1]])])
FunctionDef(name='read_adc_output_test', args=[['void']], rettype='void', signature=['void', 'read_adc_output_test', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['X channel value: %d \\n'], ['x_value']]), FunctionCall(name='y_channel_adc_read', args=[[]]), FunctionCall(name='printf', args=[['Y channel value: %d \\n'], ['y_value']])])
FunctionDef(name='bitwise_print', args=[['char', 'data'], ['char', '*', 'p']], rettype='void', signature=['void', 'bitwise_print', 'char', 'char*'], callees=[])
FunctionDef(name='print_can_message', args=[['can_message', '*', 'rec']], rettype='void', signature=['void', 'print_can_message', 'can_message*'], callees=[FunctionCall(name='printf', args=[['ID =%x\\n'], ['rec', '->', 'id']]), FunctionCall(name='printf', args=[['Data length = %d \\n'], ['rec', '->', 'data_length']]), FunctionCall(name='printf', args=[['d[%d] = %d\\n'], ['i'], ['(', 'char', ')', 'rec', '->', 'data', '[', 'i', ']']])])
/home/kristian/byggern-nicer_code/main.c
FunctionDef(name='main', args=[['void']], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='UART_init', args=[['MYUBRR']]), FunctionCall(name='ADC_init', args=[[]]), FunctionCall(name='OLED_init', args=[[]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_print_start_screen', args=[[]]), FunctionCall(name='init_menu', args=[[]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='SPI_init', args=[[]]), FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='CAN_init', args=[[]])])
/home/kristian/byggern-nicer_code/UART_driver.h
/home/kristian/byggern-nicer_code/fonts.h
/home/kristian/byggern-nicer_code/includes.h
/home/kristian/byggern-nicer_code/OLED_driver.h
/home/kristian/byggern-nicer_code/adc_driver.c
FunctionDef(name='ADC_init', args=[['void']], rettype='void', signature=['void', 'ADC_init', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='x_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'x_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='y_channel_adc_read', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'y_channel_adc_read', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='get_joystick_positions', args=[['void']], rettype='joystick_positions_t', signature=['joystick_positions_t', 'get_joystick_positions', 'void'], callees=[FunctionCall(name='x_channel_adc_read', args=[[]]), FunctionCall(name='y_channel_adc_read', args=[[]])])
FunctionDef(name='get_direction', args=[['void']], rettype='direction_t', signature=['direction_t', 'get_direction', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]])])
FunctionDef(name='read_left_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_left_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='read_right_slider', args=[['void']], rettype='uint8_t', signature=['uint8_t', 'read_right_slider', 'void'], callees=[FunctionCall(name='_delay_ms', args=[[1]])])
FunctionDef(name='direction_to_string', args=[['direction_t', 'dir']], rettype='char_p', signature=['char_p', 'direction_to_string', 'direction_t'], callees=[])
FunctionDef(name='get_right_button', args=[['void']], rettype='char', signature=['char', 'get_right_button', 'void'], callees=[])
FunctionDef(name='get_left_button', args=[['void']], rettype='char', signature=['char', 'get_left_button', 'void'], callees=[])
/home/kristian/byggern-nicer_code/UART_driver.c
FunctionDef(name='UART_init', args=[['unsigned', 'int', 'ubrr']], rettype='void', signature=['void', 'UART_init', 'unsignedint'], callees=[FunctionCall(name='fdevopen', args=[['put_char'], ['get_char']])])
FunctionDef(name='UART_transmit', args=[['unsigned', 'char', 'data']], rettype='void', signature=['void', 'UART_transmit', 'unsignedchar'], callees=[])
FunctionDef(name='UART_receive', args=[['void']], rettype='char', signature=['char', 'UART_receive', 'void'], callees=[])
FunctionDef(name='put_char', args=[['char', 'data'], ['FILE', '*', 'file']], rettype='int', signature=['int', 'put_char', 'char', 'FILE*'], callees=[FunctionCall(name='UART_transmit', args=[['r']]), FunctionCall(name='UART_transmit', args=[['data']])])
FunctionDef(name='get_char', args=[['FILE', '*', 'file']], rettype='int', signature=['int', 'get_char', 'FILE*'], callees=[])
/home/kristian/byggern-nicer_code/joystick_can.h
/home/kristian/byggern-nicer_code/CAN_driver.c
FunctionDef(name='ISR', args=[['INT0_vect']], rettype='#define CNF3 0b00101000', signature=['#define CNF3 0b00101000', 'ISR', 'void'], callees=[FunctionCall(name='cli', args=[[]]), FunctionCall(name='printf', args=[['vektor kjores\\n']]), FunctionCall(name='read_mcp_status', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='CAN_recieve', args=[['&', 'msg']]), FunctionCall(name='print_can_message', args=[['&', 'msg']]), FunctionCall(name='free', args=[['&', 'msg']]), FunctionCall(name='sei', args=[[]])])
FunctionDef(name='CAN_init', args=[[]], rettype='void', signature=['void', 'CAN_init', 'void'], callees=[FunctionCall(name='mcp_reset', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 3], ['CNF1']]), FunctionCall(name='write_mcp', args=[['0b', 10110001], ['CNF2']]), FunctionCall(name='write_mcp', args=[['0x', 5], ['CNF3']]), FunctionCall(name='cli', args=[[]]), FunctionCall(name='write_mcp', args=[['0x', 1], ['MCP_CANINTE']]), FunctionCall(name='sei', args=[[]]), FunctionCall(name='write_mcp', args=[['0b', 1100000], ['(', 'char', ')', '&', 'RXB0', '->', 'CTRL']]), FunctionCall(name='mcp_bit_modify', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CANCTRL'], ['0b', 11100000], ['0b', 0]])])
FunctionDef(name='CAN_transmit', args=[['can_message', '*', 'm']], rettype='int', signature=['int', 'CAN_transmit', 'can_message*'], callees=[FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'TXB0', '->', 'CTRL']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', 'm', '->', 'id', '>>', 3, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDH']]), FunctionCall(name='write_mcp', args=[['(', 'uint8_t', ')', '(', '(', 'm', '->', 'id', '&', '0x', 7, ')', '<<', 5, ')'], ['(', 'char', ')', '&', 'TXB0', '->', 'SIDL']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data_length'], ['(', 'char', ')', '&', 'TXB0', '->', 'DLC']]), FunctionCall(name='write_mcp', args=[['m', '->', 'data', '[', 'i', ']'], ['(', 'char', ')', '0b', 110110, '+', 'i']]), FunctionCall(name='RTS', args=[['0x', 1]])])
FunctionDef(name='CAN_recieve', args=[['can_message', '*', 'msg']], rettype='int', signature=['int', 'CAN_recieve', 'can_message*'], callees=[FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDH']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'SIDL']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '&', 'RXB0', '->', 'DLC']]), FunctionCall(name='read_mcp', args=[['(', 'char', ')', '0b', 1100110, '+', 'i']]), FunctionCall(name='write_mcp', args=[['0x', 0], ['CANINTF']]), FunctionCall(name='printf', args=[['CANINTF : %x \\n'], ['read_mcp', '(', 'CANINTF', ')']]), FunctionCall(name='read_mcp', args=[['CANINTF']])])
FunctionDef(name='ISR', args=[['BADISR_vect']], rettype='}', signature=['}', 'ISR', 'void'], callees=[])
/home/kristian/byggern-nicer_code/mcp2515.h
/home/kristian/byggern-nicer_code/misc.h
/home/kristian/byggern-nicer_code/MCP2515_driver.c
FunctionDef(name='read_mcp', args=[['char', 'address']], rettype='char', signature=['char', 'read_mcp', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 3]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='write_mcp', args=[['char', 'data'], ['char', 'address']], rettype='char', signature=['char', 'write_mcp', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 2]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='RTS', args=[['unsigned', 'char', 'buffer_number']], rettype='void', signature=['void', 'RTS', 'unsignedchar'], callees=[FunctionCall(name='printf', args=[['Invalid format']]), FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['command']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='read_mcp_status', args=[[]], rettype='char', signature=['char', 'read_mcp_status', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'A0']]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 0]]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_reset', args=[[]], rettype='void', signature=['void', 'mcp_reset', 'void'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 'C0']]), FunctionCall(name='set_SS_high', args=[[]])])
FunctionDef(name='mcp_bit_modify', args=[['char', 'address'], ['char', 'mask'], ['char', 'data']], rettype='void', signature=['void', 'mcp_bit_modify', 'char', 'char', 'char'], callees=[FunctionCall(name='set_SS_low', args=[[]]), FunctionCall(name='SPI_send_and_rec', args=[['0x', 5]]), FunctionCall(name='SPI_send_and_rec', args=[['address']]), FunctionCall(name='SPI_send_and_rec', args=[['mask']]), FunctionCall(name='SPI_send_and_rec', args=[['data']]), FunctionCall(name='set_SS_high', args=[[]])])
/home/kristian/byggern-nicer_code/OLED_driver.c
FunctionDef(name='write_command_OLED', args=[['char', 'command']], rettype='void', signature=['void', 'write_command_OLED', 'char'], callees=[])
FunctionDef(name='OLED_clear', args=[['void']], rettype='void', signature=['void', 'OLED_clear', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='write_d', args=[['0x', 0]])])
FunctionDef(name='OLED_init', args=[['void']], rettype='void', signature=['void', 'OLED_init', 'void'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 'ae']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a1']]), FunctionCall(name='write_command_OLED', args=[['0x', 'da']]), FunctionCall(name='write_command_OLED', args=[['0x', 12]]), FunctionCall(name='write_command_OLED', args=[['0x', 'c8']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a8']]), FunctionCall(name='write_command_OLED', args=[['0x', 3, 'f']]), FunctionCall(name='write_command_OLED', args=[['0x', 'd5']]), FunctionCall(name='write_command_OLED', args=[['0x', 80]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['0x', 50]]), FunctionCall(name='write_command_OLED', args=[['0x', 'd9']]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 2]]), FunctionCall(name='write_command_OLED', args=[['0x', 'db']]), FunctionCall(name='write_command_OLED', args=[['0x', 30]]), FunctionCall(name='write_command_OLED', args=[['0x', 'ad']]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 'a4']]), FunctionCall(name='write_command_OLED', args=[['0x', 'a6']]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']]), FunctionCall(name='write_command_OLED', args=[['0x', 20]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']]), FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['0x', 0]]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='write_command_OLED', args=[['0x', 'af']])])
FunctionDef(name='OLED_print_start_screen', args=[[]], rettype='void', signature=['void', 'OLED_print_start_screen', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[3]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['CYBERPUNK 2077'], [8], [1]]), FunctionCall(name='OLED_goto_line', args=[[5]]), FunctionCall(name='OLED_goto_column', args=[[10]]), FunctionCall(name='OLED_write_string', args=[['Press any button to start...'], [4], [1]]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[['i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']]), FunctionCall(name='_delay_ms', args=[[4]]), FunctionCall(name='write_command_OLED', args=[['0x', 81]]), FunctionCall(name='write_command_OLED', args=[[250, '-', 'i']]), FunctionCall(name='OLED_goto_line', args=[[0]]), FunctionCall(name='OLED_clear_line', args=[[0]]), FunctionCall(name='get_direction', args=[[]]), FunctionCall(name='OLED_write_string', args=[['direction_to_string', '(', 'dir2', ')'], [8], [1]]), FunctionCall(name='direction_to_string', args=[['dir2']])])
FunctionDef(name='write_d', args=[['char', 'data']], rettype='void', signature=['void', 'write_d', 'char'], callees=[])
FunctionDef(name='OLED_write_char', args=[['unsigned', 'char', 'karakter'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_char', 'unsignedchar', 'char', 'char'], callees=[FunctionCall(name='pgm_read_byte', args=[['&', 'font8', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font4', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']]), FunctionCall(name='pgm_read_byte', args=[['&', 'font5', '[', 'char_data', ']', '[', 'i', ']']]), FunctionCall(name='write_d', args=[['data_out']])])
FunctionDef(name='OLED_write_string', args=[['char', 'string', '[', ']'], ['char', 'size'], ['char', 'invert']], rettype='void', signature=['void', 'OLED_write_string', 'charstring[', 'char', 'char'], callees=[FunctionCall(name='OLED_write_char', args=[['string', '[', 'i', ']'], ['size'], ['invert']])])
FunctionDef(name='OLED_goto_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_goto_line', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 22]]), FunctionCall(name='write_command_OLED', args=[['line']]), FunctionCall(name='write_command_OLED', args=[['0x', 7]]), FunctionCall(name='OLED_goto_column', args=[[0]])])
FunctionDef(name='OLED_goto_column', args=[['char', 'column']], rettype='void', signature=['void', 'OLED_goto_column', 'char'], callees=[FunctionCall(name='write_command_OLED', args=[['0x', 21]]), FunctionCall(name='write_command_OLED', args=[['column']]), FunctionCall(name='write_command_OLED', args=[['0x', 7, 'F']])])
FunctionDef(name='OLED_clear_line', args=[['char', 'line']], rettype='void', signature=['void', 'OLED_clear_line', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='write_d', args=[['0x', 0]]), FunctionCall(name='OLED_goto_line', args=[['line']])])
FunctionDef(name='OLED_home', args=[[]], rettype='void', signature=['void', 'OLED_home', 'void'], callees=[FunctionCall(name='OLED_goto_line', args=[[0]])])
FunctionDef(name='OLED_pos', args=[['char', 'row'], ['char', 'column']], rettype='void', signature=['void', 'OLED_pos', 'char', 'char'], callees=[FunctionCall(name='OLED_goto_line', args=[['row']]), FunctionCall(name='OLED_goto_column', args=[['column']])])
/home/kristian/byggern-nicer_code/MCP2515_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.h
/home/kristian/byggern-nicer_code/menu.h
/home/kristian/byggern-nicer_code/joystick_can.c
FunctionDef(name='get_and_send_joystick_pos', args=[[]], rettype='void', signature=['void', 'get_and_send_joystick_pos', 'void'], callees=[FunctionCall(name='get_joystick_positions', args=[[]]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['pos', '.', 'x'], ['pos', '.', 'y']]), FunctionCall(name='CAN_transmit', args=[['&', 'msg']])])
/home/kristian/byggern-nicer_code/menu.c
FunctionDef(name='init_menu', args=[['void']], rettype='void', signature=['void', 'init_menu', 'void'], callees=[FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']]), FunctionCall(name='malloc', args=[['sizeof', '(', 'struct', 'Node', ')']])])
FunctionDef(name='print_menu', args=[[]], rettype='void', signature=['void', 'print_menu', 'void'], callees=[FunctionCall(name='OLED_clear', args=[[]]), FunctionCall(name='OLED_goto_line', args=[['line']]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [0]]), FunctionCall(name='OLED_write_string', args=[['n', '->', 'data'], [8], [1]])])
FunctionDef(name='menu_down', args=[[]], rettype='void', signature=['void', 'menu_down', 'void'], callees=[])
FunctionDef(name='menu_up', args=[[]], rettype='void', signature=['void', 'menu_up', 'void'], callees=[])
FunctionDef(name='menu_pos', args=[[]], rettype='Node_p', signature=['Node_p', 'menu_pos', 'void'], callees=[])
FunctionDef(name='menu_sub', args=[[]], rettype='void', signature=['void', 'menu_sub', 'void'], callees=[])
FunctionDef(name='menu_super', args=[[]], rettype='void', signature=['void', 'menu_super', 'void'], callees=[FunctionCall(name='get_head', args=[[]])])
FunctionDef(name='get_head', args=[[]], rettype='Node_p', signature=['Node_p', 'get_head', 'void'], callees=[])
/home/kristian/byggern-nicer_code/adc_driver.h
/home/kristian/byggern-nicer_code/SPI_driver.c
FunctionDef(name='SPI_init', args=[['void']], rettype='void', signature=['void', 'SPI_init', 'void'], callees=[])
FunctionDef(name='SPI_send_and_rec', args=[['char', 'data']], rettype='char', signature=['char', 'SPI_send_and_rec', 'char'], callees=[])
FunctionDef(name='set_SS_low', args=[[]], rettype='void', signature=['void', 'set_SS_low', 'void'], callees=[])
FunctionDef(name='set_SS_high', args=[[]], rettype='void', signature=['void', 'set_SS_high', 'void'], callees=[])
/home/kristian/byggern-nicer_code/CAN_driver.h
/home/kristian/byggern-nicer_code/node2/main.c
FunctionDef(name='delay', args=[['int', 'd']], rettype='void', signature=['void', 'delay', 'int'], callees=[])
FunctionDef(name='main', args=[[]], rettype='int', signature=['int', 'main', 'void'], callees=[FunctionCall(name='configure_uart', args=[[]]), FunctionCall(name='SystemInit', args=[[]]), FunctionCall(name='printf', args=[['Hello World\\n\\r']]), FunctionCall(name='printf', args=[['Klokkestatus er: %x \\n'], ['clokk']]), FunctionCall(name='printf', args=[['Klokkehastighet er: %d \\n'], ['clfq']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='pwm_init', args=[[]]), FunctionCall(name='adc_init', args=[[]]), FunctionCall(name='tc_init', args=[[]]), FunctionCall(name='dacc_init', args=[[]]), FunctionCall(name='motor_init', args=[[]]), FunctionCall(name='PI_init', args=[['kp'], ['ki'], ['t']]), FunctionCall(name='dacc_write', args=[['0x', 0]]), FunctionCall(name='can_receive', args=[['msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='can_send', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Sending\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'msg'], [1]]), FunctionCall(name='printf', args=[['Got a message on mailbox 1\\n \\r']]), FunctionCall(name='printf', args=[['One loop\\n\\r']]), FunctionCall(name='can_send', args=[['&', 'message'], [0]]), FunctionCall(name='printf', args=[['couldnt send\\n\\r']]), FunctionCall(name='printf', args=[['hei']]), FunctionCall(name='delay', args=[[1]]), FunctionCall(name='pwm_update_dc', args=[[2650, '+', 200, '*', 'i']]), FunctionCall(name='delay', args=[[100]]), FunctionCall(name='adc_read', args=[[]]), FunctionCall(name='dacc_write', args=[['0x', 0, 'FFF']]), FunctionCall(name='motor_joystick_to_encoder', args=[[255]]), FunctionCall(name='motor_read_encoder', args=[[]]), FunctionCall(name='can_receive', args=[['msg'], [0]]), FunctionCall(name='printf', args=[['Got a message on mailbox 0:)\\n\\r']]), FunctionCall(name='printf', args=[['ID = %x'], ['msg', '->', 'id']]), FunctionCall(name='printf', args=[['Data length: %x\\n\\r'], ['msg', '->', 'data_length']]), FunctionCall(name='printf', args=[['Data[%d] = %d\\n \\r'], ['i'], ['msg', '->', 'data', '[', 'i', ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='joystick_to_servo', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 0, ']']]), FunctionCall(name='motor_joystick_to_encoder', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='printf', args=[[' X: %d, Y: %d\\n\\r'], ['msg', '->', 'data', '[', 0, ']'], ['msg', '->', 'data', '[', 1, ']']]), FunctionCall(name='PI_update', args=[['(', 'uint8_t', ')', 'msg', '->', 'data', '[', 1, ']'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Sum of encoder values: %d \\n\\r'], ['get_motor_position', '(', ')']]), FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='printf', args=[['Encoder %d \\n\\r'], ['motor_read_encoder', '(', ')']]), FunctionCall(name='motor_read_encoder', args=[[]])])
/home/kristian/byggern-nicer_code/node2/dacc_driver.h
/home/kristian/byggern-nicer_code/node2/can_controller.c
FunctionDef(name='can_init_def_tx_rx_mb', args=[['uint32_t', 'can_br']], rettype='uint8_t', signature=['uint8_t', 'can_init_def_tx_rx_mb', 'uint32_t'], callees=[])
FunctionDef(name='can_init', args=[['uint32_t', 'can_br'], ['uint8_t', 'num_tx_mb'], ['uint8_t', 'num_rx_mb']], rettype='uint8_t', signature=['uint8_t', 'can_init', 'uint32_t', 'uint8_t', 'uint8_t'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['ID_CAN0']])])
FunctionDef(name='can_send', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'tx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_send', 'CAN_MESSAGE*', 'uint8_t'], callees=[FunctionCall(name='CAN_MID_MIDvA', args=[['can_msg', '->', 'id']]), FunctionCall(name='printf', args=[['d[7] = %d\\n\\r'], ['can_msg', '->', 'data', '[', 7, ']']])])
FunctionDef(name='can_receive', args=[['CAN_MESSAGE', '*', 'can_msg'], ['uint8_t', 'rx_mb_id']], rettype='uint8_t', signature=['uint8_t', 'can_receive', 'CAN_MESSAGE*', 'uint8_t'], callees=[])
/home/kristian/byggern-nicer_code/node2/tc_driver.h
/home/kristian/byggern-nicer_code/node2/can_interrupt.c
FunctionDef(name='CAN0_Handler', args=[['void']], rettype='void', signature=['void', 'CAN0_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['CAN0 interrupt\\n\\r']]), FunctionCall(name='can_receive', args=[['&', 'message'], [1]]), FunctionCall(name='can_receive', args=[['&', 'message'], [2]]), FunctionCall(name='printf', args=[['CAN0 message arrived in non-used mailbox\\n\\r']]), FunctionCall(name='printf', args=[['message id: %d\\n\\r'], ['message', '.', 'id']]), FunctionCall(name='printf', args=[['message data length: %d\\n\\r'], ['message', '.', 'data_length']]), FunctionCall(name='printf', args=[['%d '], ['message', '.', 'data', '[', 'i', ']']]), FunctionCall(name='printf', args=[['\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 MB0 ready to send \\n\\r']]), FunctionCall(name='printf', args=[['CAN0 ERRP error\\n\\r']]), FunctionCall(name='printf', args=[['CAN0 timer overflow\\n\\r']]), FunctionCall(name='NVIC_ClearPendingIRQ', args=[['ID_CAN0']])])
/home/kristian/byggern-nicer_code/node2/can_interrupt.h
/home/kristian/byggern-nicer_code/node2/adc_driver.c
FunctionDef(name='adc_init', args=[[]], rettype='int', signature=['int', 'adc_init', 'void'], callees=[])
FunctionDef(name='adc_read', args=[[]], rettype='uint16_t', signature=['uint16_t', 'adc_read', 'void'], callees=[FunctionCall(name='printf', args=[['New goals! Total goals: %d\\n\\r'], ['goals']])])
FunctionDef(name='get_goals', args=[[]], rettype='uint8_t', signature=['uint8_t', 'get_goals', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/can_controller.h
/home/kristian/byggern-nicer_code/node2/motor_controller.c
FunctionDef(name='delay_micro', args=[['int', 'd']], rettype='void', signature=['void', 'delay_micro', 'int'], callees=[])
FunctionDef(name='motor_init', args=[['void']], rettype='void', signature=['void', 'motor_init', 'void'], callees=[])
FunctionDef(name='motor_read_encoder', args=[['void']], rettype='int16_t', signature=['int16_t', 'motor_read_encoder', 'void'], callees=[FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]]), FunctionCall(name='read_byte_encoder', args=[[]]), FunctionCall(name='delay_micro', args=[[30]])])
FunctionDef(name='PI_to_dacc', args=[['int16_t', 'padrag']], rettype='void', signature=['void', 'PI_to_dacc', 'int16_t'], callees=[FunctionCall(name='printf', args=[['Padrag: %x\\n\\r'], ['padrag', '/', 13107200.0]]), FunctionCall(name='dacc_write', args=[['(', 'int16_t', ')', 'padrag', '/', 13107200.0]])])
FunctionDef(name='motor_joystick_to_encoder', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'motor_joystick_to_encoder', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
FunctionDef(name='read_byte_encoder', args=[['void']], rettype='int8_t', signature=['int8_t', 'read_byte_encoder', 'void'], callees=[])
FunctionDef(name='get_motor_position', args=[['void']], rettype='int16_t', signature=['int16_t', 'get_motor_position', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pid.h
/home/kristian/byggern-nicer_code/node2/tc_driver.c
FunctionDef(name='tc_init', args=[[]], rettype='void', signature=['void', 'tc_init', 'void'], callees=[])
/home/kristian/byggern-nicer_code/node2/pwm_driver.h
/home/kristian/byggern-nicer_code/node2/motor_controller.h
/home/kristian/byggern-nicer_code/node2/dacc_driver.c
FunctionDef(name='dacc_init', args=[['void']], rettype='void', signature=['void', 'dacc_init', 'void'], callees=[FunctionCall(name='DACC_WPMR_WPKEY', args=[[0]]), FunctionCall(name='DACC_MR_REFRESH', args=[[24]])])
FunctionDef(name='dacc_write', args=[['uint16_t', 'word']], rettype='void', signature=['void', 'dacc_write', 'uint16_t'], callees=[])
FunctionDef(name='dacc_joystick_to_converter', args=[['uint8_t', 'y']], rettype='void', signature=['void', 'dacc_joystick_to_converter', 'uint8_t'], callees=[FunctionCall(name='dacc_write', args=[['scaled_pos']])])
/home/kristian/byggern-nicer_code/node2/pid.c
FunctionDef(name='PI_init', args=[['int', 'kp'], ['int', 'ki'], ['int', 'T']], rettype='void', signature=['void', 'PI_init', 'int', 'int', 'int'], callees=[FunctionCall(name='printf', args=[['pos: %d'], ['PI_values', '.', 'pos']])])
FunctionDef(name='PI_update', args=[['uint8_t', 'pos_ref'], ['int16_t', 'encoder_value']], rettype='void', signature=['void', 'PI_update', 'uint8_t', 'int16_t'], callees=[FunctionCall(name='get_motor_position', args=[[]]), FunctionCall(name='PI_to_dacc', args=[['padrag']])])
/home/kristian/byggern-nicer_code/node2/pwm_driver.c
FunctionDef(name='pwm_init', args=[[]], rettype='void', signature=['void', 'pwm_init', 'void'], callees=[FunctionCall(name='PWM_CLK_PREA', args=[[0]]), FunctionCall(name='PWM_CLK_DIVA', args=[[42]])])
FunctionDef(name='pwm_update_dc', args=[['uint32_t', 'dc']], rettype='int', signature=['int', 'pwm_update_dc', 'uint32_t'], callees=[FunctionCall(name='abs', args=[['delta']]), FunctionCall(name='printf', args=[['Writing %d into pwm , delta : %d \\n\\r'], ['dc'], ['delta']])])
FunctionDef(name='joystick_to_servo', args=[['uint8_t', 'x']], rettype='void', signature=['void', 'joystick_to_servo', 'uint8_t'], callees=[FunctionCall(name='pwm_update_dc', args=[[2650, '+', 10, '*', 'x']])])
/home/kristian/byggern-nicer_code/node2/adc_driver.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.h
/home/kristian/byggern-nicer_code/node2/uart_and_printf/uart.c
FunctionDef(name='configure_uart', args=[['void']], rettype='void', signature=['void', 'configure_uart', 'void'], callees=[FunctionCall(name='NVIC_EnableIRQ', args=[['(', 'IRQn_Type', ')', 'ID_UART']])])
FunctionDef(name='uart_getchar', args=[['uint8_t', '*', 'c']], rettype='int', signature=['int', 'uart_getchar', 'uint8_t*'], callees=[])
FunctionDef(name='uart_putchar', args=[['const', 'uint8_t', 'c']], rettype='int', signature=['int', 'uart_putchar', 'constuint8_t'], callees=[])
FunctionDef(name='UART_Handler', args=[['void']], rettype='void', signature=['void', 'UART_Handler', 'void'], callees=[FunctionCall(name='printf', args=[['ERR: UART RX buffer is full\\n\\r']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.c
FunctionDef(name='printchar', args=[['char', '*', '*', 'str'], ['int', 'c']], rettype='void', signature=['void', 'printchar', 'char**', 'int'], callees=[FunctionCall(name='uart_putchar', args=[['c']])])
FunctionDef(name='prints', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'string'], ['int', 'width'], ['int', 'pad']], rettype='int', signature=['int', 'prints', 'char**', 'constchar*', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['padchar']]), FunctionCall(name='printchar', args=[['out'], ['*', 'string']]), FunctionCall(name='printchar', args=[['out'], ['padchar']])])
FunctionDef(name='printi', args=[['char', '*', '*', 'out'], ['int', 'i'], ['int', 'b'], ['int', 'sg'], ['int', 'width'], ['int', 'pad'], ['int', 'letbase']], rettype='int', signature=['int', 'printi', 'char**', 'int', 'int', 'int', 'int', 'int', 'int'], callees=[FunctionCall(name='printchar', args=[['out'], ['-']]), FunctionCall(name='prints', args=[['out'], ['s'], ['width'], ['pad']])])
FunctionDef(name='print', args=[['char', '*', '*', 'out'], ['const', 'char', '*', 'format'], ['va_list', 'args']], rettype='int', signature=['int', 'print', 'char**', 'constchar*', 'va_list'], callees=[FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['s', 's', ':', '(null)'], ['width'], ['pad']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [1], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [16], [0], ['width'], ['pad'], ['A']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='printi', args=[['out'], ['va_arg', '(', 'args', 'int', ')'], [10], [0], ['width'], ['pad'], ['a']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='va_arg', args=[['args'], ['int']]), FunctionCall(name='prints', args=[['out'], ['scr'], ['width'], ['pad']]), FunctionCall(name='printchar', args=[['out'], ['*', 'format']]), FunctionCall(name='va_end', args=[['args']])])
FunctionDef(name='printf', args=[['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'printf', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='sprintf', args=[['char', '*', 'out'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'sprintf', 'char*', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
FunctionDef(name='snprintf', args=[['char', '*', 'buf'], ['unsigned', 'int', 'count'], ['const', 'char', '*', 'format'], ['...']], rettype='int', signature=['int', 'snprintf', 'char*', 'unsignedint', 'constchar*', '...'], callees=[FunctionCall(name='va_start', args=[['args'], ['format']])])
/home/kristian/byggern-nicer_code/node2/uart_and_printf/printf-stdarg.h
